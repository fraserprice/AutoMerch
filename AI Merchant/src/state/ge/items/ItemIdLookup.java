package state.ge.items;

import java.util.HashMap;
import java.util.Map;
import java.util.Set;
import java.util.stream.Collectors;

public class ItemIdLookup {

    // Returns -1 if itemName refers to multiple ids
    public static int getId(String itemName) {
        Set<Map.Entry<Integer, ItemInfo>> items = ITEM_ID_MAP.entrySet()
                .stream()
                .filter(e -> e.getValue().getItemName().equals(itemName)).collect(Collectors.toSet());
        if(items.size() > 1) {
            return -1;
        }
        return items.iterator().next().getKey();
    }

    public static String getItemName(int itemId) {
        return ITEM_ID_MAP.get(itemId).getItemName();
    }

    public static boolean isMembers(int itemId) {
        return ITEM_ID_MAP.get(itemId).isMembers();
    }

    private static Map<Integer, ItemInfo> ITEM_ID_MAP = new HashMap<>();
    
    static {
        ITEM_ID_MAP.put(2, new ItemInfo("Cannonball",true));
        ITEM_ID_MAP.put(6, new ItemInfo("Cannon base",true));
        ITEM_ID_MAP.put(8, new ItemInfo("Cannon stand",true));
        ITEM_ID_MAP.put(10, new ItemInfo("Cannon barrels",true));
        ITEM_ID_MAP.put(12, new ItemInfo("Cannon furnace",true));
        ITEM_ID_MAP.put(28, new ItemInfo("Insect repellent",true));
        ITEM_ID_MAP.put(30, new ItemInfo("Bucket of wax",true));
        ITEM_ID_MAP.put(36, new ItemInfo("Candle",true));
        ITEM_ID_MAP.put(39, new ItemInfo("Bronze arrowtips",true));
        ITEM_ID_MAP.put(40, new ItemInfo("Iron arrowtips",true));
        ITEM_ID_MAP.put(41, new ItemInfo("Steel arrowtips",true));
        ITEM_ID_MAP.put(42, new ItemInfo("Mithril arrowtips",true));
        ITEM_ID_MAP.put(43, new ItemInfo("Adamant arrowtips",true));
        ITEM_ID_MAP.put(44, new ItemInfo("Rune arrowtips",true));
        ITEM_ID_MAP.put(45, new ItemInfo("Opal bolt tips",true));
        ITEM_ID_MAP.put(46, new ItemInfo("Pearl bolt tips",true));
        ITEM_ID_MAP.put(47, new ItemInfo("Barb bolttips",true));
        ITEM_ID_MAP.put(48, new ItemInfo("Longbow (u)",true));
        ITEM_ID_MAP.put(50, new ItemInfo("Shortbow (u)",true));
        ITEM_ID_MAP.put(52, new ItemInfo("Arrow shaft",true));
        ITEM_ID_MAP.put(53, new ItemInfo("Headless arrow",true));
        ITEM_ID_MAP.put(54, new ItemInfo("Oak shortbow (u)",true));
        ITEM_ID_MAP.put(56, new ItemInfo("Oak longbow (u)",true));
        ITEM_ID_MAP.put(58, new ItemInfo("Willow longbow (u)",true));
        ITEM_ID_MAP.put(60, new ItemInfo("Willow shortbow (u)",true));
        ITEM_ID_MAP.put(62, new ItemInfo("Maple longbow (u)",true));
        ITEM_ID_MAP.put(64, new ItemInfo("Maple shortbow (u)",true));
        ITEM_ID_MAP.put(66, new ItemInfo("Yew longbow (u)",true));
        ITEM_ID_MAP.put(68, new ItemInfo("Yew shortbow (u)",true));
        ITEM_ID_MAP.put(70, new ItemInfo("Magic longbow (u)",true));
        ITEM_ID_MAP.put(72, new ItemInfo("Magic shortbow (u)",true));
        ITEM_ID_MAP.put(91, new ItemInfo("Guam potion (unf)",true));
        ITEM_ID_MAP.put(93, new ItemInfo("Marrentill potion (unf)",true));
        ITEM_ID_MAP.put(95, new ItemInfo("Tarromin potion (unf)",true));
        ITEM_ID_MAP.put(97, new ItemInfo("Harralander potion (unf)",true));
        ITEM_ID_MAP.put(99, new ItemInfo("Ranarr potion (unf)",true));
        ITEM_ID_MAP.put(101, new ItemInfo("Irit potion (unf)",true));
        ITEM_ID_MAP.put(103, new ItemInfo("Avantoe potion (unf)",true));
        ITEM_ID_MAP.put(105, new ItemInfo("Kwuarm potion (unf)",true));
        ITEM_ID_MAP.put(107, new ItemInfo("Cadantine potion (unf)",true));
        ITEM_ID_MAP.put(109, new ItemInfo("Dwarf weed potion (unf)",true));
        ITEM_ID_MAP.put(111, new ItemInfo("Torstol potion (unf)",true));
        ITEM_ID_MAP.put(113, new ItemInfo("Strength potion(4)",false));
        ITEM_ID_MAP.put(115, new ItemInfo("Strength potion(3)",false));
        ITEM_ID_MAP.put(117, new ItemInfo("Strength potion(2)",false));
        ITEM_ID_MAP.put(119, new ItemInfo("Strength potion(1)",false));
        ITEM_ID_MAP.put(121, new ItemInfo("Attack potion(3)",true));
        ITEM_ID_MAP.put(123, new ItemInfo("Attack potion(2)",true));
        ITEM_ID_MAP.put(125, new ItemInfo("Attack potion(1)",true));
        ITEM_ID_MAP.put(127, new ItemInfo("Restore potion(3)",true));
        ITEM_ID_MAP.put(129, new ItemInfo("Restore potion(2)",true));
        ITEM_ID_MAP.put(131, new ItemInfo("Restore potion(1)",true));
        ITEM_ID_MAP.put(133, new ItemInfo("Defence potion(3)",true));
        ITEM_ID_MAP.put(135, new ItemInfo("Defence potion(2)",true));
        ITEM_ID_MAP.put(137, new ItemInfo("Defence potion(1)",true));
        ITEM_ID_MAP.put(139, new ItemInfo("Prayer potion(3)",true));
        ITEM_ID_MAP.put(141, new ItemInfo("Prayer potion(2)",true));
        ITEM_ID_MAP.put(143, new ItemInfo("Prayer potion(1)",true));
        ITEM_ID_MAP.put(145, new ItemInfo("Super attack(3)",true));
        ITEM_ID_MAP.put(147, new ItemInfo("Super attack(2)",true));
        ITEM_ID_MAP.put(149, new ItemInfo("Super attack(1)",true));
        ITEM_ID_MAP.put(151, new ItemInfo("Fishing potion(3)",true));
        ITEM_ID_MAP.put(153, new ItemInfo("Fishing potion(2)",true));
        ITEM_ID_MAP.put(155, new ItemInfo("Fishing potion(1)",true));
        ITEM_ID_MAP.put(157, new ItemInfo("Super strength(3)",true));
        ITEM_ID_MAP.put(159, new ItemInfo("Super strength(2)",true));
        ITEM_ID_MAP.put(161, new ItemInfo("Super strength(1)",true));
        ITEM_ID_MAP.put(163, new ItemInfo("Super defence(3)",true));
        ITEM_ID_MAP.put(165, new ItemInfo("Super defence(2)",true));
        ITEM_ID_MAP.put(167, new ItemInfo("Super defence(1)",true));
        ITEM_ID_MAP.put(169, new ItemInfo("Ranging potion(3)",true));
        ITEM_ID_MAP.put(171, new ItemInfo("Ranging potion(2)",true));
        ITEM_ID_MAP.put(173, new ItemInfo("Ranging potion(1)",true));
        ITEM_ID_MAP.put(175, new ItemInfo("Antipoison(3)",true));
        ITEM_ID_MAP.put(177, new ItemInfo("Antipoison(2)",true));
        ITEM_ID_MAP.put(179, new ItemInfo("Antipoison(1)",true));
        ITEM_ID_MAP.put(181, new ItemInfo("Superantipoison(3)",true));
        ITEM_ID_MAP.put(183, new ItemInfo("Superantipoison(2)",true));
        ITEM_ID_MAP.put(185, new ItemInfo("Superantipoison(1)",true));
        ITEM_ID_MAP.put(187, new ItemInfo("Weapon poison",true));
        ITEM_ID_MAP.put(189, new ItemInfo("Zamorak brew(3)",true));
        ITEM_ID_MAP.put(191, new ItemInfo("Zamorak brew(2)",true));
        ITEM_ID_MAP.put(193, new ItemInfo("Zamorak brew(1)",true));
        ITEM_ID_MAP.put(197, new ItemInfo("Poison chalice",true));
        ITEM_ID_MAP.put(199, new ItemInfo("Grimy guam leaf",true));
        ITEM_ID_MAP.put(201, new ItemInfo("Grimy marrentill",true));
        ITEM_ID_MAP.put(203, new ItemInfo("Grimy tarromin",true));
        ITEM_ID_MAP.put(205, new ItemInfo("Grimy harralander",true));
        ITEM_ID_MAP.put(207, new ItemInfo("Grimy ranarr weed",true));
        ITEM_ID_MAP.put(209, new ItemInfo("Grimy irit leaf",true));
        ITEM_ID_MAP.put(211, new ItemInfo("Grimy avantoe",true));
        ITEM_ID_MAP.put(213, new ItemInfo("Grimy kwuarm",true));
        ITEM_ID_MAP.put(215, new ItemInfo("Grimy cadantine",true));
        ITEM_ID_MAP.put(217, new ItemInfo("Grimy dwarf weed",true));
        ITEM_ID_MAP.put(219, new ItemInfo("Grimy torstol",true));
        ITEM_ID_MAP.put(221, new ItemInfo("Eye of newt",false));
        ITEM_ID_MAP.put(223, new ItemInfo("Red spiders' eggs",false));
        ITEM_ID_MAP.put(225, new ItemInfo("Limpwurt root",false));
        ITEM_ID_MAP.put(227, new ItemInfo("Vial of water",false));
        ITEM_ID_MAP.put(229, new ItemInfo("Vial",false));
        ITEM_ID_MAP.put(231, new ItemInfo("Snape grass",true));
        ITEM_ID_MAP.put(233, new ItemInfo("Pestle and mortar",true));
        ITEM_ID_MAP.put(235, new ItemInfo("Unicorn horn dust",true));
        ITEM_ID_MAP.put(237, new ItemInfo("Unicorn horn",true));
        ITEM_ID_MAP.put(239, new ItemInfo("White berries",true));
        ITEM_ID_MAP.put(241, new ItemInfo("Dragon scale dust",true));
        ITEM_ID_MAP.put(243, new ItemInfo("Blue dragon scale",true));
        ITEM_ID_MAP.put(245, new ItemInfo("Wine of zamorak",false));
        ITEM_ID_MAP.put(247, new ItemInfo("Jangerberries",true));
        ITEM_ID_MAP.put(249, new ItemInfo("Guam leaf",true));
        ITEM_ID_MAP.put(251, new ItemInfo("Marrentill",true));
        ITEM_ID_MAP.put(253, new ItemInfo("Tarromin",true));
        ITEM_ID_MAP.put(255, new ItemInfo("Harralander",true));
        ITEM_ID_MAP.put(257, new ItemInfo("Ranarr weed",true));
        ITEM_ID_MAP.put(259, new ItemInfo("Irit leaf",true));
        ITEM_ID_MAP.put(261, new ItemInfo("Avantoe",true));
        ITEM_ID_MAP.put(263, new ItemInfo("Kwuarm",true));
        ITEM_ID_MAP.put(265, new ItemInfo("Cadantine",true));
        ITEM_ID_MAP.put(267, new ItemInfo("Dwarf weed",true));
        ITEM_ID_MAP.put(269, new ItemInfo("Torstol",true));
        ITEM_ID_MAP.put(272, new ItemInfo("Fish food",false));
        ITEM_ID_MAP.put(273, new ItemInfo("Poison",false));
        ITEM_ID_MAP.put(288, new ItemInfo("Goblin mail",false));
        ITEM_ID_MAP.put(299, new ItemInfo("Mithril seeds",true));
        ITEM_ID_MAP.put(301, new ItemInfo("Lobster pot",false));
        ITEM_ID_MAP.put(303, new ItemInfo("Small fishing net",false));
        ITEM_ID_MAP.put(305, new ItemInfo("Big fishing net",true));
        ITEM_ID_MAP.put(307, new ItemInfo("Fishing rod",false));
        ITEM_ID_MAP.put(309, new ItemInfo("Fly fishing rod",false));
        ITEM_ID_MAP.put(311, new ItemInfo("Harpoon",false));
        ITEM_ID_MAP.put(313, new ItemInfo("Fishing bait",false));
        ITEM_ID_MAP.put(314, new ItemInfo("Feather",false));
        ITEM_ID_MAP.put(315, new ItemInfo("Shrimps",false));
        ITEM_ID_MAP.put(317, new ItemInfo("Raw shrimps",false));
        ITEM_ID_MAP.put(319, new ItemInfo("Anchovies",false));
        ITEM_ID_MAP.put(321, new ItemInfo("Raw anchovies",false));
        ITEM_ID_MAP.put(325, new ItemInfo("Sardine",false));
        ITEM_ID_MAP.put(327, new ItemInfo("Raw sardine",false));
        ITEM_ID_MAP.put(329, new ItemInfo("Salmon",false));
        ITEM_ID_MAP.put(331, new ItemInfo("Raw salmon",false));
        ITEM_ID_MAP.put(333, new ItemInfo("Trout",false));
        ITEM_ID_MAP.put(335, new ItemInfo("Raw trout",false));
        ITEM_ID_MAP.put(339, new ItemInfo("Cod",true));
        ITEM_ID_MAP.put(341, new ItemInfo("Raw cod",true));
        ITEM_ID_MAP.put(345, new ItemInfo("Raw herring",false));
        ITEM_ID_MAP.put(347, new ItemInfo("Herring",false));
        ITEM_ID_MAP.put(349, new ItemInfo("Raw pike",false));
        ITEM_ID_MAP.put(351, new ItemInfo("Pike",false));
        ITEM_ID_MAP.put(353, new ItemInfo("Raw mackerel",true));
        ITEM_ID_MAP.put(355, new ItemInfo("Mackerel",true));
        ITEM_ID_MAP.put(359, new ItemInfo("Raw tuna",false));
        ITEM_ID_MAP.put(361, new ItemInfo("Tuna",false));
        ITEM_ID_MAP.put(363, new ItemInfo("Raw bass",true));
        ITEM_ID_MAP.put(365, new ItemInfo("Bass",true));
        ITEM_ID_MAP.put(371, new ItemInfo("Raw swordfish",false));
        ITEM_ID_MAP.put(373, new ItemInfo("Swordfish",false));
        ITEM_ID_MAP.put(377, new ItemInfo("Raw lobster",false));
        ITEM_ID_MAP.put(379, new ItemInfo("Lobster",false));
        ITEM_ID_MAP.put(383, new ItemInfo("Raw shark",true));
        ITEM_ID_MAP.put(385, new ItemInfo("Shark",true));
        ITEM_ID_MAP.put(389, new ItemInfo("Raw manta ray",true));
        ITEM_ID_MAP.put(391, new ItemInfo("Manta ray",true));
        ITEM_ID_MAP.put(395, new ItemInfo("Raw sea turtle",true));
        ITEM_ID_MAP.put(397, new ItemInfo("Sea turtle",true));
        ITEM_ID_MAP.put(401, new ItemInfo("Seaweed",true));
        ITEM_ID_MAP.put(403, new ItemInfo("Edible seaweed",true));
        ITEM_ID_MAP.put(405, new ItemInfo("Casket",true));
        ITEM_ID_MAP.put(407, new ItemInfo("Oyster",true));
        ITEM_ID_MAP.put(411, new ItemInfo("Oyster pearl",true));
        ITEM_ID_MAP.put(413, new ItemInfo("Oyster pearls",true));
        ITEM_ID_MAP.put(426, new ItemInfo("Priest gown",false));
        ITEM_ID_MAP.put(428, new ItemInfo("Priest gown",false));
        ITEM_ID_MAP.put(434, new ItemInfo("Clay",false));
        ITEM_ID_MAP.put(436, new ItemInfo("Copper ore",false));
        ITEM_ID_MAP.put(438, new ItemInfo("Tin ore",false));
        ITEM_ID_MAP.put(440, new ItemInfo("Iron ore",false));
        ITEM_ID_MAP.put(442, new ItemInfo("Silver ore",false));
        ITEM_ID_MAP.put(444, new ItemInfo("Gold ore",false));
        ITEM_ID_MAP.put(447, new ItemInfo("Mithril ore",false));
        ITEM_ID_MAP.put(449, new ItemInfo("Adamantite ore",false));
        ITEM_ID_MAP.put(451, new ItemInfo("Runite ore",false));
        ITEM_ID_MAP.put(453, new ItemInfo("Coal",false));
        ITEM_ID_MAP.put(464, new ItemInfo("Strange fruit",true));
        ITEM_ID_MAP.put(526, new ItemInfo("Bones",false));
        ITEM_ID_MAP.put(528, new ItemInfo("Burnt bones",false));
        ITEM_ID_MAP.put(530, new ItemInfo("Bat bones",true));
        ITEM_ID_MAP.put(532, new ItemInfo("Big bones",false));
        ITEM_ID_MAP.put(534, new ItemInfo("Babydragon bones",true));
        ITEM_ID_MAP.put(536, new ItemInfo("Dragon bones",true));
        ITEM_ID_MAP.put(538, new ItemInfo("Druid's robe",true));
        ITEM_ID_MAP.put(540, new ItemInfo("Druid's robe top",true));
        ITEM_ID_MAP.put(542, new ItemInfo("Monk's robe",false));
        ITEM_ID_MAP.put(544, new ItemInfo("Monk's robe top",false));
        ITEM_ID_MAP.put(546, new ItemInfo("Shade robe top",false));
        ITEM_ID_MAP.put(548, new ItemInfo("Shade robe",false));
        ITEM_ID_MAP.put(554, new ItemInfo("Fire rune",false));
        ITEM_ID_MAP.put(555, new ItemInfo("Water rune",false));
        ITEM_ID_MAP.put(556, new ItemInfo("Air rune",false));
        ITEM_ID_MAP.put(557, new ItemInfo("Earth rune",false));
        ITEM_ID_MAP.put(558, new ItemInfo("Mind rune",false));
        ITEM_ID_MAP.put(559, new ItemInfo("Body rune",false));
        ITEM_ID_MAP.put(560, new ItemInfo("Death rune",false));
        ITEM_ID_MAP.put(561, new ItemInfo("Nature rune",false));
        ITEM_ID_MAP.put(562, new ItemInfo("Chaos rune",false));
        ITEM_ID_MAP.put(563, new ItemInfo("Law rune",false));
        ITEM_ID_MAP.put(564, new ItemInfo("Cosmic rune",false));
        ITEM_ID_MAP.put(565, new ItemInfo("Blood rune",true));
        ITEM_ID_MAP.put(566, new ItemInfo("Soul rune",true));
        ITEM_ID_MAP.put(567, new ItemInfo("Unpowered orb",true));
        ITEM_ID_MAP.put(569, new ItemInfo("Fire orb",true));
        ITEM_ID_MAP.put(571, new ItemInfo("Water orb",true));
        ITEM_ID_MAP.put(573, new ItemInfo("Air orb",true));
        ITEM_ID_MAP.put(575, new ItemInfo("Earth orb",true));
        ITEM_ID_MAP.put(577, new ItemInfo("Blue wizard robe",false));
        ITEM_ID_MAP.put(579, new ItemInfo("Blue wizard hat",false));
        ITEM_ID_MAP.put(581, new ItemInfo("Black robe",false));
        ITEM_ID_MAP.put(590, new ItemInfo("Tinderbox",false));
        ITEM_ID_MAP.put(592, new ItemInfo("Ashes",false));
        ITEM_ID_MAP.put(596, new ItemInfo("Unlit torch",true));
        ITEM_ID_MAP.put(621, new ItemInfo("Ship ticket",true));
        ITEM_ID_MAP.put(626, new ItemInfo("Pink boots",true));
        ITEM_ID_MAP.put(628, new ItemInfo("Green boots",true));
        ITEM_ID_MAP.put(630, new ItemInfo("Blue boots",true));
        ITEM_ID_MAP.put(632, new ItemInfo("Cream boots",true));
        ITEM_ID_MAP.put(634, new ItemInfo("Turquoise boots",true));
        ITEM_ID_MAP.put(636, new ItemInfo("Pink robe top",true));
        ITEM_ID_MAP.put(638, new ItemInfo("Green robe top",true));
        ITEM_ID_MAP.put(640, new ItemInfo("Blue robe top",true));
        ITEM_ID_MAP.put(642, new ItemInfo("Cream robe top",true));
        ITEM_ID_MAP.put(644, new ItemInfo("Turquoise robe top",true));
        ITEM_ID_MAP.put(646, new ItemInfo("Pink robe bottoms",true));
        ITEM_ID_MAP.put(648, new ItemInfo("Green robe bottoms",true));
        ITEM_ID_MAP.put(650, new ItemInfo("Blue robe bottoms",true));
        ITEM_ID_MAP.put(652, new ItemInfo("Cream robe bottoms",true));
        ITEM_ID_MAP.put(654, new ItemInfo("Turquoise robe bottoms",true));
        ITEM_ID_MAP.put(656, new ItemInfo("Pink hat",true));
        ITEM_ID_MAP.put(658, new ItemInfo("Green hat",true));
        ITEM_ID_MAP.put(660, new ItemInfo("Blue hat",true));
        ITEM_ID_MAP.put(662, new ItemInfo("Cream hat",true));
        ITEM_ID_MAP.put(664, new ItemInfo("Turquoise hat",true));
        ITEM_ID_MAP.put(751, new ItemInfo("Gnomeball",true));
        ITEM_ID_MAP.put(753, new ItemInfo("Cadava berries",false));
        ITEM_ID_MAP.put(800, new ItemInfo("Bronze thrownaxe",true));
        ITEM_ID_MAP.put(801, new ItemInfo("Iron thrownaxe",true));
        ITEM_ID_MAP.put(802, new ItemInfo("Steel thrownaxe",true));
        ITEM_ID_MAP.put(803, new ItemInfo("Mithril thrownaxe",true));
        ITEM_ID_MAP.put(804, new ItemInfo("Adamant thrownaxe",true));
        ITEM_ID_MAP.put(805, new ItemInfo("Rune thrownaxe",true));
        ITEM_ID_MAP.put(806, new ItemInfo("Bronze dart",true));
        ITEM_ID_MAP.put(807, new ItemInfo("Iron dart",true));
        ITEM_ID_MAP.put(808, new ItemInfo("Steel dart",true));
        ITEM_ID_MAP.put(809, new ItemInfo("Mithril dart",true));
        ITEM_ID_MAP.put(810, new ItemInfo("Adamant dart",true));
        ITEM_ID_MAP.put(811, new ItemInfo("Rune dart",true));
        ITEM_ID_MAP.put(812, new ItemInfo("Bronze dart(p)",true));
        ITEM_ID_MAP.put(813, new ItemInfo("Iron dart(p)",true));
        ITEM_ID_MAP.put(814, new ItemInfo("Steel dart(p)",true));
        ITEM_ID_MAP.put(815, new ItemInfo("Mithril dart(p)",true));
        ITEM_ID_MAP.put(816, new ItemInfo("Adamant dart(p)",true));
        ITEM_ID_MAP.put(817, new ItemInfo("Rune dart(p)",true));
        ITEM_ID_MAP.put(819, new ItemInfo("Bronze dart tip",true));
        ITEM_ID_MAP.put(820, new ItemInfo("Iron dart tip",true));
        ITEM_ID_MAP.put(821, new ItemInfo("Steel dart tip",true));
        ITEM_ID_MAP.put(822, new ItemInfo("Mithril dart tip",true));
        ITEM_ID_MAP.put(823, new ItemInfo("Adamant dart tip",true));
        ITEM_ID_MAP.put(824, new ItemInfo("Rune dart tip",true));
        ITEM_ID_MAP.put(825, new ItemInfo("Bronze javelin",true));
        ITEM_ID_MAP.put(826, new ItemInfo("Iron javelin",true));
        ITEM_ID_MAP.put(827, new ItemInfo("Steel javelin",true));
        ITEM_ID_MAP.put(828, new ItemInfo("Mithril javelin",true));
        ITEM_ID_MAP.put(829, new ItemInfo("Adamant javelin",true));
        ITEM_ID_MAP.put(830, new ItemInfo("Rune javelin",true));
        ITEM_ID_MAP.put(831, new ItemInfo("Bronze javelin(p)",true));
        ITEM_ID_MAP.put(832, new ItemInfo("Iron javelin(p)",true));
        ITEM_ID_MAP.put(833, new ItemInfo("Steel javelin(p)",true));
        ITEM_ID_MAP.put(834, new ItemInfo("Mithril javelin(p)",true));
        ITEM_ID_MAP.put(835, new ItemInfo("Adamant javelin(p)",true));
        ITEM_ID_MAP.put(836, new ItemInfo("Rune javelin(p)",true));
        ITEM_ID_MAP.put(837, new ItemInfo("Crossbow",false));
        ITEM_ID_MAP.put(839, new ItemInfo("Longbow",false));
        ITEM_ID_MAP.put(841, new ItemInfo("Shortbow",false));
        ITEM_ID_MAP.put(843, new ItemInfo("Oak shortbow",false));
        ITEM_ID_MAP.put(845, new ItemInfo("Oak longbow",false));
        ITEM_ID_MAP.put(847, new ItemInfo("Willow longbow",false));
        ITEM_ID_MAP.put(849, new ItemInfo("Willow shortbow",false));
        ITEM_ID_MAP.put(851, new ItemInfo("Maple longbow",false));
        ITEM_ID_MAP.put(853, new ItemInfo("Maple shortbow",false));
        ITEM_ID_MAP.put(855, new ItemInfo("Yew longbow",true));
        ITEM_ID_MAP.put(857, new ItemInfo("Yew shortbow",true));
        ITEM_ID_MAP.put(859, new ItemInfo("Magic longbow",true));
        ITEM_ID_MAP.put(861, new ItemInfo("Magic shortbow",true));
        ITEM_ID_MAP.put(863, new ItemInfo("Iron knife",true));
        ITEM_ID_MAP.put(864, new ItemInfo("Bronze knife",true));
        ITEM_ID_MAP.put(865, new ItemInfo("Steel knife",true));
        ITEM_ID_MAP.put(866, new ItemInfo("Mithril knife",true));
        ITEM_ID_MAP.put(867, new ItemInfo("Adamant knife",true));
        ITEM_ID_MAP.put(868, new ItemInfo("Rune knife",true));
        ITEM_ID_MAP.put(869, new ItemInfo("Black knife",true));
        ITEM_ID_MAP.put(870, new ItemInfo("Bronze knife(p)",true));
        ITEM_ID_MAP.put(871, new ItemInfo("Iron knife(p)",true));
        ITEM_ID_MAP.put(872, new ItemInfo("Steel knife(p)",true));
        ITEM_ID_MAP.put(873, new ItemInfo("Mithril knife(p)",true));
        ITEM_ID_MAP.put(874, new ItemInfo("Black knife(p)",true));
        ITEM_ID_MAP.put(875, new ItemInfo("Adamant knife(p)",true));
        ITEM_ID_MAP.put(876, new ItemInfo("Rune knife(p)",true));
        ITEM_ID_MAP.put(877, new ItemInfo("Bronze bolts",false));
        ITEM_ID_MAP.put(878, new ItemInfo("Bronze bolts(p)",true));
        ITEM_ID_MAP.put(879, new ItemInfo("Opal bolts",true));
        ITEM_ID_MAP.put(880, new ItemInfo("Pearl bolts",true));
        ITEM_ID_MAP.put(881, new ItemInfo("Barbed bolts",true));
        ITEM_ID_MAP.put(882, new ItemInfo("Bronze arrow",false));
        ITEM_ID_MAP.put(883, new ItemInfo("Bronze arrow(p)",true));
        ITEM_ID_MAP.put(884, new ItemInfo("Iron arrow",false));
        ITEM_ID_MAP.put(885, new ItemInfo("Iron arrow(p)",true));
        ITEM_ID_MAP.put(886, new ItemInfo("Steel arrow",false));
        ITEM_ID_MAP.put(887, new ItemInfo("Steel arrow(p)",true));
        ITEM_ID_MAP.put(888, new ItemInfo("Mithril arrow",false));
        ITEM_ID_MAP.put(889, new ItemInfo("Mithril arrow(p)",true));
        ITEM_ID_MAP.put(890, new ItemInfo("Adamant arrow",false));
        ITEM_ID_MAP.put(891, new ItemInfo("Adamant arrow(p)",true));
        ITEM_ID_MAP.put(892, new ItemInfo("Rune arrow",true));
        ITEM_ID_MAP.put(893, new ItemInfo("Rune arrow(p)",true));
        ITEM_ID_MAP.put(946, new ItemInfo("Knife",false));
        ITEM_ID_MAP.put(948, new ItemInfo("Bear fur",false));
        ITEM_ID_MAP.put(950, new ItemInfo("Silk",false));
        ITEM_ID_MAP.put(952, new ItemInfo("Spade",false));
        ITEM_ID_MAP.put(954, new ItemInfo("Rope",false));
        ITEM_ID_MAP.put(958, new ItemInfo("Grey wolf fur",true));
        ITEM_ID_MAP.put(960, new ItemInfo("Plank",false));
        ITEM_ID_MAP.put(962, new ItemInfo("Christmas cracker",false));
        ITEM_ID_MAP.put(970, new ItemInfo("Papyrus",true));
        ITEM_ID_MAP.put(973, new ItemInfo("Charcoal",false));
        ITEM_ID_MAP.put(975, new ItemInfo("Machete",true));
        ITEM_ID_MAP.put(981, new ItemInfo("Disk of returning",false));
        ITEM_ID_MAP.put(983, new ItemInfo("Brass key",false));
        ITEM_ID_MAP.put(985, new ItemInfo("Tooth half of key",true));
        ITEM_ID_MAP.put(987, new ItemInfo("Loop half of key",true));
        ITEM_ID_MAP.put(989, new ItemInfo("Crystal key",true));
        ITEM_ID_MAP.put(991, new ItemInfo("Muddy key",false));
        ITEM_ID_MAP.put(993, new ItemInfo("Sinister key",true));
        ITEM_ID_MAP.put(1005, new ItemInfo("White apron",false));
        ITEM_ID_MAP.put(1007, new ItemInfo("Red cape",false));
        ITEM_ID_MAP.put(1009, new ItemInfo("Brass necklace",false));
        ITEM_ID_MAP.put(1011, new ItemInfo("Blue skirt",false));
        ITEM_ID_MAP.put(1013, new ItemInfo("Pink skirt",false));
        ITEM_ID_MAP.put(1015, new ItemInfo("Black skirt",false));
        ITEM_ID_MAP.put(1017, new ItemInfo("Wizard hat",false));
        ITEM_ID_MAP.put(1019, new ItemInfo("Black cape",false));
        ITEM_ID_MAP.put(1021, new ItemInfo("Blue cape",false));
        ITEM_ID_MAP.put(1023, new ItemInfo("Yellow cape",false));
        ITEM_ID_MAP.put(1025, new ItemInfo("Eye patch",true));
        ITEM_ID_MAP.put(1027, new ItemInfo("Green cape",false));
        ITEM_ID_MAP.put(1029, new ItemInfo("Purple cape",false));
        ITEM_ID_MAP.put(1031, new ItemInfo("Orange cape",false));
        ITEM_ID_MAP.put(1033, new ItemInfo("Zamorak robe",true));
        ITEM_ID_MAP.put(1035, new ItemInfo("Zamorak robe",true));
        ITEM_ID_MAP.put(1038, new ItemInfo("Red partyhat",false));
        ITEM_ID_MAP.put(1040, new ItemInfo("Yellow partyhat",false));
        ITEM_ID_MAP.put(1042, new ItemInfo("Blue partyhat",false));
        ITEM_ID_MAP.put(1044, new ItemInfo("Green partyhat",false));
        ITEM_ID_MAP.put(1046, new ItemInfo("Purple partyhat",false));
        ITEM_ID_MAP.put(1048, new ItemInfo("White partyhat",false));
        ITEM_ID_MAP.put(1050, new ItemInfo("Santa hat",false));
        ITEM_ID_MAP.put(1053, new ItemInfo("Green halloween mask",false));
        ITEM_ID_MAP.put(1055, new ItemInfo("Blue halloween mask",false));
        ITEM_ID_MAP.put(1057, new ItemInfo("Red halloween mask",false));
        ITEM_ID_MAP.put(1059, new ItemInfo("Leather gloves",false));
        ITEM_ID_MAP.put(1061, new ItemInfo("Leather boots",false));
        ITEM_ID_MAP.put(1063, new ItemInfo("Leather vambraces",false));
        ITEM_ID_MAP.put(1065, new ItemInfo("Green d'hide vamb",false));
        ITEM_ID_MAP.put(1067, new ItemInfo("Iron platelegs",false));
        ITEM_ID_MAP.put(1069, new ItemInfo("Steel platelegs",false));
        ITEM_ID_MAP.put(1071, new ItemInfo("Mithril platelegs",false));
        ITEM_ID_MAP.put(1073, new ItemInfo("Adamant platelegs",false));
        ITEM_ID_MAP.put(1075, new ItemInfo("Bronze platelegs",false));
        ITEM_ID_MAP.put(1077, new ItemInfo("Black platelegs",false));
        ITEM_ID_MAP.put(1079, new ItemInfo("Rune platelegs",false));
        ITEM_ID_MAP.put(1081, new ItemInfo("Iron plateskirt",false));
        ITEM_ID_MAP.put(1083, new ItemInfo("Steel plateskirt",false));
        ITEM_ID_MAP.put(1085, new ItemInfo("Mithril plateskirt",false));
        ITEM_ID_MAP.put(1087, new ItemInfo("Bronze plateskirt",false));
        ITEM_ID_MAP.put(1089, new ItemInfo("Black plateskirt",false));
        ITEM_ID_MAP.put(1091, new ItemInfo("Adamant plateskirt",false));
        ITEM_ID_MAP.put(1093, new ItemInfo("Rune plateskirt",false));
        ITEM_ID_MAP.put(1095, new ItemInfo("Leather chaps",false));
        ITEM_ID_MAP.put(1097, new ItemInfo("Studded chaps",false));
        ITEM_ID_MAP.put(1099, new ItemInfo("Green d'hide chaps",false));
        ITEM_ID_MAP.put(1101, new ItemInfo("Iron chainbody",false));
        ITEM_ID_MAP.put(1103, new ItemInfo("Bronze chainbody",false));
        ITEM_ID_MAP.put(1105, new ItemInfo("Steel chainbody",false));
        ITEM_ID_MAP.put(1107, new ItemInfo("Black chainbody",false));
        ITEM_ID_MAP.put(1109, new ItemInfo("Mithril chainbody",false));
        ITEM_ID_MAP.put(1111, new ItemInfo("Adamant chainbody",false));
        ITEM_ID_MAP.put(1113, new ItemInfo("Rune chainbody",false));
        ITEM_ID_MAP.put(1115, new ItemInfo("Iron platebody",false));
        ITEM_ID_MAP.put(1117, new ItemInfo("Bronze platebody",false));
        ITEM_ID_MAP.put(1119, new ItemInfo("Steel platebody",false));
        ITEM_ID_MAP.put(1121, new ItemInfo("Mithril platebody",false));
        ITEM_ID_MAP.put(1123, new ItemInfo("Adamant platebody",false));
        ITEM_ID_MAP.put(1125, new ItemInfo("Black platebody",false));
        ITEM_ID_MAP.put(1127, new ItemInfo("Rune platebody",false));
        ITEM_ID_MAP.put(1129, new ItemInfo("Leather body",false));
        ITEM_ID_MAP.put(1131, new ItemInfo("Hardleather body",false));
        ITEM_ID_MAP.put(1133, new ItemInfo("Studded body",false));
        ITEM_ID_MAP.put(1135, new ItemInfo("Green d'hide body",false));
        ITEM_ID_MAP.put(1137, new ItemInfo("Iron med helm",false));
        ITEM_ID_MAP.put(1139, new ItemInfo("Bronze med helm",false));
        ITEM_ID_MAP.put(1141, new ItemInfo("Steel med helm",false));
        ITEM_ID_MAP.put(1143, new ItemInfo("Mithril med helm",false));
        ITEM_ID_MAP.put(1145, new ItemInfo("Adamant med helm",false));
        ITEM_ID_MAP.put(1147, new ItemInfo("Rune med helm",false));
        ITEM_ID_MAP.put(1149, new ItemInfo("Dragon med helm",true));
        ITEM_ID_MAP.put(1151, new ItemInfo("Black med helm",false));
        ITEM_ID_MAP.put(1153, new ItemInfo("Iron full helm",false));
        ITEM_ID_MAP.put(1155, new ItemInfo("Bronze full helm",false));
        ITEM_ID_MAP.put(1157, new ItemInfo("Steel full helm",false));
        ITEM_ID_MAP.put(1159, new ItemInfo("Mithril full helm",false));
        ITEM_ID_MAP.put(1161, new ItemInfo("Adamant full helm",false));
        ITEM_ID_MAP.put(1163, new ItemInfo("Rune full helm",false));
        ITEM_ID_MAP.put(1165, new ItemInfo("Black full helm",false));
        ITEM_ID_MAP.put(1167, new ItemInfo("Leather cowl",false));
        ITEM_ID_MAP.put(1169, new ItemInfo("Coif",false));
        ITEM_ID_MAP.put(1171, new ItemInfo("Wooden shield",false));
        ITEM_ID_MAP.put(1173, new ItemInfo("Bronze sq shield",false));
        ITEM_ID_MAP.put(1175, new ItemInfo("Iron sq shield",false));
        ITEM_ID_MAP.put(1177, new ItemInfo("Steel sq shield",false));
        ITEM_ID_MAP.put(1179, new ItemInfo("Black sq shield",false));
        ITEM_ID_MAP.put(1181, new ItemInfo("Mithril sq shield",false));
        ITEM_ID_MAP.put(1183, new ItemInfo("Adamant sq shield",false));
        ITEM_ID_MAP.put(1185, new ItemInfo("Rune sq shield",false));
        ITEM_ID_MAP.put(1187, new ItemInfo("Dragon sq shield",true));
        ITEM_ID_MAP.put(1189, new ItemInfo("Bronze kiteshield",false));
        ITEM_ID_MAP.put(1191, new ItemInfo("Iron kiteshield",false));
        ITEM_ID_MAP.put(1193, new ItemInfo("Steel kiteshield",false));
        ITEM_ID_MAP.put(1195, new ItemInfo("Black kiteshield",false));
        ITEM_ID_MAP.put(1197, new ItemInfo("Mithril kiteshield",false));
        ITEM_ID_MAP.put(1199, new ItemInfo("Adamant kiteshield",false));
        ITEM_ID_MAP.put(1201, new ItemInfo("Rune kiteshield",false));
        ITEM_ID_MAP.put(1203, new ItemInfo("Iron dagger",false));
        ITEM_ID_MAP.put(1205, new ItemInfo("Bronze dagger",false));
        ITEM_ID_MAP.put(1207, new ItemInfo("Steel dagger",false));
        ITEM_ID_MAP.put(1209, new ItemInfo("Mithril dagger",false));
        ITEM_ID_MAP.put(1211, new ItemInfo("Adamant dagger",false));
        ITEM_ID_MAP.put(1213, new ItemInfo("Rune dagger",false));
        ITEM_ID_MAP.put(1215, new ItemInfo("Dragon dagger",true));
        ITEM_ID_MAP.put(1217, new ItemInfo("Black dagger",false));
        ITEM_ID_MAP.put(1219, new ItemInfo("Iron dagger(p)",true));
        ITEM_ID_MAP.put(1221, new ItemInfo("Bronze dagger(p)",true));
        ITEM_ID_MAP.put(1223, new ItemInfo("Steel dagger(p)",true));
        ITEM_ID_MAP.put(1225, new ItemInfo("Mithril dagger(p)",true));
        ITEM_ID_MAP.put(1227, new ItemInfo("Adamant dagger(p)",true));
        ITEM_ID_MAP.put(1229, new ItemInfo("Rune dagger(p)",true));
        ITEM_ID_MAP.put(1231, new ItemInfo("Dragon dagger(p)",true));
        ITEM_ID_MAP.put(1233, new ItemInfo("Black dagger(p)",true));
        ITEM_ID_MAP.put(1237, new ItemInfo("Bronze spear",true));
        ITEM_ID_MAP.put(1239, new ItemInfo("Iron spear",true));
        ITEM_ID_MAP.put(1241, new ItemInfo("Steel spear",true));
        ITEM_ID_MAP.put(1243, new ItemInfo("Mithril spear",true));
        ITEM_ID_MAP.put(1245, new ItemInfo("Adamant spear",true));
        ITEM_ID_MAP.put(1247, new ItemInfo("Rune spear",true));
        ITEM_ID_MAP.put(1249, new ItemInfo("Dragon spear",true));
        ITEM_ID_MAP.put(1251, new ItemInfo("Bronze spear(p)",true));
        ITEM_ID_MAP.put(1253, new ItemInfo("Iron spear(p)",true));
        ITEM_ID_MAP.put(1255, new ItemInfo("Steel spear(p)",true));
        ITEM_ID_MAP.put(1257, new ItemInfo("Mithril spear(p)",true));
        ITEM_ID_MAP.put(1259, new ItemInfo("Adamant spear(p)",true));
        ITEM_ID_MAP.put(1261, new ItemInfo("Rune spear(p)",true));
        ITEM_ID_MAP.put(1263, new ItemInfo("Dragon spear(p)",true));
        ITEM_ID_MAP.put(1265, new ItemInfo("Bronze pickaxe",false));
        ITEM_ID_MAP.put(1267, new ItemInfo("Iron pickaxe",false));
        ITEM_ID_MAP.put(1269, new ItemInfo("Steel pickaxe",false));
        ITEM_ID_MAP.put(1271, new ItemInfo("Adamant pickaxe",false));
        ITEM_ID_MAP.put(1273, new ItemInfo("Mithril pickaxe",false));
        ITEM_ID_MAP.put(1275, new ItemInfo("Rune pickaxe",false));
        ITEM_ID_MAP.put(1277, new ItemInfo("Bronze sword",false));
        ITEM_ID_MAP.put(1279, new ItemInfo("Iron sword",false));
        ITEM_ID_MAP.put(1281, new ItemInfo("Steel sword",false));
        ITEM_ID_MAP.put(1283, new ItemInfo("Black sword",false));
        ITEM_ID_MAP.put(1285, new ItemInfo("Mithril sword",false));
        ITEM_ID_MAP.put(1287, new ItemInfo("Adamant sword",false));
        ITEM_ID_MAP.put(1289, new ItemInfo("Rune sword",false));
        ITEM_ID_MAP.put(1291, new ItemInfo("Bronze longsword",false));
        ITEM_ID_MAP.put(1293, new ItemInfo("Iron longsword",false));
        ITEM_ID_MAP.put(1295, new ItemInfo("Steel longsword",false));
        ITEM_ID_MAP.put(1297, new ItemInfo("Black longsword",false));
        ITEM_ID_MAP.put(1299, new ItemInfo("Mithril longsword",false));
        ITEM_ID_MAP.put(1301, new ItemInfo("Adamant longsword",false));
        ITEM_ID_MAP.put(1303, new ItemInfo("Rune longsword",false));
        ITEM_ID_MAP.put(1305, new ItemInfo("Dragon longsword",true));
        ITEM_ID_MAP.put(1307, new ItemInfo("Bronze 2h sword",false));
        ITEM_ID_MAP.put(1309, new ItemInfo("Iron 2h sword",false));
        ITEM_ID_MAP.put(1311, new ItemInfo("Steel 2h sword",false));
        ITEM_ID_MAP.put(1313, new ItemInfo("Black 2h sword",false));
        ITEM_ID_MAP.put(1315, new ItemInfo("Mithril 2h sword",false));
        ITEM_ID_MAP.put(1317, new ItemInfo("Adamant 2h sword",false));
        ITEM_ID_MAP.put(1319, new ItemInfo("Rune 2h sword",false));
        ITEM_ID_MAP.put(1321, new ItemInfo("Bronze scimitar",false));
        ITEM_ID_MAP.put(1323, new ItemInfo("Iron scimitar",false));
        ITEM_ID_MAP.put(1325, new ItemInfo("Steel scimitar",false));
        ITEM_ID_MAP.put(1327, new ItemInfo("Black scimitar",false));
        ITEM_ID_MAP.put(1329, new ItemInfo("Mithril scimitar",false));
        ITEM_ID_MAP.put(1331, new ItemInfo("Adamant scimitar",false));
        ITEM_ID_MAP.put(1333, new ItemInfo("Rune scimitar",false));
        ITEM_ID_MAP.put(1335, new ItemInfo("Iron warhammer",false));
        ITEM_ID_MAP.put(1337, new ItemInfo("Bronze warhammer",false));
        ITEM_ID_MAP.put(1339, new ItemInfo("Steel warhammer",false));
        ITEM_ID_MAP.put(1341, new ItemInfo("Black warhammer",false));
        ITEM_ID_MAP.put(1343, new ItemInfo("Mithril warhammer",false));
        ITEM_ID_MAP.put(1345, new ItemInfo("Adamant warhammer",false));
        ITEM_ID_MAP.put(1347, new ItemInfo("Rune warhammer",false));
        ITEM_ID_MAP.put(1349, new ItemInfo("Iron axe",false));
        ITEM_ID_MAP.put(1351, new ItemInfo("Bronze axe",false));
        ITEM_ID_MAP.put(1353, new ItemInfo("Steel axe",false));
        ITEM_ID_MAP.put(1355, new ItemInfo("Mithril axe",false));
        ITEM_ID_MAP.put(1357, new ItemInfo("Adamant axe",false));
        ITEM_ID_MAP.put(1359, new ItemInfo("Rune axe",false));
        ITEM_ID_MAP.put(1361, new ItemInfo("Black axe",false));
        ITEM_ID_MAP.put(1363, new ItemInfo("Iron battleaxe",false));
        ITEM_ID_MAP.put(1365, new ItemInfo("Steel battleaxe",false));
        ITEM_ID_MAP.put(1367, new ItemInfo("Black battleaxe",false));
        ITEM_ID_MAP.put(1369, new ItemInfo("Mithril battleaxe",false));
        ITEM_ID_MAP.put(1371, new ItemInfo("Adamant battleaxe",false));
        ITEM_ID_MAP.put(1373, new ItemInfo("Rune battleaxe",false));
        ITEM_ID_MAP.put(1375, new ItemInfo("Bronze battleaxe",false));
        ITEM_ID_MAP.put(1377, new ItemInfo("Dragon battleaxe",true));
        ITEM_ID_MAP.put(1379, new ItemInfo("Staff",false));
        ITEM_ID_MAP.put(1381, new ItemInfo("Staff of air",false));
        ITEM_ID_MAP.put(1383, new ItemInfo("Staff of water",false));
        ITEM_ID_MAP.put(1385, new ItemInfo("Staff of earth",false));
        ITEM_ID_MAP.put(1387, new ItemInfo("Staff of fire",false));
        ITEM_ID_MAP.put(1389, new ItemInfo("Magic staff",false));
        ITEM_ID_MAP.put(1391, new ItemInfo("Battlestaff",true));
        ITEM_ID_MAP.put(1393, new ItemInfo("Fire battlestaff",true));
        ITEM_ID_MAP.put(1395, new ItemInfo("Water battlestaff",true));
        ITEM_ID_MAP.put(1397, new ItemInfo("Air battlestaff",true));
        ITEM_ID_MAP.put(1399, new ItemInfo("Earth battlestaff",true));
        ITEM_ID_MAP.put(1401, new ItemInfo("Mystic fire staff",true));
        ITEM_ID_MAP.put(1403, new ItemInfo("Mystic water staff",true));
        ITEM_ID_MAP.put(1405, new ItemInfo("Mystic air staff",true));
        ITEM_ID_MAP.put(1407, new ItemInfo("Mystic earth staff",true));
        ITEM_ID_MAP.put(1420, new ItemInfo("Iron mace",false));
        ITEM_ID_MAP.put(1422, new ItemInfo("Bronze mace",false));
        ITEM_ID_MAP.put(1424, new ItemInfo("Steel mace",false));
        ITEM_ID_MAP.put(1426, new ItemInfo("Black mace",false));
        ITEM_ID_MAP.put(1428, new ItemInfo("Mithril mace",false));
        ITEM_ID_MAP.put(1430, new ItemInfo("Adamant mace",false));
        ITEM_ID_MAP.put(1432, new ItemInfo("Rune mace",false));
        ITEM_ID_MAP.put(1434, new ItemInfo("Dragon mace",true));
        ITEM_ID_MAP.put(1436, new ItemInfo("Rune essence",false));
        ITEM_ID_MAP.put(1438, new ItemInfo("Air talisman",false));
        ITEM_ID_MAP.put(1440, new ItemInfo("Earth talisman",false));
        ITEM_ID_MAP.put(1442, new ItemInfo("Fire talisman",false));
        ITEM_ID_MAP.put(1444, new ItemInfo("Water talisman",false));
        ITEM_ID_MAP.put(1446, new ItemInfo("Body talisman",false));
        ITEM_ID_MAP.put(1448, new ItemInfo("Mind talisman",false));
        ITEM_ID_MAP.put(1452, new ItemInfo("Chaos talisman",true));
        ITEM_ID_MAP.put(1454, new ItemInfo("Cosmic talisman",true));
        ITEM_ID_MAP.put(1456, new ItemInfo("Death talisman",true));
        ITEM_ID_MAP.put(1462, new ItemInfo("Nature talisman",true));
        ITEM_ID_MAP.put(1464, new ItemInfo("Archery ticket",true));
        ITEM_ID_MAP.put(1470, new ItemInfo("Red bead",false));
        ITEM_ID_MAP.put(1472, new ItemInfo("Yellow bead",false));
        ITEM_ID_MAP.put(1474, new ItemInfo("Black bead",false));
        ITEM_ID_MAP.put(1476, new ItemInfo("White bead",false));
        ITEM_ID_MAP.put(1478, new ItemInfo("Amulet of accuracy",false));
        ITEM_ID_MAP.put(1511, new ItemInfo("Logs",false));
        ITEM_ID_MAP.put(1513, new ItemInfo("Magic logs",true));
        ITEM_ID_MAP.put(1515, new ItemInfo("Yew logs",false));
        ITEM_ID_MAP.put(1517, new ItemInfo("Maple logs",false));
        ITEM_ID_MAP.put(1519, new ItemInfo("Willow logs",false));
        ITEM_ID_MAP.put(1521, new ItemInfo("Oak logs",false));
        ITEM_ID_MAP.put(1523, new ItemInfo("Lockpick",true));
        ITEM_ID_MAP.put(1539, new ItemInfo("Steel nails",false));
        ITEM_ID_MAP.put(1540, new ItemInfo("Anti-dragon shield",false));
        ITEM_ID_MAP.put(1550, new ItemInfo("Garlic",false));
        ITEM_ID_MAP.put(1552, new ItemInfo("Seasoned sardine",true));
        ITEM_ID_MAP.put(1573, new ItemInfo("Doogle leaves",true));
        ITEM_ID_MAP.put(1592, new ItemInfo("Ring mould",false));
        ITEM_ID_MAP.put(1595, new ItemInfo("Amulet mould",false));
        ITEM_ID_MAP.put(1597, new ItemInfo("Necklace mould",false));
        ITEM_ID_MAP.put(1599, new ItemInfo("Holy mould",false));
        ITEM_ID_MAP.put(1601, new ItemInfo("Diamond",false));
        ITEM_ID_MAP.put(1603, new ItemInfo("Ruby",false));
        ITEM_ID_MAP.put(1605, new ItemInfo("Emerald",false));
        ITEM_ID_MAP.put(1607, new ItemInfo("Sapphire",false));
        ITEM_ID_MAP.put(1609, new ItemInfo("Opal",true));
        ITEM_ID_MAP.put(1611, new ItemInfo("Jade",true));
        ITEM_ID_MAP.put(1613, new ItemInfo("Red topaz",true));
        ITEM_ID_MAP.put(1615, new ItemInfo("Dragonstone",true));
        ITEM_ID_MAP.put(1617, new ItemInfo("Uncut diamond",false));
        ITEM_ID_MAP.put(1619, new ItemInfo("Uncut ruby",false));
        ITEM_ID_MAP.put(1621, new ItemInfo("Uncut emerald",false));
        ITEM_ID_MAP.put(1623, new ItemInfo("Uncut sapphire",false));
        ITEM_ID_MAP.put(1625, new ItemInfo("Uncut opal",true));
        ITEM_ID_MAP.put(1627, new ItemInfo("Uncut jade",true));
        ITEM_ID_MAP.put(1629, new ItemInfo("Uncut red topaz",true));
        ITEM_ID_MAP.put(1631, new ItemInfo("Uncut dragonstone",true));
        ITEM_ID_MAP.put(1635, new ItemInfo("Gold ring",false));
        ITEM_ID_MAP.put(1637, new ItemInfo("Sapphire ring",false));
        ITEM_ID_MAP.put(1639, new ItemInfo("Emerald ring",false));
        ITEM_ID_MAP.put(1641, new ItemInfo("Ruby ring",false));
        ITEM_ID_MAP.put(1643, new ItemInfo("Diamond ring",false));
        ITEM_ID_MAP.put(1645, new ItemInfo("Dragonstone ring",true));
        ITEM_ID_MAP.put(1654, new ItemInfo("Gold necklace",false));
        ITEM_ID_MAP.put(1656, new ItemInfo("Sapphire necklace",false));
        ITEM_ID_MAP.put(1658, new ItemInfo("Emerald necklace",false));
        ITEM_ID_MAP.put(1660, new ItemInfo("Ruby necklace",false));
        ITEM_ID_MAP.put(1662, new ItemInfo("Diamond necklace",false));
        ITEM_ID_MAP.put(1664, new ItemInfo("Dragon necklace",true));
        ITEM_ID_MAP.put(1673, new ItemInfo("Gold amulet (u)",false));
        ITEM_ID_MAP.put(1675, new ItemInfo("Sapphire amulet (u)",false));
        ITEM_ID_MAP.put(1677, new ItemInfo("Emerald amulet (u)",false));
        ITEM_ID_MAP.put(1679, new ItemInfo("Ruby amulet (u)",false));
        ITEM_ID_MAP.put(1681, new ItemInfo("Diamond amulet (u)",false));
        ITEM_ID_MAP.put(1683, new ItemInfo("Dragonstone amulet (u)",true));
        ITEM_ID_MAP.put(1692, new ItemInfo("Gold amulet",false));
        ITEM_ID_MAP.put(1694, new ItemInfo("Sapphire amulet",false));
        ITEM_ID_MAP.put(1696, new ItemInfo("Emerald amulet",false));
        ITEM_ID_MAP.put(1698, new ItemInfo("Ruby amulet",false));
        ITEM_ID_MAP.put(1700, new ItemInfo("Diamond amulet",false));
        ITEM_ID_MAP.put(1702, new ItemInfo("Dragonstone amulet",true));
        ITEM_ID_MAP.put(1704, new ItemInfo("Amulet of glory",true));
        ITEM_ID_MAP.put(1712, new ItemInfo("Amulet of glory(4)",true));
        ITEM_ID_MAP.put(1714, new ItemInfo("Unstrung symbol",false));
        ITEM_ID_MAP.put(1716, new ItemInfo("Unblessed symbol",false));
        ITEM_ID_MAP.put(1718, new ItemInfo("Holy symbol",false));
        ITEM_ID_MAP.put(1720, new ItemInfo("Unstrung emblem",true));
        ITEM_ID_MAP.put(1722, new ItemInfo("Unpowered symbol",true));
        ITEM_ID_MAP.put(1724, new ItemInfo("Unholy symbol",true));
        ITEM_ID_MAP.put(1725, new ItemInfo("Amulet of strength",false));
        ITEM_ID_MAP.put(1727, new ItemInfo("Amulet of magic",false));
        ITEM_ID_MAP.put(1729, new ItemInfo("Amulet of defence",false));
        ITEM_ID_MAP.put(1731, new ItemInfo("Amulet of power",false));
        ITEM_ID_MAP.put(1733, new ItemInfo("Needle",false));
        ITEM_ID_MAP.put(1734, new ItemInfo("Thread",false));
        ITEM_ID_MAP.put(1735, new ItemInfo("Shears",false));
        ITEM_ID_MAP.put(1737, new ItemInfo("Wool",false));
        ITEM_ID_MAP.put(1739, new ItemInfo("Cowhide",false));
        ITEM_ID_MAP.put(1741, new ItemInfo("Leather",false));
        ITEM_ID_MAP.put(1743, new ItemInfo("Hard leather",false));
        ITEM_ID_MAP.put(1745, new ItemInfo("Green dragon leather",true));
        ITEM_ID_MAP.put(1747, new ItemInfo("Black dragonhide",true));
        ITEM_ID_MAP.put(1749, new ItemInfo("Red dragonhide",true));
        ITEM_ID_MAP.put(1751, new ItemInfo("Blue dragonhide",true));
        ITEM_ID_MAP.put(1753, new ItemInfo("Green dragonhide",true));
        ITEM_ID_MAP.put(1755, new ItemInfo("Chisel",false));
        ITEM_ID_MAP.put(1757, new ItemInfo("Brown apron",false));
        ITEM_ID_MAP.put(1759, new ItemInfo("Ball of wool",false));
        ITEM_ID_MAP.put(1761, new ItemInfo("Soft clay",false));
        ITEM_ID_MAP.put(1763, new ItemInfo("Red dye",false));
        ITEM_ID_MAP.put(1765, new ItemInfo("Yellow dye",false));
        ITEM_ID_MAP.put(1767, new ItemInfo("Blue dye",false));
        ITEM_ID_MAP.put(1769, new ItemInfo("Orange dye",false));
        ITEM_ID_MAP.put(1771, new ItemInfo("Green dye",false));
        ITEM_ID_MAP.put(1773, new ItemInfo("Purple dye",false));
        ITEM_ID_MAP.put(1775, new ItemInfo("Molten glass",true));
        ITEM_ID_MAP.put(1777, new ItemInfo("Bow string",true));
        ITEM_ID_MAP.put(1779, new ItemInfo("Flax",true));
        ITEM_ID_MAP.put(1781, new ItemInfo("Soda ash",true));
        ITEM_ID_MAP.put(1783, new ItemInfo("Bucket of sand",true));
        ITEM_ID_MAP.put(1785, new ItemInfo("Glassblowing pipe",true));
        ITEM_ID_MAP.put(1787, new ItemInfo("Unfired pot",false));
        ITEM_ID_MAP.put(1789, new ItemInfo("Unfired pie dish",false));
        ITEM_ID_MAP.put(1791, new ItemInfo("Unfired bowl",false));
        ITEM_ID_MAP.put(1793, new ItemInfo("Woad leaf",false));
        ITEM_ID_MAP.put(1794, new ItemInfo("Bronze wire",true));
        ITEM_ID_MAP.put(1823, new ItemInfo("Waterskin(4)",true));
        ITEM_ID_MAP.put(1831, new ItemInfo("Waterskin(0)",true));
        ITEM_ID_MAP.put(1833, new ItemInfo("Desert shirt",true));
        ITEM_ID_MAP.put(1835, new ItemInfo("Desert robe",true));
        ITEM_ID_MAP.put(1837, new ItemInfo("Desert boots",true));
        ITEM_ID_MAP.put(1854, new ItemInfo("Shantay pass",true));
        ITEM_ID_MAP.put(1859, new ItemInfo("Raw ugthanki meat",true));
        ITEM_ID_MAP.put(1861, new ItemInfo("Ugthanki meat",true));
        ITEM_ID_MAP.put(1865, new ItemInfo("Pitta bread",true));
        ITEM_ID_MAP.put(1869, new ItemInfo("Chopped tomato",true));
        ITEM_ID_MAP.put(1871, new ItemInfo("Chopped onion",true));
        ITEM_ID_MAP.put(1873, new ItemInfo("Chopped ugthanki",true));
        ITEM_ID_MAP.put(1875, new ItemInfo("Onion & tomato",true));
        ITEM_ID_MAP.put(1877, new ItemInfo("Ugthanki & onion",true));
        ITEM_ID_MAP.put(1879, new ItemInfo("Ugthanki & tomato",true));
        ITEM_ID_MAP.put(1881, new ItemInfo("Kebab mix",true));
        ITEM_ID_MAP.put(1885, new ItemInfo("Ugthanki kebab",true));
        ITEM_ID_MAP.put(1887, new ItemInfo("Cake tin",false));
        ITEM_ID_MAP.put(1891, new ItemInfo("Cake",false));
        ITEM_ID_MAP.put(1897, new ItemInfo("Chocolate cake",false));
        ITEM_ID_MAP.put(1905, new ItemInfo("Asgarnian ale",false));
        ITEM_ID_MAP.put(1907, new ItemInfo("Wizard's mind bomb",false));
        ITEM_ID_MAP.put(1909, new ItemInfo("Greenman's ale",true));
        ITEM_ID_MAP.put(1911, new ItemInfo("Dragon bitter",true));
        ITEM_ID_MAP.put(1913, new ItemInfo("Dwarven stout",false));
        ITEM_ID_MAP.put(1915, new ItemInfo("Grog",true));
        ITEM_ID_MAP.put(1917, new ItemInfo("Beer",false));
        ITEM_ID_MAP.put(1919, new ItemInfo("Beer glass",false));
        ITEM_ID_MAP.put(1921, new ItemInfo("Bowl of water",false));
        ITEM_ID_MAP.put(1923, new ItemInfo("Bowl",false));
        ITEM_ID_MAP.put(1925, new ItemInfo("Bucket",false));
        ITEM_ID_MAP.put(1927, new ItemInfo("Bucket of milk",false));
        ITEM_ID_MAP.put(1929, new ItemInfo("Bucket of water",false));
        ITEM_ID_MAP.put(1931, new ItemInfo("Pot",false));
        ITEM_ID_MAP.put(1933, new ItemInfo("Pot of flour",false));
        ITEM_ID_MAP.put(1935, new ItemInfo("Jug",false));
        ITEM_ID_MAP.put(1937, new ItemInfo("Jug of water",false));
        ITEM_ID_MAP.put(1939, new ItemInfo("Swamp tar",true));
        ITEM_ID_MAP.put(1941, new ItemInfo("Swamp paste",true));
        ITEM_ID_MAP.put(1942, new ItemInfo("Potato",false));
        ITEM_ID_MAP.put(1944, new ItemInfo("Egg",false));
        ITEM_ID_MAP.put(1947, new ItemInfo("Grain",false));
        ITEM_ID_MAP.put(1949, new ItemInfo("Chef's hat",false));
        ITEM_ID_MAP.put(1951, new ItemInfo("Redberries",false));
        ITEM_ID_MAP.put(1953, new ItemInfo("Pastry dough",false));
        ITEM_ID_MAP.put(1955, new ItemInfo("Cooking apple",false));
        ITEM_ID_MAP.put(1957, new ItemInfo("Onion",false));
        ITEM_ID_MAP.put(1959, new ItemInfo("Pumpkin",false));
        ITEM_ID_MAP.put(1961, new ItemInfo("Easter egg",false));
        ITEM_ID_MAP.put(1963, new ItemInfo("Banana",false));
        ITEM_ID_MAP.put(1965, new ItemInfo("Cabbage",false));
        ITEM_ID_MAP.put(1969, new ItemInfo("Spinach roll",false));
        ITEM_ID_MAP.put(1971, new ItemInfo("Kebab",false));
        ITEM_ID_MAP.put(1973, new ItemInfo("Chocolate bar",false));
        ITEM_ID_MAP.put(1975, new ItemInfo("Chocolate dust",false));
        ITEM_ID_MAP.put(1978, new ItemInfo("Cup of tea",true));
        ITEM_ID_MAP.put(1980, new ItemInfo("Empty cup",true));
        ITEM_ID_MAP.put(1982, new ItemInfo("Tomato",false));
        ITEM_ID_MAP.put(1985, new ItemInfo("Cheese",false));
        ITEM_ID_MAP.put(1987, new ItemInfo("Grapes",false));
        ITEM_ID_MAP.put(1989, new ItemInfo("Half full wine jug",false));
        ITEM_ID_MAP.put(1993, new ItemInfo("Jug of wine",false));
        ITEM_ID_MAP.put(2003, new ItemInfo("Stew",false));
        ITEM_ID_MAP.put(2007, new ItemInfo("Spice",true));
        ITEM_ID_MAP.put(2011, new ItemInfo("Curry",true));
        ITEM_ID_MAP.put(2015, new ItemInfo("Vodka",true));
        ITEM_ID_MAP.put(2017, new ItemInfo("Whisky",true));
        ITEM_ID_MAP.put(2019, new ItemInfo("Gin",true));
        ITEM_ID_MAP.put(2021, new ItemInfo("Brandy",true));
        ITEM_ID_MAP.put(2023, new ItemInfo("Cocktail guide",true));
        ITEM_ID_MAP.put(2025, new ItemInfo("Cocktail shaker",true));
        ITEM_ID_MAP.put(2026, new ItemInfo("Cocktail glass",true));
        ITEM_ID_MAP.put(2028, new ItemInfo("Premade blurb' sp.",true));
        ITEM_ID_MAP.put(2030, new ItemInfo("Premade choc s'dy",true));
        ITEM_ID_MAP.put(2032, new ItemInfo("Premade dr' dragon",true));
        ITEM_ID_MAP.put(2034, new ItemInfo("Premade fr' blast",true));
        ITEM_ID_MAP.put(2036, new ItemInfo("Premade p' punch",true));
        ITEM_ID_MAP.put(2038, new ItemInfo("Premade sgg",true));
        ITEM_ID_MAP.put(2040, new ItemInfo("Premade wiz blz'd",true));
        ITEM_ID_MAP.put(2048, new ItemInfo("Pineapple punch",true));
        ITEM_ID_MAP.put(2054, new ItemInfo("Wizard blizzard",true));
        ITEM_ID_MAP.put(2064, new ItemInfo("Blurberry special",true));
        ITEM_ID_MAP.put(2074, new ItemInfo("Choc saturday",true));
        ITEM_ID_MAP.put(2080, new ItemInfo("Short green guy",true));
        ITEM_ID_MAP.put(2084, new ItemInfo("Fruit blast",true));
        ITEM_ID_MAP.put(2092, new ItemInfo("Drunk dragon",true));
        ITEM_ID_MAP.put(2102, new ItemInfo("Lemon",true));
        ITEM_ID_MAP.put(2104, new ItemInfo("Lemon chunks",true));
        ITEM_ID_MAP.put(2106, new ItemInfo("Lemon slices",true));
        ITEM_ID_MAP.put(2108, new ItemInfo("Orange",true));
        ITEM_ID_MAP.put(2110, new ItemInfo("Orange chunks",true));
        ITEM_ID_MAP.put(2112, new ItemInfo("Orange slices",true));
        ITEM_ID_MAP.put(2114, new ItemInfo("Pineapple",true));
        ITEM_ID_MAP.put(2116, new ItemInfo("Pineapple chunks",true));
        ITEM_ID_MAP.put(2118, new ItemInfo("Pineapple ring",true));
        ITEM_ID_MAP.put(2120, new ItemInfo("Lime",true));
        ITEM_ID_MAP.put(2122, new ItemInfo("Lime chunks",true));
        ITEM_ID_MAP.put(2124, new ItemInfo("Lime slices",true));
        ITEM_ID_MAP.put(2126, new ItemInfo("Dwellberries",true));
        ITEM_ID_MAP.put(2128, new ItemInfo("Equa leaves",true));
        ITEM_ID_MAP.put(2130, new ItemInfo("Pot of cream",true));
        ITEM_ID_MAP.put(2132, new ItemInfo("Raw beef",false));
        ITEM_ID_MAP.put(2134, new ItemInfo("Raw rat meat",false));
        ITEM_ID_MAP.put(2136, new ItemInfo("Raw bear meat",false));
        ITEM_ID_MAP.put(2138, new ItemInfo("Raw chicken",false));
        ITEM_ID_MAP.put(2140, new ItemInfo("Cooked chicken",false));
        ITEM_ID_MAP.put(2142, new ItemInfo("Cooked meat",false));
        ITEM_ID_MAP.put(2150, new ItemInfo("Swamp toad",true));
        ITEM_ID_MAP.put(2152, new ItemInfo("Toad's legs",true));
        ITEM_ID_MAP.put(2162, new ItemInfo("King worm",true));
        ITEM_ID_MAP.put(2164, new ItemInfo("Batta tin",true));
        ITEM_ID_MAP.put(2165, new ItemInfo("Crunchy tray",true));
        ITEM_ID_MAP.put(2166, new ItemInfo("Gnomebowl mould",true));
        ITEM_ID_MAP.put(2167, new ItemInfo("Gianne's cook book",true));
        ITEM_ID_MAP.put(2169, new ItemInfo("Gnome spice",true));
        ITEM_ID_MAP.put(2171, new ItemInfo("Gianne dough",true));
        ITEM_ID_MAP.put(2185, new ItemInfo("Chocolate bomb",true));
        ITEM_ID_MAP.put(2187, new ItemInfo("Tangled toad's legs",true));
        ITEM_ID_MAP.put(2191, new ItemInfo("Worm hole",true));
        ITEM_ID_MAP.put(2195, new ItemInfo("Veg ball",true));
        ITEM_ID_MAP.put(2203, new ItemInfo("Rock-climbing boots",true));
        ITEM_ID_MAP.put(2205, new ItemInfo("Worm crunchies",true));
        ITEM_ID_MAP.put(2209, new ItemInfo("Chocchip crunchies",true));
        ITEM_ID_MAP.put(2213, new ItemInfo("Spicy crunchies",true));
        ITEM_ID_MAP.put(2217, new ItemInfo("Toad crunchies",true));
        ITEM_ID_MAP.put(2219, new ItemInfo("Premade w'm batta",true));
        ITEM_ID_MAP.put(2221, new ItemInfo("Premade t'd batta",true));
        ITEM_ID_MAP.put(2223, new ItemInfo("Premade c+t batta",true));
        ITEM_ID_MAP.put(2225, new ItemInfo("Premade fr't batta",true));
        ITEM_ID_MAP.put(2227, new ItemInfo("Premade veg batta",true));
        ITEM_ID_MAP.put(2229, new ItemInfo("Premade choc bomb",true));
        ITEM_ID_MAP.put(2231, new ItemInfo("Premade ttl",true));
        ITEM_ID_MAP.put(2233, new ItemInfo("Premade worm hole",true));
        ITEM_ID_MAP.put(2235, new ItemInfo("Premade veg ball",true));
        ITEM_ID_MAP.put(2237, new ItemInfo("Premade w'm crun'",true));
        ITEM_ID_MAP.put(2239, new ItemInfo("Premade ch' crunch",true));
        ITEM_ID_MAP.put(2241, new ItemInfo("Premade s'y crunch",true));
        ITEM_ID_MAP.put(2243, new ItemInfo("Premade t'd crunch",true));
        ITEM_ID_MAP.put(2253, new ItemInfo("Worm batta",true));
        ITEM_ID_MAP.put(2255, new ItemInfo("Toad batta",true));
        ITEM_ID_MAP.put(2259, new ItemInfo("Cheese+tom batta",true));
        ITEM_ID_MAP.put(2277, new ItemInfo("Fruit batta",true));
        ITEM_ID_MAP.put(2281, new ItemInfo("Vegetable batta",true));
        ITEM_ID_MAP.put(2283, new ItemInfo("Pizza base",false));
        ITEM_ID_MAP.put(2289, new ItemInfo("Plain pizza",false));
        ITEM_ID_MAP.put(2293, new ItemInfo("Meat pizza",false));
        ITEM_ID_MAP.put(2297, new ItemInfo("Anchovy pizza",false));
        ITEM_ID_MAP.put(2301, new ItemInfo("Pineapple pizza",true));
        ITEM_ID_MAP.put(2307, new ItemInfo("Bread dough",false));
        ITEM_ID_MAP.put(2309, new ItemInfo("Bread",false));
        ITEM_ID_MAP.put(2313, new ItemInfo("Pie dish",false));
        ITEM_ID_MAP.put(2315, new ItemInfo("Pie shell",false));
        ITEM_ID_MAP.put(2317, new ItemInfo("Uncooked apple pie",false));
        ITEM_ID_MAP.put(2319, new ItemInfo("Uncooked meat pie",false));
        ITEM_ID_MAP.put(2321, new ItemInfo("Uncooked berry pie",false));
        ITEM_ID_MAP.put(2323, new ItemInfo("Apple pie",false));
        ITEM_ID_MAP.put(2325, new ItemInfo("Redberry pie",false));
        ITEM_ID_MAP.put(2327, new ItemInfo("Meat pie",false));
        ITEM_ID_MAP.put(2337, new ItemInfo("Raw oomlie",true));
        ITEM_ID_MAP.put(2341, new ItemInfo("Wrapped oomlie",true));
        ITEM_ID_MAP.put(2343, new ItemInfo("Cooked oomlie wrap",true));
        ITEM_ID_MAP.put(2347, new ItemInfo("Hammer",false));
        ITEM_ID_MAP.put(2349, new ItemInfo("Bronze bar",false));
        ITEM_ID_MAP.put(2351, new ItemInfo("Iron bar",false));
        ITEM_ID_MAP.put(2353, new ItemInfo("Steel bar",false));
        ITEM_ID_MAP.put(2355, new ItemInfo("Silver bar",false));
        ITEM_ID_MAP.put(2357, new ItemInfo("Gold bar",false));
        ITEM_ID_MAP.put(2359, new ItemInfo("Mithril bar",false));
        ITEM_ID_MAP.put(2361, new ItemInfo("Adamantite bar",false));
        ITEM_ID_MAP.put(2363, new ItemInfo("Runite bar",false));
        ITEM_ID_MAP.put(2366, new ItemInfo("Shield left half",true));
        ITEM_ID_MAP.put(2368, new ItemInfo("Shield right half",true));
        ITEM_ID_MAP.put(2370, new ItemInfo("Steel studs",true));
        ITEM_ID_MAP.put(2428, new ItemInfo("Attack potion(4)",true));
        ITEM_ID_MAP.put(2430, new ItemInfo("Restore potion(4)",true));
        ITEM_ID_MAP.put(2432, new ItemInfo("Defence potion(4)",true));
        ITEM_ID_MAP.put(2434, new ItemInfo("Prayer potion(4)",true));
        ITEM_ID_MAP.put(2436, new ItemInfo("Super attack(4)",true));
        ITEM_ID_MAP.put(2438, new ItemInfo("Fishing potion(4)",true));
        ITEM_ID_MAP.put(2440, new ItemInfo("Super strength(4)",true));
        ITEM_ID_MAP.put(2442, new ItemInfo("Super defence(4)",true));
        ITEM_ID_MAP.put(2444, new ItemInfo("Ranging potion(4)",true));
        ITEM_ID_MAP.put(2446, new ItemInfo("Antipoison(4)",true));
        ITEM_ID_MAP.put(2448, new ItemInfo("Superantipoison(4)",true));
        ITEM_ID_MAP.put(2450, new ItemInfo("Zamorak brew(4)",true));
        ITEM_ID_MAP.put(2452, new ItemInfo("Antifire potion(4)",true));
        ITEM_ID_MAP.put(2454, new ItemInfo("Antifire potion(3)",true));
        ITEM_ID_MAP.put(2456, new ItemInfo("Antifire potion(2)",true));
        ITEM_ID_MAP.put(2458, new ItemInfo("Antifire potion(1)",true));
        ITEM_ID_MAP.put(2460, new ItemInfo("Assorted flowers",true));
        ITEM_ID_MAP.put(2462, new ItemInfo("Red flowers",true));
        ITEM_ID_MAP.put(2464, new ItemInfo("Blue flowers",true));
        ITEM_ID_MAP.put(2466, new ItemInfo("Yellow flowers",true));
        ITEM_ID_MAP.put(2468, new ItemInfo("Purple flowers",true));
        ITEM_ID_MAP.put(2470, new ItemInfo("Orange flowers",true));
        ITEM_ID_MAP.put(2472, new ItemInfo("Mixed flowers",true));
        ITEM_ID_MAP.put(2474, new ItemInfo("White flowers",true));
        ITEM_ID_MAP.put(2476, new ItemInfo("Black flowers",true));
        ITEM_ID_MAP.put(2481, new ItemInfo("Lantadyme",true));
        ITEM_ID_MAP.put(2483, new ItemInfo("Lantadyme potion (unf)",true));
        ITEM_ID_MAP.put(2485, new ItemInfo("Grimy lantadyme",true));
        ITEM_ID_MAP.put(2487, new ItemInfo("Blue d'hide vamb",true));
        ITEM_ID_MAP.put(2489, new ItemInfo("Red d'hide vamb",true));
        ITEM_ID_MAP.put(2491, new ItemInfo("Black d'hide vamb",true));
        ITEM_ID_MAP.put(2493, new ItemInfo("Blue d'hide chaps",true));
        ITEM_ID_MAP.put(2495, new ItemInfo("Red d'hide chaps",true));
        ITEM_ID_MAP.put(2497, new ItemInfo("Black d'hide chaps",true));
        ITEM_ID_MAP.put(2499, new ItemInfo("Blue d'hide body",true));
        ITEM_ID_MAP.put(2501, new ItemInfo("Red d'hide body",true));
        ITEM_ID_MAP.put(2503, new ItemInfo("Black d'hide body",true));
        ITEM_ID_MAP.put(2505, new ItemInfo("Blue dragon leather",true));
        ITEM_ID_MAP.put(2507, new ItemInfo("Red dragon leather",true));
        ITEM_ID_MAP.put(2509, new ItemInfo("Black dragon leather",true));
        ITEM_ID_MAP.put(2520, new ItemInfo("Brown toy horsey",false));
        ITEM_ID_MAP.put(2522, new ItemInfo("White toy horsey",false));
        ITEM_ID_MAP.put(2524, new ItemInfo("Black toy horsey",false));
        ITEM_ID_MAP.put(2526, new ItemInfo("Grey toy horsey",false));
        ITEM_ID_MAP.put(2550, new ItemInfo("Ring of recoil",true));
        ITEM_ID_MAP.put(2552, new ItemInfo("Ring of dueling(8)",true));
        ITEM_ID_MAP.put(2568, new ItemInfo("Ring of forging",true));
        ITEM_ID_MAP.put(2570, new ItemInfo("Ring of life",true));
        ITEM_ID_MAP.put(2572, new ItemInfo("Ring of wealth",true));
        ITEM_ID_MAP.put(2577, new ItemInfo("Ranger boots",true));
        ITEM_ID_MAP.put(2579, new ItemInfo("Wizard boots",true));
        ITEM_ID_MAP.put(2581, new ItemInfo("Robin hood hat",true));
        ITEM_ID_MAP.put(2583, new ItemInfo("Black platebody (t)",false));
        ITEM_ID_MAP.put(2585, new ItemInfo("Black platelegs (t)",false));
        ITEM_ID_MAP.put(2587, new ItemInfo("Black full helm (t)",false));
        ITEM_ID_MAP.put(2589, new ItemInfo("Black kiteshield (t)",false));
        ITEM_ID_MAP.put(2591, new ItemInfo("Black platebody (g)",false));
        ITEM_ID_MAP.put(2593, new ItemInfo("Black platelegs (g)",false));
        ITEM_ID_MAP.put(2595, new ItemInfo("Black full helm (g)",false));
        ITEM_ID_MAP.put(2597, new ItemInfo("Black kiteshield (g)",false));
        ITEM_ID_MAP.put(2599, new ItemInfo("Adamant platebody (t)",false));
        ITEM_ID_MAP.put(2601, new ItemInfo("Adamant platelegs (t)",false));
        ITEM_ID_MAP.put(2603, new ItemInfo("Adamant kiteshield (t)",false));
        ITEM_ID_MAP.put(2605, new ItemInfo("Adamant full helm (t)",false));
        ITEM_ID_MAP.put(2607, new ItemInfo("Adamant platebody (g)",false));
        ITEM_ID_MAP.put(2609, new ItemInfo("Adamant platelegs (g)",false));
        ITEM_ID_MAP.put(2611, new ItemInfo("Adamant kiteshield (g)",false));
        ITEM_ID_MAP.put(2613, new ItemInfo("Adamant full helm (g)",false));
        ITEM_ID_MAP.put(2615, new ItemInfo("Rune platebody (g)",false));
        ITEM_ID_MAP.put(2617, new ItemInfo("Rune platelegs (g)",false));
        ITEM_ID_MAP.put(2619, new ItemInfo("Rune full helm (g)",false));
        ITEM_ID_MAP.put(2621, new ItemInfo("Rune kiteshield (g)",false));
        ITEM_ID_MAP.put(2623, new ItemInfo("Rune platebody (t)",false));
        ITEM_ID_MAP.put(2625, new ItemInfo("Rune platelegs (t)",false));
        ITEM_ID_MAP.put(2627, new ItemInfo("Rune full helm (t)",false));
        ITEM_ID_MAP.put(2629, new ItemInfo("Rune kiteshield (t)",false));
        ITEM_ID_MAP.put(2631, new ItemInfo("Highwayman mask",true));
        ITEM_ID_MAP.put(2633, new ItemInfo("Blue beret",true));
        ITEM_ID_MAP.put(2635, new ItemInfo("Black beret",true));
        ITEM_ID_MAP.put(2637, new ItemInfo("White beret",true));
        ITEM_ID_MAP.put(2639, new ItemInfo("Tan cavalier",true));
        ITEM_ID_MAP.put(2641, new ItemInfo("Dark cavalier",true));
        ITEM_ID_MAP.put(2643, new ItemInfo("Black cavalier",true));
        ITEM_ID_MAP.put(2645, new ItemInfo("Red headband",true));
        ITEM_ID_MAP.put(2647, new ItemInfo("Black headband",true));
        ITEM_ID_MAP.put(2649, new ItemInfo("Brown headband",true));
        ITEM_ID_MAP.put(2651, new ItemInfo("Pirate's hat",true));
        ITEM_ID_MAP.put(2653, new ItemInfo("Zamorak platebody",false));
        ITEM_ID_MAP.put(2655, new ItemInfo("Zamorak platelegs",false));
        ITEM_ID_MAP.put(2657, new ItemInfo("Zamorak full helm",false));
        ITEM_ID_MAP.put(2659, new ItemInfo("Zamorak kiteshield",false));
        ITEM_ID_MAP.put(2661, new ItemInfo("Saradomin platebody",false));
        ITEM_ID_MAP.put(2663, new ItemInfo("Saradomin platelegs",false));
        ITEM_ID_MAP.put(2665, new ItemInfo("Saradomin full helm",false));
        ITEM_ID_MAP.put(2667, new ItemInfo("Saradomin kiteshield",false));
        ITEM_ID_MAP.put(2669, new ItemInfo("Guthix platebody",false));
        ITEM_ID_MAP.put(2671, new ItemInfo("Guthix platelegs",false));
        ITEM_ID_MAP.put(2673, new ItemInfo("Guthix full helm",false));
        ITEM_ID_MAP.put(2675, new ItemInfo("Guthix kiteshield",false));
        ITEM_ID_MAP.put(2859, new ItemInfo("Wolf bones",true));
        ITEM_ID_MAP.put(2861, new ItemInfo("Wolfbone arrowtips",true));
        ITEM_ID_MAP.put(2862, new ItemInfo("Achey tree logs",true));
        ITEM_ID_MAP.put(2864, new ItemInfo("Ogre arrow shaft",true));
        ITEM_ID_MAP.put(2865, new ItemInfo("Flighted ogre arrow",true));
        ITEM_ID_MAP.put(2866, new ItemInfo("Ogre arrow",true));
        ITEM_ID_MAP.put(2876, new ItemInfo("Raw chompy",true));
        ITEM_ID_MAP.put(2878, new ItemInfo("Cooked chompy",true));
        ITEM_ID_MAP.put(2890, new ItemInfo("Elemental shield",true));
        ITEM_ID_MAP.put(2894, new ItemInfo("Grey boots",true));
        ITEM_ID_MAP.put(2896, new ItemInfo("Grey robe top",true));
        ITEM_ID_MAP.put(2898, new ItemInfo("Grey robe bottoms",true));
        ITEM_ID_MAP.put(2900, new ItemInfo("Grey hat",true));
        ITEM_ID_MAP.put(2902, new ItemInfo("Grey gloves",false));
        ITEM_ID_MAP.put(2904, new ItemInfo("Red boots",true));
        ITEM_ID_MAP.put(2906, new ItemInfo("Red robe top",true));
        ITEM_ID_MAP.put(2908, new ItemInfo("Red robe bottoms",true));
        ITEM_ID_MAP.put(2910, new ItemInfo("Red hat",true));
        ITEM_ID_MAP.put(2912, new ItemInfo("Red gloves",false));
        ITEM_ID_MAP.put(2914, new ItemInfo("Yellow boots",true));
        ITEM_ID_MAP.put(2916, new ItemInfo("Yellow robe top",true));
        ITEM_ID_MAP.put(2918, new ItemInfo("Yellow robe bottoms",true));
        ITEM_ID_MAP.put(2920, new ItemInfo("Yellow hat",true));
        ITEM_ID_MAP.put(2922, new ItemInfo("Yellow gloves",false));
        ITEM_ID_MAP.put(2924, new ItemInfo("Teal boots",true));
        ITEM_ID_MAP.put(2926, new ItemInfo("Teal robe top",true));
        ITEM_ID_MAP.put(2928, new ItemInfo("Teal robe bottoms",true));
        ITEM_ID_MAP.put(2930, new ItemInfo("Teal hat",true));
        ITEM_ID_MAP.put(2932, new ItemInfo("Teal gloves",false));
        ITEM_ID_MAP.put(2934, new ItemInfo("Purple boots",true));
        ITEM_ID_MAP.put(2936, new ItemInfo("Purple robe top",true));
        ITEM_ID_MAP.put(2938, new ItemInfo("Purple robe bottoms",true));
        ITEM_ID_MAP.put(2940, new ItemInfo("Purple hat",true));
        ITEM_ID_MAP.put(2942, new ItemInfo("Purple gloves",false));
        ITEM_ID_MAP.put(2955, new ItemInfo("Moonlight mead",true));
        ITEM_ID_MAP.put(2961, new ItemInfo("Silver sickle",true));
        ITEM_ID_MAP.put(2970, new ItemInfo("Mort myre fungus",true));
        ITEM_ID_MAP.put(2972, new ItemInfo("Mort myre stem",true));
        ITEM_ID_MAP.put(2974, new ItemInfo("Mort myre pear",true));
        ITEM_ID_MAP.put(2976, new ItemInfo("Sickle mould",true));
        ITEM_ID_MAP.put(2997, new ItemInfo("Pirate's hook",true));
        ITEM_ID_MAP.put(2998, new ItemInfo("Toadflax",true));
        ITEM_ID_MAP.put(3000, new ItemInfo("Snapdragon",true));
        ITEM_ID_MAP.put(3002, new ItemInfo("Toadflax potion (unf)",true));
        ITEM_ID_MAP.put(3004, new ItemInfo("Snapdragon potion (unf)",true));
        ITEM_ID_MAP.put(3008, new ItemInfo("Energy potion(4)",true));
        ITEM_ID_MAP.put(3010, new ItemInfo("Energy potion(3)",true));
        ITEM_ID_MAP.put(3012, new ItemInfo("Energy potion(2)",true));
        ITEM_ID_MAP.put(3014, new ItemInfo("Energy potion(1)",true));
        ITEM_ID_MAP.put(3016, new ItemInfo("Super energy(4)",true));
        ITEM_ID_MAP.put(3018, new ItemInfo("Super energy(3)",true));
        ITEM_ID_MAP.put(3020, new ItemInfo("Super energy(2)",true));
        ITEM_ID_MAP.put(3022, new ItemInfo("Super energy(1)",true));
        ITEM_ID_MAP.put(3024, new ItemInfo("Super restore(4)",true));
        ITEM_ID_MAP.put(3026, new ItemInfo("Super restore(3)",true));
        ITEM_ID_MAP.put(3028, new ItemInfo("Super restore(2)",true));
        ITEM_ID_MAP.put(3030, new ItemInfo("Super restore(1)",true));
        ITEM_ID_MAP.put(3032, new ItemInfo("Agility potion(4)",true));
        ITEM_ID_MAP.put(3034, new ItemInfo("Agility potion(3)",true));
        ITEM_ID_MAP.put(3036, new ItemInfo("Agility potion(2)",true));
        ITEM_ID_MAP.put(3038, new ItemInfo("Agility potion(1)",true));
        ITEM_ID_MAP.put(3040, new ItemInfo("Magic potion(4)",true));
        ITEM_ID_MAP.put(3042, new ItemInfo("Magic potion(3)",true));
        ITEM_ID_MAP.put(3044, new ItemInfo("Magic potion(2)",true));
        ITEM_ID_MAP.put(3046, new ItemInfo("Magic potion(1)",true));
        ITEM_ID_MAP.put(3049, new ItemInfo("Grimy toadflax",true));
        ITEM_ID_MAP.put(3051, new ItemInfo("Grimy snapdragon",true));
        ITEM_ID_MAP.put(3053, new ItemInfo("Lava battlestaff",true));
        ITEM_ID_MAP.put(3054, new ItemInfo("Mystic lava staff",true));
        ITEM_ID_MAP.put(3093, new ItemInfo("Black dart",true));
        ITEM_ID_MAP.put(3094, new ItemInfo("Black dart(p)",true));
        ITEM_ID_MAP.put(3095, new ItemInfo("Bronze claws",true));
        ITEM_ID_MAP.put(3096, new ItemInfo("Iron claws",true));
        ITEM_ID_MAP.put(3097, new ItemInfo("Steel claws",true));
        ITEM_ID_MAP.put(3098, new ItemInfo("Black claws",true));
        ITEM_ID_MAP.put(3099, new ItemInfo("Mithril claws",true));
        ITEM_ID_MAP.put(3100, new ItemInfo("Adamant claws",true));
        ITEM_ID_MAP.put(3101, new ItemInfo("Rune claws",true));
        ITEM_ID_MAP.put(3105, new ItemInfo("Climbing boots",true));
        ITEM_ID_MAP.put(3107, new ItemInfo("Spiked boots",true));
        ITEM_ID_MAP.put(3122, new ItemInfo("Granite shield",true));
        ITEM_ID_MAP.put(3123, new ItemInfo("Shaikahan bones",true));
        ITEM_ID_MAP.put(3125, new ItemInfo("Jogre bones",true));
        ITEM_ID_MAP.put(3138, new ItemInfo("Potato cactus",true));
        ITEM_ID_MAP.put(3140, new ItemInfo("Dragon chainbody",true));
        ITEM_ID_MAP.put(3142, new ItemInfo("Raw karambwan",true));
        ITEM_ID_MAP.put(3144, new ItemInfo("Cooked karambwan",true));
        ITEM_ID_MAP.put(3157, new ItemInfo("Karambwan vessel",true));
        ITEM_ID_MAP.put(3159, new ItemInfo("Karambwan vessel",true));
        ITEM_ID_MAP.put(3162, new ItemInfo("Sliced banana",false));
        ITEM_ID_MAP.put(3183, new ItemInfo("Monkey bones",false));
        ITEM_ID_MAP.put(3188, new ItemInfo("Cleaning cloth",true));
        ITEM_ID_MAP.put(3190, new ItemInfo("Bronze halberd",true));
        ITEM_ID_MAP.put(3192, new ItemInfo("Iron halberd",true));
        ITEM_ID_MAP.put(3194, new ItemInfo("Steel halberd",true));
        ITEM_ID_MAP.put(3196, new ItemInfo("Black halberd",true));
        ITEM_ID_MAP.put(3198, new ItemInfo("Mithril halberd",true));
        ITEM_ID_MAP.put(3200, new ItemInfo("Adamant halberd",true));
        ITEM_ID_MAP.put(3202, new ItemInfo("Rune halberd",true));
        ITEM_ID_MAP.put(3204, new ItemInfo("Dragon halberd",true));
        ITEM_ID_MAP.put(3211, new ItemInfo("Limestone",true));
        ITEM_ID_MAP.put(3216, new ItemInfo("Barrel",true));
        ITEM_ID_MAP.put(3226, new ItemInfo("Raw rabbit",true));
        ITEM_ID_MAP.put(3228, new ItemInfo("Cooked rabbit",true));
        ITEM_ID_MAP.put(3239, new ItemInfo("Bark",true));
        ITEM_ID_MAP.put(3325, new ItemInfo("Vampire dust",true));
        ITEM_ID_MAP.put(3327, new ItemInfo("Myre snelm",true));
        ITEM_ID_MAP.put(3329, new ItemInfo("Blood'n'tar snelm",true));
        ITEM_ID_MAP.put(3331, new ItemInfo("Ochre snelm",true));
        ITEM_ID_MAP.put(3333, new ItemInfo("Bruise blue snelm",true));
        ITEM_ID_MAP.put(3335, new ItemInfo("Broken bark snelm",true));
        ITEM_ID_MAP.put(3337, new ItemInfo("Myre snelm",true));
        ITEM_ID_MAP.put(3339, new ItemInfo("Blood'n'tar snelm",true));
        ITEM_ID_MAP.put(3341, new ItemInfo("Ochre snelm",true));
        ITEM_ID_MAP.put(3343, new ItemInfo("Bruise blue snelm",true));
        ITEM_ID_MAP.put(3345, new ItemInfo("Blamish myre shell",true));
        ITEM_ID_MAP.put(3347, new ItemInfo("Blamish red shell",true));
        ITEM_ID_MAP.put(3349, new ItemInfo("Blamish ochre shell",true));
        ITEM_ID_MAP.put(3351, new ItemInfo("Blamish blue shell",true));
        ITEM_ID_MAP.put(3353, new ItemInfo("Blamish bark shell",true));
        ITEM_ID_MAP.put(3355, new ItemInfo("Blamish myre shell",true));
        ITEM_ID_MAP.put(3357, new ItemInfo("Blamish red shell",true));
        ITEM_ID_MAP.put(3359, new ItemInfo("Blamish ochre shell",true));
        ITEM_ID_MAP.put(3361, new ItemInfo("Blamish blue shell",true));
        ITEM_ID_MAP.put(3363, new ItemInfo("Thin snail",true));
        ITEM_ID_MAP.put(3365, new ItemInfo("Lean snail",true));
        ITEM_ID_MAP.put(3367, new ItemInfo("Fat snail",true));
        ITEM_ID_MAP.put(3369, new ItemInfo("Thin snail meat",true));
        ITEM_ID_MAP.put(3371, new ItemInfo("Lean snail meat",true));
        ITEM_ID_MAP.put(3373, new ItemInfo("Fat snail meat",true));
        ITEM_ID_MAP.put(3379, new ItemInfo("Raw slimy eel",true));
        ITEM_ID_MAP.put(3381, new ItemInfo("Cooked slimy eel",true));
        ITEM_ID_MAP.put(3385, new ItemInfo("Splitbark helm",true));
        ITEM_ID_MAP.put(3387, new ItemInfo("Splitbark body",true));
        ITEM_ID_MAP.put(3389, new ItemInfo("Splitbark legs",true));
        ITEM_ID_MAP.put(3391, new ItemInfo("Splitbark gauntlets",true));
        ITEM_ID_MAP.put(3393, new ItemInfo("Splitbark boots",true));
        ITEM_ID_MAP.put(3396, new ItemInfo("Loar remains",true));
        ITEM_ID_MAP.put(3398, new ItemInfo("Phrin remains",true));
        ITEM_ID_MAP.put(3400, new ItemInfo("Riyl remains",true));
        ITEM_ID_MAP.put(3402, new ItemInfo("Asyn remains",true));
        ITEM_ID_MAP.put(3404, new ItemInfo("Fiyr remains",true));
        ITEM_ID_MAP.put(3406, new ItemInfo("Unfinished potion",true));
        ITEM_ID_MAP.put(3408, new ItemInfo("Serum 207 (4)",true));
        ITEM_ID_MAP.put(3410, new ItemInfo("Serum 207 (3)",true));
        ITEM_ID_MAP.put(3412, new ItemInfo("Serum 207 (2)",true));
        ITEM_ID_MAP.put(3414, new ItemInfo("Serum 207 (1)",true));
        ITEM_ID_MAP.put(3420, new ItemInfo("Limestone brick",true));
        ITEM_ID_MAP.put(3422, new ItemInfo("Olive oil(4)",true));
        ITEM_ID_MAP.put(3424, new ItemInfo("Olive oil(3)",true));
        ITEM_ID_MAP.put(3426, new ItemInfo("Olive oil(2)",true));
        ITEM_ID_MAP.put(3428, new ItemInfo("Olive oil(1)",true));
        ITEM_ID_MAP.put(3430, new ItemInfo("Sacred oil(4)",true));
        ITEM_ID_MAP.put(3432, new ItemInfo("Sacred oil(3)",true));
        ITEM_ID_MAP.put(3434, new ItemInfo("Sacred oil(2)",true));
        ITEM_ID_MAP.put(3436, new ItemInfo("Sacred oil(1)",true));
        ITEM_ID_MAP.put(3438, new ItemInfo("Pyre logs",true));
        ITEM_ID_MAP.put(3440, new ItemInfo("Oak pyre logs",true));
        ITEM_ID_MAP.put(3442, new ItemInfo("Willow pyre logs",true));
        ITEM_ID_MAP.put(3444, new ItemInfo("Maple pyre logs",true));
        ITEM_ID_MAP.put(3446, new ItemInfo("Yew pyre logs",true));
        ITEM_ID_MAP.put(3448, new ItemInfo("Magic pyre logs",true));
        ITEM_ID_MAP.put(3470, new ItemInfo("Fine cloth",true));
        ITEM_ID_MAP.put(3472, new ItemInfo("Black plateskirt (t)",false));
        ITEM_ID_MAP.put(3473, new ItemInfo("Black plateskirt (g)",false));
        ITEM_ID_MAP.put(3474, new ItemInfo("Adamant plateskirt (t)",false));
        ITEM_ID_MAP.put(3475, new ItemInfo("Adamant plateskirt (g)",false));
        ITEM_ID_MAP.put(3476, new ItemInfo("Rune plateskirt (g)",false));
        ITEM_ID_MAP.put(3477, new ItemInfo("Rune plateskirt (t)",false));
        ITEM_ID_MAP.put(3478, new ItemInfo("Zamorak plateskirt",false));
        ITEM_ID_MAP.put(3479, new ItemInfo("Saradomin plateskirt",false));
        ITEM_ID_MAP.put(3480, new ItemInfo("Guthix plateskirt",false));
        ITEM_ID_MAP.put(3481, new ItemInfo("Gilded platebody",false));
        ITEM_ID_MAP.put(3483, new ItemInfo("Gilded platelegs",false));
        ITEM_ID_MAP.put(3485, new ItemInfo("Gilded plateskirt",false));
        ITEM_ID_MAP.put(3486, new ItemInfo("Gilded full helm",false));
        ITEM_ID_MAP.put(3488, new ItemInfo("Gilded kiteshield",false));
        ITEM_ID_MAP.put(3678, new ItemInfo("Flamtaer hammer",true));
        ITEM_ID_MAP.put(3749, new ItemInfo("Archer helm",true));
        ITEM_ID_MAP.put(3751, new ItemInfo("Berserker helm",true));
        ITEM_ID_MAP.put(3753, new ItemInfo("Warrior helm",true));
        ITEM_ID_MAP.put(3755, new ItemInfo("Farseer helm",true));
        ITEM_ID_MAP.put(3759, new ItemInfo("Fremennik cyan cloak",true));
        ITEM_ID_MAP.put(3761, new ItemInfo("Fremennik brown cloak",true));
        ITEM_ID_MAP.put(3763, new ItemInfo("Fremennik blue cloak",true));
        ITEM_ID_MAP.put(3765, new ItemInfo("Fremennik green cloak",true));
        ITEM_ID_MAP.put(3767, new ItemInfo("Fremennik brown shirt",true));
        ITEM_ID_MAP.put(3769, new ItemInfo("Fremennik grey shirt",true));
        ITEM_ID_MAP.put(3771, new ItemInfo("Fremennik beige shirt",true));
        ITEM_ID_MAP.put(3773, new ItemInfo("Fremennik red shirt",true));
        ITEM_ID_MAP.put(3775, new ItemInfo("Fremennik blue shirt",true));
        ITEM_ID_MAP.put(3777, new ItemInfo("Fremennik red cloak",true));
        ITEM_ID_MAP.put(3779, new ItemInfo("Fremennik grey cloak",true));
        ITEM_ID_MAP.put(3781, new ItemInfo("Fremennik yellow cloak",true));
        ITEM_ID_MAP.put(3783, new ItemInfo("Fremennik teal cloak",true));
        ITEM_ID_MAP.put(3785, new ItemInfo("Fremennik purple cloak",true));
        ITEM_ID_MAP.put(3787, new ItemInfo("Fremennik pink cloak",true));
        ITEM_ID_MAP.put(3789, new ItemInfo("Fremennik black cloak",true));
        ITEM_ID_MAP.put(3791, new ItemInfo("Fremennik boots",true));
        ITEM_ID_MAP.put(3793, new ItemInfo("Fremennik robe",true));
        ITEM_ID_MAP.put(3795, new ItemInfo("Fremennik skirt",true));
        ITEM_ID_MAP.put(3797, new ItemInfo("Fremennik hat",true));
        ITEM_ID_MAP.put(3799, new ItemInfo("Fremennik gloves",true));
        ITEM_ID_MAP.put(3801, new ItemInfo("Keg of beer",true));
        ITEM_ID_MAP.put(3803, new ItemInfo("Beer tankard",true));
        ITEM_ID_MAP.put(3827, new ItemInfo("Saradomin page 1",true));
        ITEM_ID_MAP.put(3828, new ItemInfo("Saradomin page 2",true));
        ITEM_ID_MAP.put(3829, new ItemInfo("Saradomin page 3",true));
        ITEM_ID_MAP.put(3830, new ItemInfo("Saradomin page 4",true));
        ITEM_ID_MAP.put(3831, new ItemInfo("Zamorak page 1",true));
        ITEM_ID_MAP.put(3832, new ItemInfo("Zamorak page 2",true));
        ITEM_ID_MAP.put(3833, new ItemInfo("Zamorak page 3",true));
        ITEM_ID_MAP.put(3834, new ItemInfo("Zamorak page 4",true));
        ITEM_ID_MAP.put(3835, new ItemInfo("Guthix page 1",true));
        ITEM_ID_MAP.put(3836, new ItemInfo("Guthix page 2",true));
        ITEM_ID_MAP.put(3837, new ItemInfo("Guthix page 3",true));
        ITEM_ID_MAP.put(3838, new ItemInfo("Guthix page 4",true));
        ITEM_ID_MAP.put(3853, new ItemInfo("Games necklace(8)",true));
        ITEM_ID_MAP.put(4012, new ItemInfo("Monkey nuts",true));
        ITEM_ID_MAP.put(4014, new ItemInfo("Monkey bar",true));
        ITEM_ID_MAP.put(4016, new ItemInfo("Banana stew",true));
        ITEM_ID_MAP.put(4087, new ItemInfo("Dragon platelegs",true));
        ITEM_ID_MAP.put(4089, new ItemInfo("Mystic hat",true));
        ITEM_ID_MAP.put(4091, new ItemInfo("Mystic robe top",true));
        ITEM_ID_MAP.put(4093, new ItemInfo("Mystic robe bottom",true));
        ITEM_ID_MAP.put(4095, new ItemInfo("Mystic gloves",true));
        ITEM_ID_MAP.put(4097, new ItemInfo("Mystic boots",true));
        ITEM_ID_MAP.put(4099, new ItemInfo("Mystic hat (dark)",true));
        ITEM_ID_MAP.put(4101, new ItemInfo("Mystic robe top (dark)",true));
        ITEM_ID_MAP.put(4103, new ItemInfo("Mystic robe bottom (dark)",true));
        ITEM_ID_MAP.put(4105, new ItemInfo("Mystic gloves (dark)",true));
        ITEM_ID_MAP.put(4107, new ItemInfo("Mystic boots (dark)",true));
        ITEM_ID_MAP.put(4109, new ItemInfo("Mystic hat (light)",true));
        ITEM_ID_MAP.put(4111, new ItemInfo("Mystic robe top (light)",true));
        ITEM_ID_MAP.put(4113, new ItemInfo("Mystic robe bottom (light)",true));
        ITEM_ID_MAP.put(4115, new ItemInfo("Mystic gloves (light)",true));
        ITEM_ID_MAP.put(4117, new ItemInfo("Mystic boots (light)",true));
        ITEM_ID_MAP.put(4119, new ItemInfo("Bronze boots",true));
        ITEM_ID_MAP.put(4121, new ItemInfo("Iron boots",true));
        ITEM_ID_MAP.put(4123, new ItemInfo("Steel boots",true));
        ITEM_ID_MAP.put(4125, new ItemInfo("Black boots",true));
        ITEM_ID_MAP.put(4127, new ItemInfo("Mithril boots",true));
        ITEM_ID_MAP.put(4129, new ItemInfo("Adamant boots",true));
        ITEM_ID_MAP.put(4131, new ItemInfo("Rune boots",true));
        ITEM_ID_MAP.put(4151, new ItemInfo("Abyssal whip",true));
        ITEM_ID_MAP.put(4153, new ItemInfo("Granite maul",true));
        ITEM_ID_MAP.put(4156, new ItemInfo("Mirror shield",true));
        ITEM_ID_MAP.put(4161, new ItemInfo("Bag of salt",true));
        ITEM_ID_MAP.put(4162, new ItemInfo("Rock hammer",true));
        ITEM_ID_MAP.put(4164, new ItemInfo("Facemask",true));
        ITEM_ID_MAP.put(4166, new ItemInfo("Earmuffs",true));
        ITEM_ID_MAP.put(4168, new ItemInfo("Nose peg",true));
        ITEM_ID_MAP.put(4170, new ItemInfo("Slayer's staff",true));
        ITEM_ID_MAP.put(4207, new ItemInfo("Crystal seed",true));
        ITEM_ID_MAP.put(4212, new ItemInfo("New crystal bow",true));
        ITEM_ID_MAP.put(4224, new ItemInfo("New crystal shield",true));
        ITEM_ID_MAP.put(4298, new ItemInfo("Ham shirt",true));
        ITEM_ID_MAP.put(4300, new ItemInfo("Ham robe",true));
        ITEM_ID_MAP.put(4302, new ItemInfo("Ham hood",true));
        ITEM_ID_MAP.put(4304, new ItemInfo("Ham cloak",true));
        ITEM_ID_MAP.put(4306, new ItemInfo("Ham logo",true));
        ITEM_ID_MAP.put(4308, new ItemInfo("Ham gloves",true));
        ITEM_ID_MAP.put(4310, new ItemInfo("Ham boots",true));
        ITEM_ID_MAP.put(4315, new ItemInfo("Team-1 cape",false));
        ITEM_ID_MAP.put(4317, new ItemInfo("Team-2 cape",false));
        ITEM_ID_MAP.put(4319, new ItemInfo("Team-3 cape",false));
        ITEM_ID_MAP.put(4321, new ItemInfo("Team-4 cape",false));
        ITEM_ID_MAP.put(4323, new ItemInfo("Team-5 cape",false));
        ITEM_ID_MAP.put(4325, new ItemInfo("Team-6 cape",false));
        ITEM_ID_MAP.put(4327, new ItemInfo("Team-7 cape",false));
        ITEM_ID_MAP.put(4329, new ItemInfo("Team-8 cape",false));
        ITEM_ID_MAP.put(4331, new ItemInfo("Team-9 cape",false));
        ITEM_ID_MAP.put(4333, new ItemInfo("Team-10 cape",false));
        ITEM_ID_MAP.put(4335, new ItemInfo("Team-11 cape",false));
        ITEM_ID_MAP.put(4337, new ItemInfo("Team-12 cape",false));
        ITEM_ID_MAP.put(4339, new ItemInfo("Team-13 cape",false));
        ITEM_ID_MAP.put(4341, new ItemInfo("Team-14 cape",false));
        ITEM_ID_MAP.put(4343, new ItemInfo("Team-15 cape",false));
        ITEM_ID_MAP.put(4345, new ItemInfo("Team-16 cape",false));
        ITEM_ID_MAP.put(4347, new ItemInfo("Team-17 cape",false));
        ITEM_ID_MAP.put(4349, new ItemInfo("Team-18 cape",false));
        ITEM_ID_MAP.put(4351, new ItemInfo("Team-19 cape",false));
        ITEM_ID_MAP.put(4353, new ItemInfo("Team-20 cape",false));
        ITEM_ID_MAP.put(4355, new ItemInfo("Team-21 cape",false));
        ITEM_ID_MAP.put(4357, new ItemInfo("Team-22 cape",false));
        ITEM_ID_MAP.put(4359, new ItemInfo("Team-23 cape",false));
        ITEM_ID_MAP.put(4361, new ItemInfo("Team-24 cape",false));
        ITEM_ID_MAP.put(4363, new ItemInfo("Team-25 cape",false));
        ITEM_ID_MAP.put(4365, new ItemInfo("Team-26 cape",false));
        ITEM_ID_MAP.put(4367, new ItemInfo("Team-27 cape",false));
        ITEM_ID_MAP.put(4369, new ItemInfo("Team-28 cape",false));
        ITEM_ID_MAP.put(4371, new ItemInfo("Team-29 cape",false));
        ITEM_ID_MAP.put(4373, new ItemInfo("Team-30 cape",false));
        ITEM_ID_MAP.put(4375, new ItemInfo("Team-31 cape",false));
        ITEM_ID_MAP.put(4377, new ItemInfo("Team-32 cape",false));
        ITEM_ID_MAP.put(4379, new ItemInfo("Team-33 cape",false));
        ITEM_ID_MAP.put(4381, new ItemInfo("Team-34 cape",false));
        ITEM_ID_MAP.put(4383, new ItemInfo("Team-35 cape",false));
        ITEM_ID_MAP.put(4385, new ItemInfo("Team-36 cape",false));
        ITEM_ID_MAP.put(4387, new ItemInfo("Team-37 cape",false));
        ITEM_ID_MAP.put(4389, new ItemInfo("Team-38 cape",false));
        ITEM_ID_MAP.put(4391, new ItemInfo("Team-39 cape",false));
        ITEM_ID_MAP.put(4393, new ItemInfo("Team-40 cape",false));
        ITEM_ID_MAP.put(4395, new ItemInfo("Team-41 cape",false));
        ITEM_ID_MAP.put(4397, new ItemInfo("Team-42 cape",false));
        ITEM_ID_MAP.put(4399, new ItemInfo("Team-43 cape",false));
        ITEM_ID_MAP.put(4401, new ItemInfo("Team-44 cape",false));
        ITEM_ID_MAP.put(4403, new ItemInfo("Team-45 cape",false));
        ITEM_ID_MAP.put(4405, new ItemInfo("Team-46 cape",false));
        ITEM_ID_MAP.put(4407, new ItemInfo("Team-47 cape",false));
        ITEM_ID_MAP.put(4409, new ItemInfo("Team-48 cape",false));
        ITEM_ID_MAP.put(4411, new ItemInfo("Team-49 cape",false));
        ITEM_ID_MAP.put(4413, new ItemInfo("Team-50 cape",false));
        ITEM_ID_MAP.put(4417, new ItemInfo("Guthix rest(4)",true));
        ITEM_ID_MAP.put(4419, new ItemInfo("Guthix rest(3)",true));
        ITEM_ID_MAP.put(4421, new ItemInfo("Guthix rest(2)",true));
        ITEM_ID_MAP.put(4423, new ItemInfo("Guthix rest(1)",true));
        ITEM_ID_MAP.put(4436, new ItemInfo("Airtight pot",true));
        ITEM_ID_MAP.put(4438, new ItemInfo("Unfired pot lid",true));
        ITEM_ID_MAP.put(4440, new ItemInfo("Pot lid",true));
        ITEM_ID_MAP.put(4456, new ItemInfo("Bowl of hot water",true));
        ITEM_ID_MAP.put(4458, new ItemInfo("Cup of water",true));
        ITEM_ID_MAP.put(4460, new ItemInfo("Cup of hot water",true));
        ITEM_ID_MAP.put(4517, new ItemInfo("Giant frog legs",true));
        ITEM_ID_MAP.put(4522, new ItemInfo("Oil lamp",true));
        ITEM_ID_MAP.put(4525, new ItemInfo("Empty oil lamp",true));
        ITEM_ID_MAP.put(4527, new ItemInfo("Empty candle lantern",true));
        ITEM_ID_MAP.put(4529, new ItemInfo("Candle lantern",true));
        ITEM_ID_MAP.put(4532, new ItemInfo("Candle lantern",true));
        ITEM_ID_MAP.put(4535, new ItemInfo("Empty oil lantern",true));
        ITEM_ID_MAP.put(4537, new ItemInfo("Oil lantern",true));
        ITEM_ID_MAP.put(4540, new ItemInfo("Oil lantern frame",true));
        ITEM_ID_MAP.put(4542, new ItemInfo("Lantern lens",true));
        ITEM_ID_MAP.put(4544, new ItemInfo("Bullseye lantern (unf)",true));
        ITEM_ID_MAP.put(4546, new ItemInfo("Bullseye lantern (empty)",true));
        ITEM_ID_MAP.put(4548, new ItemInfo("Bullseye lantern",true));
        ITEM_ID_MAP.put(4551, new ItemInfo("Spiny helmet",true));
        ITEM_ID_MAP.put(4580, new ItemInfo("Black spear",true));
        ITEM_ID_MAP.put(4582, new ItemInfo("Black spear(p)",true));
        ITEM_ID_MAP.put(4585, new ItemInfo("Dragon plateskirt",true));
        ITEM_ID_MAP.put(4587, new ItemInfo("Dragon scimitar",true));
        ITEM_ID_MAP.put(4591, new ItemInfo("Kharidian headpiece",true));
        ITEM_ID_MAP.put(4593, new ItemInfo("Fake beard",true));
        ITEM_ID_MAP.put(4595, new ItemInfo("Karidian disguise",true));
        ITEM_ID_MAP.put(4600, new ItemInfo("Willow blackjack",true));
        ITEM_ID_MAP.put(4608, new ItemInfo("Super kebab",true));
        ITEM_ID_MAP.put(4627, new ItemInfo("Bandit's brew",true));
        ITEM_ID_MAP.put(4668, new ItemInfo("Garlic powder",true));
        ITEM_ID_MAP.put(4675, new ItemInfo("Ancient staff",true));
        ITEM_ID_MAP.put(4684, new ItemInfo("Linen",true));
        ITEM_ID_MAP.put(4687, new ItemInfo("Bucket of sap",true));
        ITEM_ID_MAP.put(4689, new ItemInfo("Pile of salt",true));
        ITEM_ID_MAP.put(4694, new ItemInfo("Steam rune",true));
        ITEM_ID_MAP.put(4695, new ItemInfo("Mist rune",true));
        ITEM_ID_MAP.put(4696, new ItemInfo("Dust rune",true));
        ITEM_ID_MAP.put(4697, new ItemInfo("Smoke rune",true));
        ITEM_ID_MAP.put(4698, new ItemInfo("Mud rune",true));
        ITEM_ID_MAP.put(4699, new ItemInfo("Lava rune",true));
        ITEM_ID_MAP.put(4708, new ItemInfo("Ahrim's hood",true));
        ITEM_ID_MAP.put(4710, new ItemInfo("Ahrim's staff",true));
        ITEM_ID_MAP.put(4712, new ItemInfo("Ahrim's robetop",true));
        ITEM_ID_MAP.put(4714, new ItemInfo("Ahrim's robeskirt",true));
        ITEM_ID_MAP.put(4716, new ItemInfo("Dharok's helm",true));
        ITEM_ID_MAP.put(4718, new ItemInfo("Dharok's greataxe",true));
        ITEM_ID_MAP.put(4720, new ItemInfo("Dharok's platebody",true));
        ITEM_ID_MAP.put(4722, new ItemInfo("Dharok's platelegs",true));
        ITEM_ID_MAP.put(4724, new ItemInfo("Guthan's helm",true));
        ITEM_ID_MAP.put(4726, new ItemInfo("Guthan's warspear",true));
        ITEM_ID_MAP.put(4728, new ItemInfo("Guthan's platebody",true));
        ITEM_ID_MAP.put(4730, new ItemInfo("Guthan's chainskirt",true));
        ITEM_ID_MAP.put(4732, new ItemInfo("Karil's coif",true));
        ITEM_ID_MAP.put(4734, new ItemInfo("Karil's crossbow",true));
        ITEM_ID_MAP.put(4736, new ItemInfo("Karil's leathertop",true));
        ITEM_ID_MAP.put(4738, new ItemInfo("Karil's leatherskirt",true));
        ITEM_ID_MAP.put(4740, new ItemInfo("Bolt rack",true));
        ITEM_ID_MAP.put(4745, new ItemInfo("Torag's helm",true));
        ITEM_ID_MAP.put(4747, new ItemInfo("Torag's hammers",true));
        ITEM_ID_MAP.put(4749, new ItemInfo("Torag's platebody",true));
        ITEM_ID_MAP.put(4751, new ItemInfo("Torag's platelegs",true));
        ITEM_ID_MAP.put(4753, new ItemInfo("Verac's helm",true));
        ITEM_ID_MAP.put(4755, new ItemInfo("Verac's flail",true));
        ITEM_ID_MAP.put(4757, new ItemInfo("Verac's brassard",true));
        ITEM_ID_MAP.put(4759, new ItemInfo("Verac's plateskirt",true));
        ITEM_ID_MAP.put(4773, new ItemInfo("Bronze brutal",true));
        ITEM_ID_MAP.put(4778, new ItemInfo("Iron brutal",true));
        ITEM_ID_MAP.put(4783, new ItemInfo("Steel brutal",true));
        ITEM_ID_MAP.put(4788, new ItemInfo("Black brutal",true));
        ITEM_ID_MAP.put(4793, new ItemInfo("Mithril brutal",true));
        ITEM_ID_MAP.put(4798, new ItemInfo("Adamant brutal",true));
        ITEM_ID_MAP.put(4803, new ItemInfo("Rune brutal",true));
        ITEM_ID_MAP.put(4812, new ItemInfo("Zogre bones",true));
        ITEM_ID_MAP.put(4819, new ItemInfo("Bronze nails",true));
        ITEM_ID_MAP.put(4820, new ItemInfo("Iron nails",true));
        ITEM_ID_MAP.put(4821, new ItemInfo("Black nails",true));
        ITEM_ID_MAP.put(4822, new ItemInfo("Mithril nails",true));
        ITEM_ID_MAP.put(4823, new ItemInfo("Adamantite nails",true));
        ITEM_ID_MAP.put(4824, new ItemInfo("Rune nails",true));
        ITEM_ID_MAP.put(4825, new ItemInfo("Unstrung comp bow",true));
        ITEM_ID_MAP.put(4827, new ItemInfo("Comp ogre bow",true));
        ITEM_ID_MAP.put(4830, new ItemInfo("Fayrg bones",true));
        ITEM_ID_MAP.put(4832, new ItemInfo("Raurg bones",true));
        ITEM_ID_MAP.put(4834, new ItemInfo("Ourg bones",true));
        ITEM_ID_MAP.put(4842, new ItemInfo("Relicym's balm(4)",true));
        ITEM_ID_MAP.put(4844, new ItemInfo("Relicym's balm(3)",true));
        ITEM_ID_MAP.put(4846, new ItemInfo("Relicym's balm(2)",true));
        ITEM_ID_MAP.put(4848, new ItemInfo("Relicym's balm(1)",true));
        ITEM_ID_MAP.put(4850, new ItemInfo("Ogre coffin key",true));
        ITEM_ID_MAP.put(4860, new ItemInfo("Ahrim's hood 0",true));
        ITEM_ID_MAP.put(4866, new ItemInfo("Ahrim's staff 0",true));
        ITEM_ID_MAP.put(4872, new ItemInfo("Ahrim's robetop 0",true));
        ITEM_ID_MAP.put(4878, new ItemInfo("Ahrim's robeskirt 0",true));
        ITEM_ID_MAP.put(4884, new ItemInfo("Dharok's helm 0",true));
        ITEM_ID_MAP.put(4890, new ItemInfo("Dharok's greataxe 0",true));
        ITEM_ID_MAP.put(4896, new ItemInfo("Dharok's platebody 0",true));
        ITEM_ID_MAP.put(4902, new ItemInfo("Dharok's platelegs 0",true));
        ITEM_ID_MAP.put(4908, new ItemInfo("Guthan's helm 0",true));
        ITEM_ID_MAP.put(4914, new ItemInfo("Guthan's warspear 0",true));
        ITEM_ID_MAP.put(4920, new ItemInfo("Guthan's platebody 0",true));
        ITEM_ID_MAP.put(4926, new ItemInfo("Guthan's chainskirt 0",true));
        ITEM_ID_MAP.put(4932, new ItemInfo("Karil's coif 0",true));
        ITEM_ID_MAP.put(4938, new ItemInfo("Karil's crossbow 0",true));
        ITEM_ID_MAP.put(4944, new ItemInfo("Karil's leathertop 0",true));
        ITEM_ID_MAP.put(4950, new ItemInfo("Karil's leatherskirt 0",true));
        ITEM_ID_MAP.put(4956, new ItemInfo("Torag's helm 0",true));
        ITEM_ID_MAP.put(4962, new ItemInfo("Torag's hammers 0",true));
        ITEM_ID_MAP.put(4968, new ItemInfo("Torag's platebody 0",true));
        ITEM_ID_MAP.put(4974, new ItemInfo("Torag's platelegs 0",true));
        ITEM_ID_MAP.put(4980, new ItemInfo("Verac's helm 0",true));
        ITEM_ID_MAP.put(4986, new ItemInfo("Verac's flail 0",true));
        ITEM_ID_MAP.put(4992, new ItemInfo("Verac's brassard 0",true));
        ITEM_ID_MAP.put(4998, new ItemInfo("Verac's plateskirt 0",true));
        ITEM_ID_MAP.put(5001, new ItemInfo("Raw cave eel",true));
        ITEM_ID_MAP.put(5003, new ItemInfo("Cave eel",true));
        ITEM_ID_MAP.put(5014, new ItemInfo("Mining helmet",true));
        ITEM_ID_MAP.put(5016, new ItemInfo("Bone spear",true));
        ITEM_ID_MAP.put(5018, new ItemInfo("Bone club",true));
        ITEM_ID_MAP.put(5024, new ItemInfo("Woven top",true));
        ITEM_ID_MAP.put(5026, new ItemInfo("Woven top",true));
        ITEM_ID_MAP.put(5028, new ItemInfo("Woven top",true));
        ITEM_ID_MAP.put(5030, new ItemInfo("Shirt",true));
        ITEM_ID_MAP.put(5032, new ItemInfo("Shirt",true));
        ITEM_ID_MAP.put(5034, new ItemInfo("Shirt",true));
        ITEM_ID_MAP.put(5036, new ItemInfo("Trousers",true));
        ITEM_ID_MAP.put(5038, new ItemInfo("Trousers",true));
        ITEM_ID_MAP.put(5040, new ItemInfo("Trousers",true));
        ITEM_ID_MAP.put(5042, new ItemInfo("Shorts",true));
        ITEM_ID_MAP.put(5044, new ItemInfo("Shorts",true));
        ITEM_ID_MAP.put(5046, new ItemInfo("Shorts",true));
        ITEM_ID_MAP.put(5048, new ItemInfo("Skirt",true));
        ITEM_ID_MAP.put(5050, new ItemInfo("Skirt",true));
        ITEM_ID_MAP.put(5052, new ItemInfo("Skirt",true));
        ITEM_ID_MAP.put(5096, new ItemInfo("Marigold seed",true));
        ITEM_ID_MAP.put(5097, new ItemInfo("Rosemary seed",true));
        ITEM_ID_MAP.put(5098, new ItemInfo("Nasturtium seed",true));
        ITEM_ID_MAP.put(5099, new ItemInfo("Woad seed",true));
        ITEM_ID_MAP.put(5100, new ItemInfo("Limpwurt seed",true));
        ITEM_ID_MAP.put(5101, new ItemInfo("Redberry seed",true));
        ITEM_ID_MAP.put(5102, new ItemInfo("Cadavaberry seed",true));
        ITEM_ID_MAP.put(5103, new ItemInfo("Dwellberry seed",true));
        ITEM_ID_MAP.put(5104, new ItemInfo("Jangerberry seed",true));
        ITEM_ID_MAP.put(5105, new ItemInfo("Whiteberry seed",true));
        ITEM_ID_MAP.put(5106, new ItemInfo("Poison ivy seed",true));
        ITEM_ID_MAP.put(5280, new ItemInfo("Cactus seed",true));
        ITEM_ID_MAP.put(5281, new ItemInfo("Belladonna seed",true));
        ITEM_ID_MAP.put(5282, new ItemInfo("Mushroom spore",true));
        ITEM_ID_MAP.put(5283, new ItemInfo("Apple tree seed",true));
        ITEM_ID_MAP.put(5284, new ItemInfo("Banana tree seed",true));
        ITEM_ID_MAP.put(5285, new ItemInfo("Orange tree seed",true));
        ITEM_ID_MAP.put(5286, new ItemInfo("Curry tree seed",true));
        ITEM_ID_MAP.put(5287, new ItemInfo("Pineapple seed",true));
        ITEM_ID_MAP.put(5288, new ItemInfo("Papaya tree seed",true));
        ITEM_ID_MAP.put(5289, new ItemInfo("Palm tree seed",true));
        ITEM_ID_MAP.put(5290, new ItemInfo("Calquat tree seed",true));
        ITEM_ID_MAP.put(5291, new ItemInfo("Guam seed",true));
        ITEM_ID_MAP.put(5292, new ItemInfo("Marrentill seed",true));
        ITEM_ID_MAP.put(5293, new ItemInfo("Tarromin seed",true));
        ITEM_ID_MAP.put(5294, new ItemInfo("Harralander seed",true));
        ITEM_ID_MAP.put(5295, new ItemInfo("Ranarr seed",true));
        ITEM_ID_MAP.put(5296, new ItemInfo("Toadflax seed",true));
        ITEM_ID_MAP.put(5297, new ItemInfo("Irit seed",true));
        ITEM_ID_MAP.put(5298, new ItemInfo("Avantoe seed",true));
        ITEM_ID_MAP.put(5299, new ItemInfo("Kwuarm seed",true));
        ITEM_ID_MAP.put(5300, new ItemInfo("Snapdragon seed",true));
        ITEM_ID_MAP.put(5301, new ItemInfo("Cadantine seed",true));
        ITEM_ID_MAP.put(5302, new ItemInfo("Lantadyme seed",true));
        ITEM_ID_MAP.put(5303, new ItemInfo("Dwarf weed seed",true));
        ITEM_ID_MAP.put(5304, new ItemInfo("Torstol seed",true));
        ITEM_ID_MAP.put(5305, new ItemInfo("Barley seed",true));
        ITEM_ID_MAP.put(5306, new ItemInfo("Jute seed",true));
        ITEM_ID_MAP.put(5307, new ItemInfo("Hammerstone seed",true));
        ITEM_ID_MAP.put(5308, new ItemInfo("Asgarnian seed",true));
        ITEM_ID_MAP.put(5309, new ItemInfo("Yanillian seed",true));
        ITEM_ID_MAP.put(5310, new ItemInfo("Krandorian seed",true));
        ITEM_ID_MAP.put(5311, new ItemInfo("Wildblood seed",true));
        ITEM_ID_MAP.put(5312, new ItemInfo("Acorn",true));
        ITEM_ID_MAP.put(5313, new ItemInfo("Willow seed",true));
        ITEM_ID_MAP.put(5314, new ItemInfo("Maple seed",true));
        ITEM_ID_MAP.put(5315, new ItemInfo("Yew seed",true));
        ITEM_ID_MAP.put(5316, new ItemInfo("Magic seed",true));
        ITEM_ID_MAP.put(5318, new ItemInfo("Potato seed",true));
        ITEM_ID_MAP.put(5319, new ItemInfo("Onion seed",true));
        ITEM_ID_MAP.put(5320, new ItemInfo("Sweetcorn seed",true));
        ITEM_ID_MAP.put(5321, new ItemInfo("Watermelon seed",true));
        ITEM_ID_MAP.put(5322, new ItemInfo("Tomato seed",true));
        ITEM_ID_MAP.put(5323, new ItemInfo("Strawberry seed",true));
        ITEM_ID_MAP.put(5324, new ItemInfo("Cabbage seed",true));
        ITEM_ID_MAP.put(5325, new ItemInfo("Gardening trowel",true));
        ITEM_ID_MAP.put(5329, new ItemInfo("Secateurs",true));
        ITEM_ID_MAP.put(5331, new ItemInfo("Watering can",true));
        ITEM_ID_MAP.put(5341, new ItemInfo("Rake",true));
        ITEM_ID_MAP.put(5343, new ItemInfo("Seed dibber",true));
        ITEM_ID_MAP.put(5345, new ItemInfo("Gardening boots",true));
        ITEM_ID_MAP.put(5350, new ItemInfo("Empty plant pot",true));
        ITEM_ID_MAP.put(5352, new ItemInfo("Unfired plant pot",true));
        ITEM_ID_MAP.put(5354, new ItemInfo("Filled plant pot",true));
        ITEM_ID_MAP.put(5370, new ItemInfo("Oak sapling",true));
        ITEM_ID_MAP.put(5371, new ItemInfo("Willow sapling",true));
        ITEM_ID_MAP.put(5372, new ItemInfo("Maple sapling",true));
        ITEM_ID_MAP.put(5373, new ItemInfo("Yew sapling",true));
        ITEM_ID_MAP.put(5374, new ItemInfo("Magic sapling",true));
        ITEM_ID_MAP.put(5376, new ItemInfo("Basket",true));
        ITEM_ID_MAP.put(5386, new ItemInfo("Apples(5)",true));
        ITEM_ID_MAP.put(5396, new ItemInfo("Oranges(5)",true));
        ITEM_ID_MAP.put(5406, new ItemInfo("Strawberries(5)",true));
        ITEM_ID_MAP.put(5416, new ItemInfo("Bananas(5)",true));
        ITEM_ID_MAP.put(5418, new ItemInfo("Empty sack",true));
        ITEM_ID_MAP.put(5438, new ItemInfo("Potatoes(10)",true));
        ITEM_ID_MAP.put(5458, new ItemInfo("Onions(10)",true));
        ITEM_ID_MAP.put(5478, new ItemInfo("Cabbages(10)",true));
        ITEM_ID_MAP.put(5496, new ItemInfo("Apple sapling",true));
        ITEM_ID_MAP.put(5497, new ItemInfo("Banana sapling",true));
        ITEM_ID_MAP.put(5498, new ItemInfo("Orange sapling",true));
        ITEM_ID_MAP.put(5499, new ItemInfo("Curry sapling",true));
        ITEM_ID_MAP.put(5500, new ItemInfo("Pineapple sapling",true));
        ITEM_ID_MAP.put(5501, new ItemInfo("Papaya sapling",true));
        ITEM_ID_MAP.put(5502, new ItemInfo("Palm sapling",true));
        ITEM_ID_MAP.put(5503, new ItemInfo("Calquat sapling",true));
        ITEM_ID_MAP.put(5504, new ItemInfo("Strawberry",true));
        ITEM_ID_MAP.put(5516, new ItemInfo("Elemental talisman",true));
        ITEM_ID_MAP.put(5521, new ItemInfo("Binding necklace",true));
        ITEM_ID_MAP.put(5523, new ItemInfo("Tiara mould",false));
        ITEM_ID_MAP.put(5525, new ItemInfo("Tiara",false));
        ITEM_ID_MAP.put(5527, new ItemInfo("Air tiara",false));
        ITEM_ID_MAP.put(5529, new ItemInfo("Mind tiara",false));
        ITEM_ID_MAP.put(5531, new ItemInfo("Water tiara",false));
        ITEM_ID_MAP.put(5533, new ItemInfo("Body tiara",false));
        ITEM_ID_MAP.put(5535, new ItemInfo("Earth tiara",false));
        ITEM_ID_MAP.put(5537, new ItemInfo("Fire tiara",false));
        ITEM_ID_MAP.put(5539, new ItemInfo("Cosmic tiara",true));
        ITEM_ID_MAP.put(5541, new ItemInfo("Nature tiara",true));
        ITEM_ID_MAP.put(5543, new ItemInfo("Chaos tiara",true));
        ITEM_ID_MAP.put(5547, new ItemInfo("Death tiara",true));
        ITEM_ID_MAP.put(5574, new ItemInfo("Initiate sallet",true));
        ITEM_ID_MAP.put(5575, new ItemInfo("Initiate hauberk",true));
        ITEM_ID_MAP.put(5576, new ItemInfo("Initiate cuisse",true));
        ITEM_ID_MAP.put(5616, new ItemInfo("Bronze arrow(p+)",true));
        ITEM_ID_MAP.put(5617, new ItemInfo("Iron arrow(p+)",true));
        ITEM_ID_MAP.put(5618, new ItemInfo("Steel arrow(p+)",true));
        ITEM_ID_MAP.put(5619, new ItemInfo("Mithril arrow(p+)",true));
        ITEM_ID_MAP.put(5620, new ItemInfo("Adamant arrow(p+)",true));
        ITEM_ID_MAP.put(5621, new ItemInfo("Rune arrow(p+)",true));
        ITEM_ID_MAP.put(5622, new ItemInfo("Bronze arrow(p++)",true));
        ITEM_ID_MAP.put(5623, new ItemInfo("Iron arrow(p++)",true));
        ITEM_ID_MAP.put(5624, new ItemInfo("Steel arrow(p++)",true));
        ITEM_ID_MAP.put(5625, new ItemInfo("Mithril arrow(p++)",true));
        ITEM_ID_MAP.put(5626, new ItemInfo("Adamant arrow(p++)",true));
        ITEM_ID_MAP.put(5627, new ItemInfo("Rune arrow(p++)",true));
        ITEM_ID_MAP.put(5628, new ItemInfo("Bronze dart(p+)",true));
        ITEM_ID_MAP.put(5629, new ItemInfo("Iron dart(p+)",true));
        ITEM_ID_MAP.put(5630, new ItemInfo("Steel dart(p+)",true));
        ITEM_ID_MAP.put(5631, new ItemInfo("Black dart(p+)",true));
        ITEM_ID_MAP.put(5632, new ItemInfo("Mithril dart(p+)",true));
        ITEM_ID_MAP.put(5633, new ItemInfo("Adamant dart(p+)",true));
        ITEM_ID_MAP.put(5634, new ItemInfo("Rune dart(p+)",true));
        ITEM_ID_MAP.put(5635, new ItemInfo("Bronze dart(p++)",true));
        ITEM_ID_MAP.put(5636, new ItemInfo("Iron dart(p++)",true));
        ITEM_ID_MAP.put(5637, new ItemInfo("Steel dart(p++)",true));
        ITEM_ID_MAP.put(5638, new ItemInfo("Black dart(p++)",true));
        ITEM_ID_MAP.put(5639, new ItemInfo("Mithril dart(p++)",true));
        ITEM_ID_MAP.put(5640, new ItemInfo("Adamant dart(p++)",true));
        ITEM_ID_MAP.put(5641, new ItemInfo("Rune dart(p++)",true));
        ITEM_ID_MAP.put(5642, new ItemInfo("Bronze javelin(p+)",true));
        ITEM_ID_MAP.put(5643, new ItemInfo("Iron javelin(p+)",true));
        ITEM_ID_MAP.put(5644, new ItemInfo("Steel javelin(p+)",true));
        ITEM_ID_MAP.put(5645, new ItemInfo("Mithril javelin(p+)",true));
        ITEM_ID_MAP.put(5646, new ItemInfo("Adamant javelin(p+)",true));
        ITEM_ID_MAP.put(5647, new ItemInfo("Rune javelin(p+)",true));
        ITEM_ID_MAP.put(5648, new ItemInfo("Bronze javelin(p++)",true));
        ITEM_ID_MAP.put(5649, new ItemInfo("Iron javelin(p++)",true));
        ITEM_ID_MAP.put(5650, new ItemInfo("Steel javelin(p++)",true));
        ITEM_ID_MAP.put(5651, new ItemInfo("Mithril javelin(p++)",true));
        ITEM_ID_MAP.put(5652, new ItemInfo("Adamant javelin(p++)",true));
        ITEM_ID_MAP.put(5653, new ItemInfo("Rune javelin(p++)",true));
        ITEM_ID_MAP.put(5654, new ItemInfo("Bronze knife(p+)",true));
        ITEM_ID_MAP.put(5655, new ItemInfo("Iron knife(p+)",true));
        ITEM_ID_MAP.put(5656, new ItemInfo("Steel knife(p+)",true));
        ITEM_ID_MAP.put(5657, new ItemInfo("Mithril knife(p+)",true));
        ITEM_ID_MAP.put(5658, new ItemInfo("Black knife(p+)",true));
        ITEM_ID_MAP.put(5659, new ItemInfo("Adamant knife(p+)",true));
        ITEM_ID_MAP.put(5660, new ItemInfo("Rune knife(p+)",true));
        ITEM_ID_MAP.put(5661, new ItemInfo("Bronze knife(p++)",true));
        ITEM_ID_MAP.put(5662, new ItemInfo("Iron knife(p++)",true));
        ITEM_ID_MAP.put(5663, new ItemInfo("Steel knife(p++)",true));
        ITEM_ID_MAP.put(5664, new ItemInfo("Mithril knife(p++)",true));
        ITEM_ID_MAP.put(5665, new ItemInfo("Black knife(p++)",true));
        ITEM_ID_MAP.put(5666, new ItemInfo("Adamant knife(p++)",true));
        ITEM_ID_MAP.put(5667, new ItemInfo("Rune knife(p++)",true));
        ITEM_ID_MAP.put(5668, new ItemInfo("Iron dagger(p+)",true));
        ITEM_ID_MAP.put(5670, new ItemInfo("Bronze dagger(p+)",true));
        ITEM_ID_MAP.put(5672, new ItemInfo("Steel dagger(p+)",true));
        ITEM_ID_MAP.put(5674, new ItemInfo("Mithril dagger(p+)",true));
        ITEM_ID_MAP.put(5676, new ItemInfo("Adamant dagger(p+)",true));
        ITEM_ID_MAP.put(5678, new ItemInfo("Rune dagger(p+)",true));
        ITEM_ID_MAP.put(5680, new ItemInfo("Dragon dagger(p+)",true));
        ITEM_ID_MAP.put(5682, new ItemInfo("Black dagger(p+)",true));
        ITEM_ID_MAP.put(5686, new ItemInfo("Iron dagger(p++)",true));
        ITEM_ID_MAP.put(5688, new ItemInfo("Bronze dagger(p++)",true));
        ITEM_ID_MAP.put(5690, new ItemInfo("Steel dagger(p++)",true));
        ITEM_ID_MAP.put(5692, new ItemInfo("Mithril dagger(p++)",true));
        ITEM_ID_MAP.put(5694, new ItemInfo("Adamant dagger(p++)",true));
        ITEM_ID_MAP.put(5696, new ItemInfo("Rune dagger(p++)",true));
        ITEM_ID_MAP.put(5698, new ItemInfo("Dragon dagger(p++)",true));
        ITEM_ID_MAP.put(5700, new ItemInfo("Black dagger(p++)",true));
        ITEM_ID_MAP.put(5704, new ItemInfo("Bronze spear(p+)",true));
        ITEM_ID_MAP.put(5706, new ItemInfo("Iron spear(p+)",true));
        ITEM_ID_MAP.put(5708, new ItemInfo("Steel spear(p+)",true));
        ITEM_ID_MAP.put(5710, new ItemInfo("Mithril spear(p+)",true));
        ITEM_ID_MAP.put(5712, new ItemInfo("Adamant spear(p+)",true));
        ITEM_ID_MAP.put(5714, new ItemInfo("Rune spear(p+)",true));
        ITEM_ID_MAP.put(5716, new ItemInfo("Dragon spear(p+)",true));
        ITEM_ID_MAP.put(5718, new ItemInfo("Bronze spear(p++)",true));
        ITEM_ID_MAP.put(5720, new ItemInfo("Iron spear(p++)",true));
        ITEM_ID_MAP.put(5722, new ItemInfo("Steel spear(p++)",true));
        ITEM_ID_MAP.put(5724, new ItemInfo("Mithril spear(p++)",true));
        ITEM_ID_MAP.put(5726, new ItemInfo("Adamant spear(p++)",true));
        ITEM_ID_MAP.put(5728, new ItemInfo("Rune spear(p++)",true));
        ITEM_ID_MAP.put(5730, new ItemInfo("Dragon spear(p++)",true));
        ITEM_ID_MAP.put(5734, new ItemInfo("Black spear(p+)",true));
        ITEM_ID_MAP.put(5736, new ItemInfo("Black spear(p++)",true));
        ITEM_ID_MAP.put(5739, new ItemInfo("Asgarnian ale(m)",true));
        ITEM_ID_MAP.put(5741, new ItemInfo("Mature wmb",true));
        ITEM_ID_MAP.put(5743, new ItemInfo("Greenman's ale(m)",true));
        ITEM_ID_MAP.put(5745, new ItemInfo("Dragon bitter(m)",true));
        ITEM_ID_MAP.put(5747, new ItemInfo("Dwarven stout(m)",true));
        ITEM_ID_MAP.put(5749, new ItemInfo("Moonlight mead(m)",true));
        ITEM_ID_MAP.put(5751, new ItemInfo("Axeman's folly",true));
        ITEM_ID_MAP.put(5753, new ItemInfo("Axeman's folly(m)",true));
        ITEM_ID_MAP.put(5755, new ItemInfo("Chef's delight",true));
        ITEM_ID_MAP.put(5757, new ItemInfo("Chef's delight(m)",true));
        ITEM_ID_MAP.put(5759, new ItemInfo("Slayer's respite",true));
        ITEM_ID_MAP.put(5761, new ItemInfo("Slayer's respite(m)",true));
        ITEM_ID_MAP.put(5763, new ItemInfo("Cider",true));
        ITEM_ID_MAP.put(5765, new ItemInfo("Mature cider",true));
        ITEM_ID_MAP.put(5767, new ItemInfo("Ale yeast",true));
        ITEM_ID_MAP.put(5769, new ItemInfo("Calquat keg",true));
        ITEM_ID_MAP.put(5777, new ItemInfo("Dwarven stout(4)",true));
        ITEM_ID_MAP.put(5785, new ItemInfo("Asgarnian ale(4)",true));
        ITEM_ID_MAP.put(5793, new ItemInfo("Greenmans ale(4)",true));
        ITEM_ID_MAP.put(5801, new ItemInfo("Mind bomb(4)",true));
        ITEM_ID_MAP.put(5809, new ItemInfo("Dragon bitter(4)",true));
        ITEM_ID_MAP.put(5817, new ItemInfo("Moonlight mead(4)",true));
        ITEM_ID_MAP.put(5825, new ItemInfo("Axeman's folly(4)",true));
        ITEM_ID_MAP.put(5833, new ItemInfo("Chef's delight(4)",true));
        ITEM_ID_MAP.put(5841, new ItemInfo("Slayer's respite(4)",true));
        ITEM_ID_MAP.put(5849, new ItemInfo("Cider(4)",true));
        ITEM_ID_MAP.put(5857, new ItemInfo("Dwarven stout(m4)",true));
        ITEM_ID_MAP.put(5865, new ItemInfo("Asgarnian ale(m4)",true));
        ITEM_ID_MAP.put(5873, new ItemInfo("Greenmans ale(m4)",true));
        ITEM_ID_MAP.put(5881, new ItemInfo("Mind bomb(m4)",true));
        ITEM_ID_MAP.put(5889, new ItemInfo("Dragon bitter(m4)",true));
        ITEM_ID_MAP.put(5897, new ItemInfo("Moonlight mead(m4)",true));
        ITEM_ID_MAP.put(5905, new ItemInfo("Axeman's folly(m4)",true));
        ITEM_ID_MAP.put(5913, new ItemInfo("Chef's delight(m4)",true));
        ITEM_ID_MAP.put(5921, new ItemInfo("Slayer respite(m4)",true));
        ITEM_ID_MAP.put(5929, new ItemInfo("Cider(m4)",true));
        ITEM_ID_MAP.put(5931, new ItemInfo("Jute fibre",true));
        ITEM_ID_MAP.put(5933, new ItemInfo("Willow branch",true));
        ITEM_ID_MAP.put(5935, new ItemInfo("Coconut milk",true));
        ITEM_ID_MAP.put(5937, new ItemInfo("Weapon poison(+)",true));
        ITEM_ID_MAP.put(5940, new ItemInfo("Weapon poison(++)",true));
        ITEM_ID_MAP.put(5943, new ItemInfo("Antidote+(4)",true));
        ITEM_ID_MAP.put(5945, new ItemInfo("Antidote+(3)",true));
        ITEM_ID_MAP.put(5947, new ItemInfo("Antidote+(2)",true));
        ITEM_ID_MAP.put(5949, new ItemInfo("Antidote+(1)",true));
        ITEM_ID_MAP.put(5952, new ItemInfo("Antidote++(4)",true));
        ITEM_ID_MAP.put(5954, new ItemInfo("Antidote++(3)",true));
        ITEM_ID_MAP.put(5956, new ItemInfo("Antidote++(2)",true));
        ITEM_ID_MAP.put(5958, new ItemInfo("Antidote++(1)",true));
        ITEM_ID_MAP.put(5968, new ItemInfo("Tomatoes(5)",true));
        ITEM_ID_MAP.put(5970, new ItemInfo("Curry leaf",true));
        ITEM_ID_MAP.put(5972, new ItemInfo("Papaya fruit",true));
        ITEM_ID_MAP.put(5974, new ItemInfo("Coconut",true));
        ITEM_ID_MAP.put(5980, new ItemInfo("Calquat fruit",true));
        ITEM_ID_MAP.put(5982, new ItemInfo("Watermelon",true));
        ITEM_ID_MAP.put(5984, new ItemInfo("Watermelon slice",true));
        ITEM_ID_MAP.put(5986, new ItemInfo("Sweetcorn",true));
        ITEM_ID_MAP.put(5988, new ItemInfo("Cooked sweetcorn",true));
        ITEM_ID_MAP.put(5992, new ItemInfo("Apple mush",true));
        ITEM_ID_MAP.put(5994, new ItemInfo("Hammerstone hops",true));
        ITEM_ID_MAP.put(5996, new ItemInfo("Asgarnian hops",true));
        ITEM_ID_MAP.put(5998, new ItemInfo("Yanillian hops",true));
        ITEM_ID_MAP.put(6000, new ItemInfo("Krandorian hops",true));
        ITEM_ID_MAP.put(6002, new ItemInfo("Wildblood hops",true));
        ITEM_ID_MAP.put(6004, new ItemInfo("Mushroom",true));
        ITEM_ID_MAP.put(6006, new ItemInfo("Barley",true));
        ITEM_ID_MAP.put(6008, new ItemInfo("Barley malt",true));
        ITEM_ID_MAP.put(6010, new ItemInfo("Marigolds",true));
        ITEM_ID_MAP.put(6012, new ItemInfo("Nasturtiums",true));
        ITEM_ID_MAP.put(6014, new ItemInfo("Rosemary",true));
        ITEM_ID_MAP.put(6016, new ItemInfo("Cactus spine",true));
        ITEM_ID_MAP.put(6018, new ItemInfo("Poison ivy berries",true));
        ITEM_ID_MAP.put(6032, new ItemInfo("Compost",true));
        ITEM_ID_MAP.put(6034, new ItemInfo("Supercompost",true));
        ITEM_ID_MAP.put(6036, new ItemInfo("Plant cure",true));
        ITEM_ID_MAP.put(6038, new ItemInfo("Magic string",true));
        ITEM_ID_MAP.put(6043, new ItemInfo("Oak roots",true));
        ITEM_ID_MAP.put(6045, new ItemInfo("Willow roots",true));
        ITEM_ID_MAP.put(6047, new ItemInfo("Maple roots",true));
        ITEM_ID_MAP.put(6049, new ItemInfo("Yew roots",true));
        ITEM_ID_MAP.put(6051, new ItemInfo("Magic roots",true));
        ITEM_ID_MAP.put(6055, new ItemInfo("Weeds",true));
        ITEM_ID_MAP.put(6061, new ItemInfo("Bronze bolts(p+)",true));
        ITEM_ID_MAP.put(6062, new ItemInfo("Bronze bolts(p++)",true));
        ITEM_ID_MAP.put(6128, new ItemInfo("Rock-shell helm",true));
        ITEM_ID_MAP.put(6129, new ItemInfo("Rock-shell plate",true));
        ITEM_ID_MAP.put(6130, new ItemInfo("Rock-shell legs",true));
        ITEM_ID_MAP.put(6131, new ItemInfo("Spined helm",true));
        ITEM_ID_MAP.put(6133, new ItemInfo("Spined body",true));
        ITEM_ID_MAP.put(6135, new ItemInfo("Spined chaps",true));
        ITEM_ID_MAP.put(6137, new ItemInfo("Skeletal helm",true));
        ITEM_ID_MAP.put(6139, new ItemInfo("Skeletal top",true));
        ITEM_ID_MAP.put(6141, new ItemInfo("Skeletal bottoms",true));
        ITEM_ID_MAP.put(6143, new ItemInfo("Spined boots",true));
        ITEM_ID_MAP.put(6145, new ItemInfo("Rock-shell boots",true));
        ITEM_ID_MAP.put(6147, new ItemInfo("Skeletal boots",true));
        ITEM_ID_MAP.put(6149, new ItemInfo("Spined gloves",true));
        ITEM_ID_MAP.put(6151, new ItemInfo("Rock-shell gloves",true));
        ITEM_ID_MAP.put(6153, new ItemInfo("Skeletal gloves",true));
        ITEM_ID_MAP.put(6155, new ItemInfo("Dagannoth hide",true));
        ITEM_ID_MAP.put(6157, new ItemInfo("Rock-shell chunk",true));
        ITEM_ID_MAP.put(6159, new ItemInfo("Rock-shell shard",true));
        ITEM_ID_MAP.put(6161, new ItemInfo("Rock-shell splinter",true));
        ITEM_ID_MAP.put(6163, new ItemInfo("Skull piece",true));
        ITEM_ID_MAP.put(6165, new ItemInfo("Ribcage piece",true));
        ITEM_ID_MAP.put(6167, new ItemInfo("Fibula piece",true));
        ITEM_ID_MAP.put(6169, new ItemInfo("Circular hide",true));
        ITEM_ID_MAP.put(6171, new ItemInfo("Flattened hide",true));
        ITEM_ID_MAP.put(6173, new ItemInfo("Stretched hide",true));
        ITEM_ID_MAP.put(6211, new ItemInfo("Teak pyre logs",true));
        ITEM_ID_MAP.put(6213, new ItemInfo("Mahogany pyre log",true));
        ITEM_ID_MAP.put(6215, new ItemInfo("Broodoo shield (10)",true));
        ITEM_ID_MAP.put(6235, new ItemInfo("Broodoo shield",true));
        ITEM_ID_MAP.put(6237, new ItemInfo("Broodoo shield (10)",true));
        ITEM_ID_MAP.put(6257, new ItemInfo("Broodoo shield",true));
        ITEM_ID_MAP.put(6259, new ItemInfo("Broodoo shield (10)",true));
        ITEM_ID_MAP.put(6279, new ItemInfo("Broodoo shield",true));
        ITEM_ID_MAP.put(6281, new ItemInfo("Thatch spar light",true));
        ITEM_ID_MAP.put(6283, new ItemInfo("Thatch spar med",true));
        ITEM_ID_MAP.put(6285, new ItemInfo("Thatch spar dense",true));
        ITEM_ID_MAP.put(6287, new ItemInfo("Snake hide",true));
        ITEM_ID_MAP.put(6289, new ItemInfo("Snakeskin",true));
        ITEM_ID_MAP.put(6291, new ItemInfo("Spider carcass",true));
        ITEM_ID_MAP.put(6297, new ItemInfo("Spider on stick",true));
        ITEM_ID_MAP.put(6299, new ItemInfo("Spider on shaft",true));
        ITEM_ID_MAP.put(6305, new ItemInfo("Skewer stick",true));
        ITEM_ID_MAP.put(6306, new ItemInfo("Trading sticks",true));
        ITEM_ID_MAP.put(6311, new ItemInfo("Gout tuber",true));
        ITEM_ID_MAP.put(6313, new ItemInfo("Opal machete",true));
        ITEM_ID_MAP.put(6315, new ItemInfo("Jade machete",true));
        ITEM_ID_MAP.put(6317, new ItemInfo("Red topaz machete",true));
        ITEM_ID_MAP.put(6319, new ItemInfo("Proboscis",true));
        ITEM_ID_MAP.put(6322, new ItemInfo("Snakeskin body",true));
        ITEM_ID_MAP.put(6324, new ItemInfo("Snakeskin chaps",true));
        ITEM_ID_MAP.put(6326, new ItemInfo("Snakeskin bandana",true));
        ITEM_ID_MAP.put(6328, new ItemInfo("Snakeskin boots",true));
        ITEM_ID_MAP.put(6330, new ItemInfo("Snakeskin vambraces",true));
        ITEM_ID_MAP.put(6332, new ItemInfo("Mahogany logs",true));
        ITEM_ID_MAP.put(6333, new ItemInfo("Teak logs",true));
        ITEM_ID_MAP.put(6335, new ItemInfo("Tribal mask",true));
        ITEM_ID_MAP.put(6337, new ItemInfo("Tribal mask",true));
        ITEM_ID_MAP.put(6339, new ItemInfo("Tribal mask",true));
        ITEM_ID_MAP.put(6341, new ItemInfo("Tribal top",true));
        ITEM_ID_MAP.put(6343, new ItemInfo("Villager robe",true));
        ITEM_ID_MAP.put(6345, new ItemInfo("Villager hat",true));
        ITEM_ID_MAP.put(6347, new ItemInfo("Villager armband",true));
        ITEM_ID_MAP.put(6349, new ItemInfo("Villager sandals",true));
        ITEM_ID_MAP.put(6351, new ItemInfo("Tribal top",true));
        ITEM_ID_MAP.put(6353, new ItemInfo("Villager robe",true));
        ITEM_ID_MAP.put(6355, new ItemInfo("Villager hat",true));
        ITEM_ID_MAP.put(6357, new ItemInfo("Villager sandals",true));
        ITEM_ID_MAP.put(6359, new ItemInfo("Villager armband",true));
        ITEM_ID_MAP.put(6361, new ItemInfo("Tribal top",true));
        ITEM_ID_MAP.put(6363, new ItemInfo("Villager robe",true));
        ITEM_ID_MAP.put(6365, new ItemInfo("Villager hat",true));
        ITEM_ID_MAP.put(6367, new ItemInfo("Villager sandals",true));
        ITEM_ID_MAP.put(6369, new ItemInfo("Villager armband",true));
        ITEM_ID_MAP.put(6371, new ItemInfo("Tribal top",true));
        ITEM_ID_MAP.put(6373, new ItemInfo("Villager robe",true));
        ITEM_ID_MAP.put(6375, new ItemInfo("Villager hat",true));
        ITEM_ID_MAP.put(6377, new ItemInfo("Villager sandals",true));
        ITEM_ID_MAP.put(6379, new ItemInfo("Villager armband",true));
        ITEM_ID_MAP.put(6382, new ItemInfo("Fez",true));
        ITEM_ID_MAP.put(6384, new ItemInfo("Desert top",true));
        ITEM_ID_MAP.put(6386, new ItemInfo("Desert robes",true));
        ITEM_ID_MAP.put(6388, new ItemInfo("Desert top",true));
        ITEM_ID_MAP.put(6390, new ItemInfo("Desert legs",true));
        ITEM_ID_MAP.put(6392, new ItemInfo("Menaphite purple hat",true));
        ITEM_ID_MAP.put(6394, new ItemInfo("Menaphite purple top",true));
        ITEM_ID_MAP.put(6396, new ItemInfo("Menaphite purple robe",true));
        ITEM_ID_MAP.put(6398, new ItemInfo("Menaphite purple kilt",true));
        ITEM_ID_MAP.put(6400, new ItemInfo("Menaphite red hat",true));
        ITEM_ID_MAP.put(6402, new ItemInfo("Menaphite red top",true));
        ITEM_ID_MAP.put(6404, new ItemInfo("Menaphite red robe",true));
        ITEM_ID_MAP.put(6406, new ItemInfo("Menaphite red kilt",true));
        ITEM_ID_MAP.put(6408, new ItemInfo("Oak blackjack(o)",true));
        ITEM_ID_MAP.put(6410, new ItemInfo("Oak blackjack(d)",true));
        ITEM_ID_MAP.put(6412, new ItemInfo("Willow blackjack(o)",true));
        ITEM_ID_MAP.put(6414, new ItemInfo("Willow blackjack(d)",true));
        ITEM_ID_MAP.put(6416, new ItemInfo("Maple blackjack",true));
        ITEM_ID_MAP.put(6418, new ItemInfo("Maple blackjack(o)",true));
        ITEM_ID_MAP.put(6420, new ItemInfo("Maple blackjack(d)",true));
        ITEM_ID_MAP.put(6470, new ItemInfo("Compost potion(4)",true));
        ITEM_ID_MAP.put(6472, new ItemInfo("Compost potion(3)",true));
        ITEM_ID_MAP.put(6474, new ItemInfo("Compost potion(2)",true));
        ITEM_ID_MAP.put(6476, new ItemInfo("Compost potion(1)",true));
        ITEM_ID_MAP.put(6522, new ItemInfo("Toktz-xil-ul",true));
        ITEM_ID_MAP.put(6523, new ItemInfo("Toktz-xil-ak",true));
        ITEM_ID_MAP.put(6524, new ItemInfo("Toktz-ket-xil",true));
        ITEM_ID_MAP.put(6525, new ItemInfo("Toktz-xil-ek",true));
        ITEM_ID_MAP.put(6526, new ItemInfo("Toktz-mej-tal",true));
        ITEM_ID_MAP.put(6527, new ItemInfo("Tzhaar-ket-em",true));
        ITEM_ID_MAP.put(6528, new ItemInfo("Tzhaar-ket-om",true));
        ITEM_ID_MAP.put(6562, new ItemInfo("Mud battlestaff",true));
        ITEM_ID_MAP.put(6563, new ItemInfo("Mystic mud staff",true));
        ITEM_ID_MAP.put(6568, new ItemInfo("Obsidian cape",true));
        ITEM_ID_MAP.put(6571, new ItemInfo("Uncut onyx",true));
        ITEM_ID_MAP.put(6573, new ItemInfo("Onyx",true));
        ITEM_ID_MAP.put(6575, new ItemInfo("Onyx ring",true));
        ITEM_ID_MAP.put(6577, new ItemInfo("Onyx necklace",true));
        ITEM_ID_MAP.put(6579, new ItemInfo("Onyx amulet (u)",true));
        ITEM_ID_MAP.put(6581, new ItemInfo("Onyx amulet",true));
        ITEM_ID_MAP.put(6583, new ItemInfo("Ring of stone",true));
        ITEM_ID_MAP.put(6585, new ItemInfo("Amulet of fury",true));
        ITEM_ID_MAP.put(6587, new ItemInfo("White claws",true));
        ITEM_ID_MAP.put(6589, new ItemInfo("White battleaxe",true));
        ITEM_ID_MAP.put(6591, new ItemInfo("White dagger",true));
        ITEM_ID_MAP.put(6593, new ItemInfo("White dagger(p)",true));
        ITEM_ID_MAP.put(6595, new ItemInfo("White dagger(p+)",true));
        ITEM_ID_MAP.put(6597, new ItemInfo("White dagger(p++)",true));
        ITEM_ID_MAP.put(6599, new ItemInfo("White halberd",true));
        ITEM_ID_MAP.put(6601, new ItemInfo("White mace",true));
        ITEM_ID_MAP.put(6603, new ItemInfo("White magic staff",true));
        ITEM_ID_MAP.put(6605, new ItemInfo("White sword",true));
        ITEM_ID_MAP.put(6607, new ItemInfo("White longsword",true));
        ITEM_ID_MAP.put(6609, new ItemInfo("White 2h sword",true));
        ITEM_ID_MAP.put(6611, new ItemInfo("White scimitar",true));
        ITEM_ID_MAP.put(6613, new ItemInfo("White warhammer",true));
        ITEM_ID_MAP.put(6615, new ItemInfo("White chainbody",true));
        ITEM_ID_MAP.put(6617, new ItemInfo("White platebody",true));
        ITEM_ID_MAP.put(6619, new ItemInfo("White boots",true));
        ITEM_ID_MAP.put(6621, new ItemInfo("White med helm",true));
        ITEM_ID_MAP.put(6623, new ItemInfo("White full helm",true));
        ITEM_ID_MAP.put(6625, new ItemInfo("White platelegs",true));
        ITEM_ID_MAP.put(6627, new ItemInfo("White plateskirt",true));
        ITEM_ID_MAP.put(6629, new ItemInfo("White gloves",true));
        ITEM_ID_MAP.put(6631, new ItemInfo("White sq shield",true));
        ITEM_ID_MAP.put(6633, new ItemInfo("White kiteshield",true));
        ITEM_ID_MAP.put(6667, new ItemInfo("Empty fishbowl",true));
        ITEM_ID_MAP.put(6681, new ItemInfo("Ground guam",true));
        ITEM_ID_MAP.put(6685, new ItemInfo("Saradomin brew(4)",true));
        ITEM_ID_MAP.put(6687, new ItemInfo("Saradomin brew(3)",true));
        ITEM_ID_MAP.put(6689, new ItemInfo("Saradomin brew(2)",true));
        ITEM_ID_MAP.put(6691, new ItemInfo("Saradomin brew(1)",true));
        ITEM_ID_MAP.put(6693, new ItemInfo("Crushed nest",true));
        ITEM_ID_MAP.put(6697, new ItemInfo("Pat of butter",true));
        ITEM_ID_MAP.put(6701, new ItemInfo("Baked potato",true));
        ITEM_ID_MAP.put(6703, new ItemInfo("Potato with butter",true));
        ITEM_ID_MAP.put(6705, new ItemInfo("Potato with cheese",true));
        ITEM_ID_MAP.put(6724, new ItemInfo("Seercull",true));
        ITEM_ID_MAP.put(6729, new ItemInfo("Dagannoth bones",true));
        ITEM_ID_MAP.put(6731, new ItemInfo("Seers ring",true));
        ITEM_ID_MAP.put(6733, new ItemInfo("Archers ring",true));
        ITEM_ID_MAP.put(6735, new ItemInfo("Warrior ring",true));
        ITEM_ID_MAP.put(6737, new ItemInfo("Berserker ring",true));
        ITEM_ID_MAP.put(6739, new ItemInfo("Dragon axe",true));
        ITEM_ID_MAP.put(6750, new ItemInfo("Black desert shirt",true));
        ITEM_ID_MAP.put(6752, new ItemInfo("Black desert robe",true));
        ITEM_ID_MAP.put(6760, new ItemInfo("Guthix mjolnir",true));
        ITEM_ID_MAP.put(6762, new ItemInfo("Saradomin mjolnir",true));
        ITEM_ID_MAP.put(6764, new ItemInfo("Zamorak mjolnir",true));
        ITEM_ID_MAP.put(6794, new ItemInfo("Choc-ice",true));
        ITEM_ID_MAP.put(6809, new ItemInfo("Granite legs",true));
        ITEM_ID_MAP.put(6812, new ItemInfo("Wyvern bones",true));
        ITEM_ID_MAP.put(6814, new ItemInfo("Fur",false));
        ITEM_ID_MAP.put(6889, new ItemInfo("Mage's book",true));
        ITEM_ID_MAP.put(6891, new ItemInfo("Arena book",true));
        ITEM_ID_MAP.put(6908, new ItemInfo("Beginner wand",true));
        ITEM_ID_MAP.put(6910, new ItemInfo("Apprentice wand",true));
        ITEM_ID_MAP.put(6912, new ItemInfo("Teacher wand",true));
        ITEM_ID_MAP.put(6914, new ItemInfo("Master wand",true));
        ITEM_ID_MAP.put(6916, new ItemInfo("Infinity top",true));
        ITEM_ID_MAP.put(6918, new ItemInfo("Infinity hat",true));
        ITEM_ID_MAP.put(6920, new ItemInfo("Infinity boots",true));
        ITEM_ID_MAP.put(6922, new ItemInfo("Infinity gloves",true));
        ITEM_ID_MAP.put(6924, new ItemInfo("Infinity bottoms",true));
        ITEM_ID_MAP.put(6959, new ItemInfo("Pink cape",true));
        ITEM_ID_MAP.put(6962, new ItemInfo("Triangle sandwich",false));
        ITEM_ID_MAP.put(6971, new ItemInfo("Sandstone (1kg)",true));
        ITEM_ID_MAP.put(6973, new ItemInfo("Sandstone (2kg)",true));
        ITEM_ID_MAP.put(6975, new ItemInfo("Sandstone (5kg)",true));
        ITEM_ID_MAP.put(6977, new ItemInfo("Sandstone (10kg)",true));
        ITEM_ID_MAP.put(6979, new ItemInfo("Granite (500g)",true));
        ITEM_ID_MAP.put(6981, new ItemInfo("Granite (2kg)",true));
        ITEM_ID_MAP.put(6983, new ItemInfo("Granite (5kg)",true));
        ITEM_ID_MAP.put(7051, new ItemInfo("Unlit bug lantern",true));
        ITEM_ID_MAP.put(7054, new ItemInfo("Chilli potato",true));
        ITEM_ID_MAP.put(7056, new ItemInfo("Egg potato",true));
        ITEM_ID_MAP.put(7058, new ItemInfo("Mushroom potato",true));
        ITEM_ID_MAP.put(7060, new ItemInfo("Tuna potato",true));
        ITEM_ID_MAP.put(7062, new ItemInfo("Chilli con carne",true));
        ITEM_ID_MAP.put(7064, new ItemInfo("Egg and tomato",true));
        ITEM_ID_MAP.put(7066, new ItemInfo("Mushroom & onion",true));
        ITEM_ID_MAP.put(7068, new ItemInfo("Tuna and corn",true));
        ITEM_ID_MAP.put(7070, new ItemInfo("Minced meat",true));
        ITEM_ID_MAP.put(7072, new ItemInfo("Spicy sauce",true));
        ITEM_ID_MAP.put(7074, new ItemInfo("Chopped garlic",true));
        ITEM_ID_MAP.put(7076, new ItemInfo("Uncooked egg",true));
        ITEM_ID_MAP.put(7078, new ItemInfo("Scrambled egg",true));
        ITEM_ID_MAP.put(7080, new ItemInfo("Sliced mushrooms",true));
        ITEM_ID_MAP.put(7082, new ItemInfo("Fried mushrooms",true));
        ITEM_ID_MAP.put(7084, new ItemInfo("Fried onions",true));
        ITEM_ID_MAP.put(7086, new ItemInfo("Chopped tuna",true));
        ITEM_ID_MAP.put(7088, new ItemInfo("Sweetcorn",true));
        ITEM_ID_MAP.put(7110, new ItemInfo("Stripy pirate shirt",true));
        ITEM_ID_MAP.put(7112, new ItemInfo("Pirate bandana",true));
        ITEM_ID_MAP.put(7114, new ItemInfo("Pirate boots",true));
        ITEM_ID_MAP.put(7116, new ItemInfo("Pirate leggings",true));
        ITEM_ID_MAP.put(7122, new ItemInfo("Stripy pirate shirt",true));
        ITEM_ID_MAP.put(7124, new ItemInfo("Pirate bandana",true));
        ITEM_ID_MAP.put(7126, new ItemInfo("Pirate leggings",true));
        ITEM_ID_MAP.put(7128, new ItemInfo("Stripy pirate shirt",true));
        ITEM_ID_MAP.put(7130, new ItemInfo("Pirate bandana",true));
        ITEM_ID_MAP.put(7132, new ItemInfo("Pirate leggings",true));
        ITEM_ID_MAP.put(7134, new ItemInfo("Stripy pirate shirt",true));
        ITEM_ID_MAP.put(7136, new ItemInfo("Pirate bandana",true));
        ITEM_ID_MAP.put(7138, new ItemInfo("Pirate leggings",true));
        ITEM_ID_MAP.put(7158, new ItemInfo("Dragon 2h sword",true));
        ITEM_ID_MAP.put(7159, new ItemInfo("Insulated boots",true));
        ITEM_ID_MAP.put(7162, new ItemInfo("Pie recipe book",true));
        ITEM_ID_MAP.put(7168, new ItemInfo("Raw mud pie",true));
        ITEM_ID_MAP.put(7170, new ItemInfo("Mud pie",true));
        ITEM_ID_MAP.put(7176, new ItemInfo("Raw garden pie",true));
        ITEM_ID_MAP.put(7178, new ItemInfo("Garden pie",true));
        ITEM_ID_MAP.put(7186, new ItemInfo("Raw fish pie",true));
        ITEM_ID_MAP.put(7188, new ItemInfo("Fish pie",true));
        ITEM_ID_MAP.put(7196, new ItemInfo("Raw admiral pie",true));
        ITEM_ID_MAP.put(7198, new ItemInfo("Admiral pie",true));
        ITEM_ID_MAP.put(7206, new ItemInfo("Raw wild pie",true));
        ITEM_ID_MAP.put(7208, new ItemInfo("Wild pie",true));
        ITEM_ID_MAP.put(7216, new ItemInfo("Raw summer pie",true));
        ITEM_ID_MAP.put(7218, new ItemInfo("Summer pie",true));
        ITEM_ID_MAP.put(7223, new ItemInfo("Roast rabbit",true));
        ITEM_ID_MAP.put(7225, new ItemInfo("Iron spit",true));
        ITEM_ID_MAP.put(7228, new ItemInfo("Cooked chompy",true));
        ITEM_ID_MAP.put(7319, new ItemInfo("Red boater",true));
        ITEM_ID_MAP.put(7321, new ItemInfo("Orange boater",true));
        ITEM_ID_MAP.put(7323, new ItemInfo("Green boater",true));
        ITEM_ID_MAP.put(7325, new ItemInfo("Blue boater",true));
        ITEM_ID_MAP.put(7327, new ItemInfo("Black boater",true));
        ITEM_ID_MAP.put(7329, new ItemInfo("Red firelighter",true));
        ITEM_ID_MAP.put(7330, new ItemInfo("Green firelighter",true));
        ITEM_ID_MAP.put(7331, new ItemInfo("Blue firelighter",true));
        ITEM_ID_MAP.put(7332, new ItemInfo("Black shield (h1)",false));
        ITEM_ID_MAP.put(7334, new ItemInfo("Adamant shield (h1)",false));
        ITEM_ID_MAP.put(7336, new ItemInfo("Rune shield (h1)",false));
        ITEM_ID_MAP.put(7338, new ItemInfo("Black shield (h2)",false));
        ITEM_ID_MAP.put(7340, new ItemInfo("Adamant shield (h2)",false));
        ITEM_ID_MAP.put(7342, new ItemInfo("Rune shield (h2)",false));
        ITEM_ID_MAP.put(7344, new ItemInfo("Black shield (h3)",false));
        ITEM_ID_MAP.put(7346, new ItemInfo("Adamant shield (h3)",false));
        ITEM_ID_MAP.put(7348, new ItemInfo("Rune shield (h3)",false));
        ITEM_ID_MAP.put(7350, new ItemInfo("Black shield (h4)",false));
        ITEM_ID_MAP.put(7352, new ItemInfo("Adamant shield (h4)",false));
        ITEM_ID_MAP.put(7354, new ItemInfo("Rune shield (h4)",false));
        ITEM_ID_MAP.put(7356, new ItemInfo("Black shield (h5)",false));
        ITEM_ID_MAP.put(7358, new ItemInfo("Adamant shield (h5)",false));
        ITEM_ID_MAP.put(7360, new ItemInfo("Rune shield (h5)",false));
        ITEM_ID_MAP.put(7362, new ItemInfo("Studded body (g)",false));
        ITEM_ID_MAP.put(7364, new ItemInfo("Studded body (t)",false));
        ITEM_ID_MAP.put(7366, new ItemInfo("Studded chaps (g)",false));
        ITEM_ID_MAP.put(7368, new ItemInfo("Studded chaps (t)",false));
        ITEM_ID_MAP.put(7370, new ItemInfo("Green d'hide body (g)",false));
        ITEM_ID_MAP.put(7372, new ItemInfo("Green d'hide body (t)",false));
        ITEM_ID_MAP.put(7374, new ItemInfo("Blue d'hide body (g)",true));
        ITEM_ID_MAP.put(7376, new ItemInfo("Blue d'hide body (t)",true));
        ITEM_ID_MAP.put(7378, new ItemInfo("Green d'hide chaps (g)",false));
        ITEM_ID_MAP.put(7380, new ItemInfo("Green d'hide chaps (t)",false));
        ITEM_ID_MAP.put(7382, new ItemInfo("Blue d'hide chaps (g)",true));
        ITEM_ID_MAP.put(7384, new ItemInfo("Blue d'hide chaps (t)",true));
        ITEM_ID_MAP.put(7386, new ItemInfo("Blue skirt (g)",false));
        ITEM_ID_MAP.put(7388, new ItemInfo("Blue skirt (t)",false));
        ITEM_ID_MAP.put(7390, new ItemInfo("Blue wizard robe (g)",false));
        ITEM_ID_MAP.put(7392, new ItemInfo("Blue wizard robe (t)",false));
        ITEM_ID_MAP.put(7394, new ItemInfo("Blue wizard hat (g)",false));
        ITEM_ID_MAP.put(7396, new ItemInfo("Blue wizard hat (t)",false));
        ITEM_ID_MAP.put(7398, new ItemInfo("Enchanted robe",true));
        ITEM_ID_MAP.put(7399, new ItemInfo("Enchanted top",true));
        ITEM_ID_MAP.put(7400, new ItemInfo("Enchanted hat",true));
        ITEM_ID_MAP.put(7416, new ItemInfo("Mole claw",true));
        ITEM_ID_MAP.put(7418, new ItemInfo("Mole skin",true));
        ITEM_ID_MAP.put(7433, new ItemInfo("Wooden spoon",true));
        ITEM_ID_MAP.put(7435, new ItemInfo("Egg whisk",true));
        ITEM_ID_MAP.put(7437, new ItemInfo("Spork",true));
        ITEM_ID_MAP.put(7439, new ItemInfo("Spatula",true));
        ITEM_ID_MAP.put(7441, new ItemInfo("Frying pan",true));
        ITEM_ID_MAP.put(7443, new ItemInfo("Skewer",true));
        ITEM_ID_MAP.put(7445, new ItemInfo("Rolling pin",true));
        ITEM_ID_MAP.put(7447, new ItemInfo("Kitchen knife",true));
        ITEM_ID_MAP.put(7449, new ItemInfo("Meat tenderiser",true));
        ITEM_ID_MAP.put(7451, new ItemInfo("Cleaver",true));
        ITEM_ID_MAP.put(7466, new ItemInfo("Cornflour",false));
        ITEM_ID_MAP.put(7468, new ItemInfo("Pot of cornflour",true));
        ITEM_ID_MAP.put(7521, new ItemInfo("Cooked crab meat",true));
        ITEM_ID_MAP.put(7566, new ItemInfo("Raw jubbly",true));
        ITEM_ID_MAP.put(7568, new ItemInfo("Cooked jubbly",true));
        ITEM_ID_MAP.put(7650, new ItemInfo("Silver dust",true));
        ITEM_ID_MAP.put(7660, new ItemInfo("Guthix balance(4)",true));
        ITEM_ID_MAP.put(7662, new ItemInfo("Guthix balance(3)",true));
        ITEM_ID_MAP.put(7664, new ItemInfo("Guthix balance(2)",true));
        ITEM_ID_MAP.put(7666, new ItemInfo("Guthix balance(1)",true));
        ITEM_ID_MAP.put(7668, new ItemInfo("Gadderhammer",true));
        ITEM_ID_MAP.put(7759, new ItemInfo("Toy soldier",true));
        ITEM_ID_MAP.put(7761, new ItemInfo("Toy soldier (wound)",true));
        ITEM_ID_MAP.put(7763, new ItemInfo("Toy doll",true));
        ITEM_ID_MAP.put(7765, new ItemInfo("Toy doll (wound)",true));
        ITEM_ID_MAP.put(7767, new ItemInfo("Toy mouse",true));
        ITEM_ID_MAP.put(7769, new ItemInfo("Toy mouse (wound)",true));
        ITEM_ID_MAP.put(7771, new ItemInfo("Toy cat",true));
        ITEM_ID_MAP.put(7801, new ItemInfo("Snake hide",true));
        ITEM_ID_MAP.put(7919, new ItemInfo("Bottle of wine",true));
        ITEM_ID_MAP.put(7936, new ItemInfo("Pure essence",false));
        ITEM_ID_MAP.put(7939, new ItemInfo("Tortoise shell",true));
        ITEM_ID_MAP.put(7944, new ItemInfo("Raw monkfish",true));
        ITEM_ID_MAP.put(7946, new ItemInfo("Monkfish",true));
        ITEM_ID_MAP.put(8007, new ItemInfo("Varrock teleport",true));
        ITEM_ID_MAP.put(8008, new ItemInfo("Lumbridge teleport",true));
        ITEM_ID_MAP.put(8009, new ItemInfo("Falador teleport",true));
        ITEM_ID_MAP.put(8010, new ItemInfo("Camelot teleport",true));
        ITEM_ID_MAP.put(8011, new ItemInfo("Ardougne teleport",true));
        ITEM_ID_MAP.put(8012, new ItemInfo("Watchtower teleport",true));
        ITEM_ID_MAP.put(8013, new ItemInfo("Teleport to house",true));
        ITEM_ID_MAP.put(8014, new ItemInfo("Bones to bananas",true));
        ITEM_ID_MAP.put(8015, new ItemInfo("Bones to peaches",true));
        ITEM_ID_MAP.put(8016, new ItemInfo("Enchant sapphire",true));
        ITEM_ID_MAP.put(8017, new ItemInfo("Enchant emerald",true));
        ITEM_ID_MAP.put(8018, new ItemInfo("Enchant ruby",true));
        ITEM_ID_MAP.put(8019, new ItemInfo("Enchant diamond",true));
        ITEM_ID_MAP.put(8020, new ItemInfo("Enchant dragonstn.",true));
        ITEM_ID_MAP.put(8021, new ItemInfo("Enchant onyx",true));
        ITEM_ID_MAP.put(8417, new ItemInfo("Bagged dead tree",true));
        ITEM_ID_MAP.put(8419, new ItemInfo("Bagged nice tree",true));
        ITEM_ID_MAP.put(8421, new ItemInfo("Bagged oak tree",true));
        ITEM_ID_MAP.put(8423, new ItemInfo("Bagged willow tree",true));
        ITEM_ID_MAP.put(8425, new ItemInfo("Bagged maple tree",true));
        ITEM_ID_MAP.put(8427, new ItemInfo("Bagged yew tree",true));
        ITEM_ID_MAP.put(8429, new ItemInfo("Bagged magic tree",true));
        ITEM_ID_MAP.put(8431, new ItemInfo("Bagged plant 1",true));
        ITEM_ID_MAP.put(8433, new ItemInfo("Bagged plant 2",true));
        ITEM_ID_MAP.put(8435, new ItemInfo("Bagged plant 3",true));
        ITEM_ID_MAP.put(8437, new ItemInfo("Thorny hedge",true));
        ITEM_ID_MAP.put(8439, new ItemInfo("Nice hedge",true));
        ITEM_ID_MAP.put(8441, new ItemInfo("Small box hedge",true));
        ITEM_ID_MAP.put(8443, new ItemInfo("Topiary hedge",true));
        ITEM_ID_MAP.put(8445, new ItemInfo("Fancy hedge",true));
        ITEM_ID_MAP.put(8447, new ItemInfo("Tall fancy hedge",true));
        ITEM_ID_MAP.put(8449, new ItemInfo("Tall box hedge",true));
        ITEM_ID_MAP.put(8451, new ItemInfo("Bagged flower",true));
        ITEM_ID_MAP.put(8453, new ItemInfo("Bagged daffodils",true));
        ITEM_ID_MAP.put(8455, new ItemInfo("Bagged bluebells",true));
        ITEM_ID_MAP.put(8457, new ItemInfo("Bagged sunflower",true));
        ITEM_ID_MAP.put(8459, new ItemInfo("Bagged marigolds",true));
        ITEM_ID_MAP.put(8461, new ItemInfo("Bagged roses",true));
        ITEM_ID_MAP.put(8496, new ItemInfo("Crude chair",true));
        ITEM_ID_MAP.put(8498, new ItemInfo("Wooden chair",true));
        ITEM_ID_MAP.put(8500, new ItemInfo("Rocking chair",true));
        ITEM_ID_MAP.put(8502, new ItemInfo("Oak chair",true));
        ITEM_ID_MAP.put(8504, new ItemInfo("Oak armchair",true));
        ITEM_ID_MAP.put(8506, new ItemInfo("Teak armchair",true));
        ITEM_ID_MAP.put(8508, new ItemInfo("Mahogany armchair",true));
        ITEM_ID_MAP.put(8510, new ItemInfo("Bookcase",true));
        ITEM_ID_MAP.put(8512, new ItemInfo("Oak bookcase",true));
        ITEM_ID_MAP.put(8514, new ItemInfo("Mahogany bookcase",true));
        ITEM_ID_MAP.put(8516, new ItemInfo("Beer barrel",true));
        ITEM_ID_MAP.put(8518, new ItemInfo("Cider barrel",true));
        ITEM_ID_MAP.put(8520, new ItemInfo("Asgarnian ale",true));
        ITEM_ID_MAP.put(8522, new ItemInfo("Greenman's ale",true));
        ITEM_ID_MAP.put(8524, new ItemInfo("Dragon bitter",true));
        ITEM_ID_MAP.put(8526, new ItemInfo("Chef's delight",true));
        ITEM_ID_MAP.put(8528, new ItemInfo("Kitchen table",true));
        ITEM_ID_MAP.put(8530, new ItemInfo("Oak kitchen table",true));
        ITEM_ID_MAP.put(8532, new ItemInfo("Teak kitchen table",true));
        ITEM_ID_MAP.put(8548, new ItemInfo("Wood dining table",true));
        ITEM_ID_MAP.put(8550, new ItemInfo("Oak dining table",true));
        ITEM_ID_MAP.put(8552, new ItemInfo("Carved oak table",true));
        ITEM_ID_MAP.put(8554, new ItemInfo("Teak table",true));
        ITEM_ID_MAP.put(8556, new ItemInfo("Carved teak table",true));
        ITEM_ID_MAP.put(8558, new ItemInfo("Mahogany table",true));
        ITEM_ID_MAP.put(8560, new ItemInfo("Opulent table",true));
        ITEM_ID_MAP.put(8562, new ItemInfo("Wooden bench",true));
        ITEM_ID_MAP.put(8564, new ItemInfo("Oak bench",true));
        ITEM_ID_MAP.put(8566, new ItemInfo("Carved oak bench",true));
        ITEM_ID_MAP.put(8568, new ItemInfo("Teak dining bench",true));
        ITEM_ID_MAP.put(8570, new ItemInfo("Carved teak bench",true));
        ITEM_ID_MAP.put(8572, new ItemInfo("Mahogany bench",true));
        ITEM_ID_MAP.put(8574, new ItemInfo("Gilded bench",true));
        ITEM_ID_MAP.put(8576, new ItemInfo("Wooden bed",true));
        ITEM_ID_MAP.put(8578, new ItemInfo("Oak bed",true));
        ITEM_ID_MAP.put(8580, new ItemInfo("Large oak bed",true));
        ITEM_ID_MAP.put(8582, new ItemInfo("Teak bed",true));
        ITEM_ID_MAP.put(8584, new ItemInfo("Large teak bed",true));
        ITEM_ID_MAP.put(8586, new ItemInfo("Four-poster bed",true));
        ITEM_ID_MAP.put(8588, new ItemInfo("Gilded four-poster",true));
        ITEM_ID_MAP.put(8590, new ItemInfo("Oak clock",true));
        ITEM_ID_MAP.put(8592, new ItemInfo("Teak clock",true));
        ITEM_ID_MAP.put(8594, new ItemInfo("Gilded clock",true));
        ITEM_ID_MAP.put(8596, new ItemInfo("Shaving stand",true));
        ITEM_ID_MAP.put(8598, new ItemInfo("Oak shaving stand",true));
        ITEM_ID_MAP.put(8600, new ItemInfo("Oak dresser",true));
        ITEM_ID_MAP.put(8602, new ItemInfo("Teak dresser",true));
        ITEM_ID_MAP.put(8604, new ItemInfo("Fancy teak dresser",true));
        ITEM_ID_MAP.put(8606, new ItemInfo("Mahogany dresser",true));
        ITEM_ID_MAP.put(8608, new ItemInfo("Gilded dresser",true));
        ITEM_ID_MAP.put(8610, new ItemInfo("Shoe box",true));
        ITEM_ID_MAP.put(8612, new ItemInfo("Oak drawers",true));
        ITEM_ID_MAP.put(8614, new ItemInfo("Oak wardrobe",true));
        ITEM_ID_MAP.put(8616, new ItemInfo("Teak drawers",true));
        ITEM_ID_MAP.put(8618, new ItemInfo("Teak wardrobe",true));
        ITEM_ID_MAP.put(8620, new ItemInfo("Mahogany wardrobe",true));
        ITEM_ID_MAP.put(8622, new ItemInfo("Gilded wardrobe",true));
        ITEM_ID_MAP.put(8624, new ItemInfo("Crystal ball",true));
        ITEM_ID_MAP.put(8626, new ItemInfo("Elemental sphere",true));
        ITEM_ID_MAP.put(8628, new ItemInfo("Crystal of power",true));
        ITEM_ID_MAP.put(8778, new ItemInfo("Oak plank",true));
        ITEM_ID_MAP.put(8780, new ItemInfo("Teak plank",true));
        ITEM_ID_MAP.put(8782, new ItemInfo("Mahogany plank",true));
        ITEM_ID_MAP.put(8784, new ItemInfo("Gold leaf",true));
        ITEM_ID_MAP.put(8786, new ItemInfo("Marble block",true));
        ITEM_ID_MAP.put(8788, new ItemInfo("Magic stone",true));
        ITEM_ID_MAP.put(8790, new ItemInfo("Bolt of cloth",true));
        ITEM_ID_MAP.put(8792, new ItemInfo("Clockwork",true));
        ITEM_ID_MAP.put(8794, new ItemInfo("Saw",true));
        ITEM_ID_MAP.put(8837, new ItemInfo("Timber beam",true));
        ITEM_ID_MAP.put(8872, new ItemInfo("Bone dagger",true));
        ITEM_ID_MAP.put(8874, new ItemInfo("Bone dagger (p)",true));
        ITEM_ID_MAP.put(8876, new ItemInfo("Bone dagger (p+)",true));
        ITEM_ID_MAP.put(8878, new ItemInfo("Bone dagger (p++)",true));
        ITEM_ID_MAP.put(8880, new ItemInfo("Dorgeshuun crossbow",true));
        ITEM_ID_MAP.put(8882, new ItemInfo("Bone bolts",true));
        ITEM_ID_MAP.put(8901, new ItemInfo("Black mask (10)",true));
        ITEM_ID_MAP.put(8921, new ItemInfo("Black mask",true));
        ITEM_ID_MAP.put(8924, new ItemInfo("Bandana eyepatch",true));
        ITEM_ID_MAP.put(8925, new ItemInfo("Bandana eyepatch",true));
        ITEM_ID_MAP.put(8926, new ItemInfo("Bandana eyepatch",true));
        ITEM_ID_MAP.put(8927, new ItemInfo("Bandana eyepatch",true));
        ITEM_ID_MAP.put(8928, new ItemInfo("Hat eyepatch",true));
        ITEM_ID_MAP.put(9003, new ItemInfo("Security book",false));
        ITEM_ID_MAP.put(9004, new ItemInfo("Stronghold notes",false));
        ITEM_ID_MAP.put(9026, new ItemInfo("Ivory comb",true));
        ITEM_ID_MAP.put(9028, new ItemInfo("Golden scarab",true));
        ITEM_ID_MAP.put(9030, new ItemInfo("Stone scarab",true));
        ITEM_ID_MAP.put(9032, new ItemInfo("Pottery scarab",true));
        ITEM_ID_MAP.put(9034, new ItemInfo("Golden statuette",true));
        ITEM_ID_MAP.put(9036, new ItemInfo("Pottery statuette",true));
        ITEM_ID_MAP.put(9038, new ItemInfo("Stone statuette",true));
        ITEM_ID_MAP.put(9040, new ItemInfo("Gold seal",true));
        ITEM_ID_MAP.put(9042, new ItemInfo("Stone seal",true));
        ITEM_ID_MAP.put(9044, new ItemInfo("Pharaoh's sceptre (3)",true));
        ITEM_ID_MAP.put(9050, new ItemInfo("Pharaoh's sceptre",true));
        ITEM_ID_MAP.put(9052, new ItemInfo("Locust meat",true));
        ITEM_ID_MAP.put(9075, new ItemInfo("Astral rune",true));
        ITEM_ID_MAP.put(9140, new ItemInfo("Iron bolts",true));
        ITEM_ID_MAP.put(9141, new ItemInfo("Steel bolts",true));
        ITEM_ID_MAP.put(9142, new ItemInfo("Mithril bolts",true));
        ITEM_ID_MAP.put(9143, new ItemInfo("Adamant bolts",true));
        ITEM_ID_MAP.put(9144, new ItemInfo("Runite bolts",true));
        ITEM_ID_MAP.put(9145, new ItemInfo("Silver bolts",true));
        ITEM_ID_MAP.put(9174, new ItemInfo("Bronze crossbow",true));
        ITEM_ID_MAP.put(9177, new ItemInfo("Iron crossbow",true));
        ITEM_ID_MAP.put(9179, new ItemInfo("Steel crossbow",true));
        ITEM_ID_MAP.put(9181, new ItemInfo("Mith crossbow",true));
        ITEM_ID_MAP.put(9183, new ItemInfo("Adamant crossbow",true));
        ITEM_ID_MAP.put(9185, new ItemInfo("Rune crossbow",true));
        ITEM_ID_MAP.put(9187, new ItemInfo("Jade bolt tips",true));
        ITEM_ID_MAP.put(9188, new ItemInfo("Topaz bolt tips",true));
        ITEM_ID_MAP.put(9189, new ItemInfo("Sapphire bolt tips",true));
        ITEM_ID_MAP.put(9190, new ItemInfo("Emerald bolt tips",true));
        ITEM_ID_MAP.put(9191, new ItemInfo("Ruby bolt tips",true));
        ITEM_ID_MAP.put(9192, new ItemInfo("Diamond bolt tips",true));
        ITEM_ID_MAP.put(9193, new ItemInfo("Dragon bolt tips",true));
        ITEM_ID_MAP.put(9194, new ItemInfo("Onyx bolt tips",true));
        ITEM_ID_MAP.put(9236, new ItemInfo("Opal bolts (e)",true));
        ITEM_ID_MAP.put(9238, new ItemInfo("Pearl bolts (e)",true));
        ITEM_ID_MAP.put(9239, new ItemInfo("Topaz bolts (e)",true));
        ITEM_ID_MAP.put(9240, new ItemInfo("Sapphire bolts (e)",true));
        ITEM_ID_MAP.put(9241, new ItemInfo("Emerald bolts (e)",true));
        ITEM_ID_MAP.put(9242, new ItemInfo("Ruby bolts (e)",true));
        ITEM_ID_MAP.put(9243, new ItemInfo("Diamond bolts (e)",true));
        ITEM_ID_MAP.put(9244, new ItemInfo("Dragon bolts (e)",true));
        ITEM_ID_MAP.put(9245, new ItemInfo("Onyx bolts (e)",true));
        ITEM_ID_MAP.put(9287, new ItemInfo("Iron bolts (p)",true));
        ITEM_ID_MAP.put(9288, new ItemInfo("Steel bolts (p)",true));
        ITEM_ID_MAP.put(9289, new ItemInfo("Mithril bolts (p)",true));
        ITEM_ID_MAP.put(9290, new ItemInfo("Adamant bolts (p)",true));
        ITEM_ID_MAP.put(9291, new ItemInfo("Runite bolts (p)",true));
        ITEM_ID_MAP.put(9292, new ItemInfo("Silver bolts (p)",true));
        ITEM_ID_MAP.put(9294, new ItemInfo("Iron bolts(p+)",true));
        ITEM_ID_MAP.put(9295, new ItemInfo("Steel bolts(p+)",true));
        ITEM_ID_MAP.put(9296, new ItemInfo("Mithril bolts(p+)",true));
        ITEM_ID_MAP.put(9297, new ItemInfo("Adamant bolts(p+)",true));
        ITEM_ID_MAP.put(9298, new ItemInfo("Runite bolts(p+)",true));
        ITEM_ID_MAP.put(9299, new ItemInfo("Silver bolts(p+)",true));
        ITEM_ID_MAP.put(9301, new ItemInfo("Iron bolts(p++)",true));
        ITEM_ID_MAP.put(9302, new ItemInfo("Steel bolts(p++)",true));
        ITEM_ID_MAP.put(9303, new ItemInfo("Mithril bolts(p++)",true));
        ITEM_ID_MAP.put(9304, new ItemInfo("Adamant bolts(p++)",true));
        ITEM_ID_MAP.put(9305, new ItemInfo("Runite bolts(p++)",true));
        ITEM_ID_MAP.put(9306, new ItemInfo("Silver bolts(p++)",true));
        ITEM_ID_MAP.put(9336, new ItemInfo("Topaz bolts",true));
        ITEM_ID_MAP.put(9337, new ItemInfo("Sapphire bolts",true));
        ITEM_ID_MAP.put(9338, new ItemInfo("Emerald bolts",true));
        ITEM_ID_MAP.put(9339, new ItemInfo("Ruby bolts",true));
        ITEM_ID_MAP.put(9340, new ItemInfo("Diamond bolts",true));
        ITEM_ID_MAP.put(9341, new ItemInfo("Dragon bolts",true));
        ITEM_ID_MAP.put(9342, new ItemInfo("Onyx bolts",true));
        ITEM_ID_MAP.put(9375, new ItemInfo("Bronze bolts (unf)",true));
        ITEM_ID_MAP.put(9377, new ItemInfo("Iron bolts (unf)",true));
        ITEM_ID_MAP.put(9378, new ItemInfo("Steel bolts (unf)",true));
        ITEM_ID_MAP.put(9379, new ItemInfo("Mithril bolts (unf)",true));
        ITEM_ID_MAP.put(9380, new ItemInfo("Adamant bolts(unf)",true));
        ITEM_ID_MAP.put(9381, new ItemInfo("Runite bolts (unf)",true));
        ITEM_ID_MAP.put(9382, new ItemInfo("Silver bolts (unf)",true));
        ITEM_ID_MAP.put(9416, new ItemInfo("Mith grapple tip",true));
        ITEM_ID_MAP.put(9418, new ItemInfo("Mith grapple",true));
        ITEM_ID_MAP.put(9419, new ItemInfo("Mith grapple",true));
        ITEM_ID_MAP.put(9420, new ItemInfo("Bronze limbs",true));
        ITEM_ID_MAP.put(9423, new ItemInfo("Iron limbs",true));
        ITEM_ID_MAP.put(9425, new ItemInfo("Steel limbs",true));
        ITEM_ID_MAP.put(9427, new ItemInfo("Mithril limbs",true));
        ITEM_ID_MAP.put(9429, new ItemInfo("Adamantite limbs",true));
        ITEM_ID_MAP.put(9431, new ItemInfo("Runite limbs",true));
        ITEM_ID_MAP.put(9434, new ItemInfo("Bolt mould",true));
        ITEM_ID_MAP.put(9436, new ItemInfo("Sinew",true));
        ITEM_ID_MAP.put(9438, new ItemInfo("Crossbow string",true));
        ITEM_ID_MAP.put(9440, new ItemInfo("Wooden stock",true));
        ITEM_ID_MAP.put(9442, new ItemInfo("Oak stock",true));
        ITEM_ID_MAP.put(9444, new ItemInfo("Willow stock",true));
        ITEM_ID_MAP.put(9446, new ItemInfo("Teak stock",true));
        ITEM_ID_MAP.put(9448, new ItemInfo("Maple stock",true));
        ITEM_ID_MAP.put(9450, new ItemInfo("Mahogany stock",true));
        ITEM_ID_MAP.put(9452, new ItemInfo("Yew stock",true));
        ITEM_ID_MAP.put(9454, new ItemInfo("Bronze crossbow (u)",true));
        ITEM_ID_MAP.put(9457, new ItemInfo("Iron crossbow (u)",true));
        ITEM_ID_MAP.put(9459, new ItemInfo("Steel crossbow (u)",true));
        ITEM_ID_MAP.put(9461, new ItemInfo("Mithril crossbow (u)",true));
        ITEM_ID_MAP.put(9463, new ItemInfo("Adamant crossbow (u)",true));
        ITEM_ID_MAP.put(9465, new ItemInfo("Runite crossbow (u)",true));
        ITEM_ID_MAP.put(9469, new ItemInfo("Grand seed pod",true));
        ITEM_ID_MAP.put(9470, new ItemInfo("Gnome scarf",true));
        ITEM_ID_MAP.put(9472, new ItemInfo("Gnome goggles",true));
        ITEM_ID_MAP.put(9475, new ItemInfo("Mint cake",true));
        ITEM_ID_MAP.put(9629, new ItemInfo("Tyras helm",true));
        ITEM_ID_MAP.put(9634, new ItemInfo("Vyrewatch top",true));
        ITEM_ID_MAP.put(9636, new ItemInfo("Vyrewatch legs",true));
        ITEM_ID_MAP.put(9638, new ItemInfo("Vyrewatch shoes",true));
        ITEM_ID_MAP.put(9640, new ItemInfo("Citizen top",true));
        ITEM_ID_MAP.put(9642, new ItemInfo("Citizen trousers",true));
        ITEM_ID_MAP.put(9644, new ItemInfo("Citizen shoes",true));
        ITEM_ID_MAP.put(9666, new ItemInfo("Proselyte harness m",true));
        ITEM_ID_MAP.put(9668, new ItemInfo("Initiate harness m",true));
        ITEM_ID_MAP.put(9670, new ItemInfo("Proselyte harness f",true));
        ITEM_ID_MAP.put(9672, new ItemInfo("Proselyte sallet",true));
        ITEM_ID_MAP.put(9674, new ItemInfo("Proselyte hauberk",true));
        ITEM_ID_MAP.put(9676, new ItemInfo("Proselyte cuisse",true));
        ITEM_ID_MAP.put(9678, new ItemInfo("Proselyte tasset",true));
        ITEM_ID_MAP.put(9729, new ItemInfo("Elemental helmet",true));
        ITEM_ID_MAP.put(9731, new ItemInfo("Mind shield",true));
        ITEM_ID_MAP.put(9733, new ItemInfo("Mind helmet",true));
        ITEM_ID_MAP.put(9735, new ItemInfo("Desert goat horn",true));
        ITEM_ID_MAP.put(9736, new ItemInfo("Goat horn dust",true));
        ITEM_ID_MAP.put(9739, new ItemInfo("Combat potion(4)",true));
        ITEM_ID_MAP.put(9741, new ItemInfo("Combat potion(3)",true));
        ITEM_ID_MAP.put(9743, new ItemInfo("Combat potion(2)",true));
        ITEM_ID_MAP.put(9745, new ItemInfo("Combat potion(1)",true));
        ITEM_ID_MAP.put(9843, new ItemInfo("Oak cape rack",true));
        ITEM_ID_MAP.put(9844, new ItemInfo("Teak cape rack",true));
        ITEM_ID_MAP.put(9845, new ItemInfo("Mahogany cape rack",true));
        ITEM_ID_MAP.put(9846, new ItemInfo("Gilded cape rack",true));
        ITEM_ID_MAP.put(9847, new ItemInfo("Marble cape rack",true));
        ITEM_ID_MAP.put(9848, new ItemInfo("Magic cape rack",true));
        ITEM_ID_MAP.put(9849, new ItemInfo("Oak toy box",true));
        ITEM_ID_MAP.put(9850, new ItemInfo("Teak toy box",true));
        ITEM_ID_MAP.put(9851, new ItemInfo("Mahogany toy box",true));
        ITEM_ID_MAP.put(9852, new ItemInfo("Oak magic wardrobe",true));
        ITEM_ID_MAP.put(9853, new ItemInfo("Carved oak magic wardrobe",true));
        ITEM_ID_MAP.put(9854, new ItemInfo("Teak magic wardrobe",true));
        ITEM_ID_MAP.put(9855, new ItemInfo("Carved teak magic wardrobe",true));
        ITEM_ID_MAP.put(9856, new ItemInfo("Mahogany magic wardrobe",true));
        ITEM_ID_MAP.put(9857, new ItemInfo("Gilded magic wardrobe",true));
        ITEM_ID_MAP.put(9858, new ItemInfo("Marble magic wardrobe",true));
        ITEM_ID_MAP.put(9859, new ItemInfo("Oak armour case",true));
        ITEM_ID_MAP.put(9860, new ItemInfo("Teak armour case",true));
        ITEM_ID_MAP.put(9861, new ItemInfo("Mahogany armour case",true));
        ITEM_ID_MAP.put(9862, new ItemInfo("Oak treasure chest",true));
        ITEM_ID_MAP.put(9863, new ItemInfo("Teak treasure chest",true));
        ITEM_ID_MAP.put(9864, new ItemInfo("M. treasure chest",true));
        ITEM_ID_MAP.put(9865, new ItemInfo("Oak fancy dress box",true));
        ITEM_ID_MAP.put(9866, new ItemInfo("Teak fancy dress box",true));
        ITEM_ID_MAP.put(9867, new ItemInfo("Mahogany fancy dress box",true));
        ITEM_ID_MAP.put(9978, new ItemInfo("Raw bird meat",true));
        ITEM_ID_MAP.put(9980, new ItemInfo("Roast bird meat",true));
        ITEM_ID_MAP.put(9986, new ItemInfo("Raw beast meat",true));
        ITEM_ID_MAP.put(9988, new ItemInfo("Roast beast meat",true));
        ITEM_ID_MAP.put(9994, new ItemInfo("Spicy tomato",true));
        ITEM_ID_MAP.put(9996, new ItemInfo("Spicy minced meat",true));
        ITEM_ID_MAP.put(9998, new ItemInfo("Hunter potion(4)",true));
        ITEM_ID_MAP.put(10000, new ItemInfo("Hunter potion(3)",true));
        ITEM_ID_MAP.put(10002, new ItemInfo("Hunter potion(2)",true));
        ITEM_ID_MAP.put(10004, new ItemInfo("Hunter potion(1)",true));
        ITEM_ID_MAP.put(10006, new ItemInfo("Bird snare",true));
        ITEM_ID_MAP.put(10008, new ItemInfo("Box trap",true));
        ITEM_ID_MAP.put(10010, new ItemInfo("Butterfly net",true));
        ITEM_ID_MAP.put(10012, new ItemInfo("Butterfly jar",true));
        ITEM_ID_MAP.put(10014, new ItemInfo("Black warlock",true));
        ITEM_ID_MAP.put(10016, new ItemInfo("Snowy knight",true));
        ITEM_ID_MAP.put(10018, new ItemInfo("Sapphire glacialis",true));
        ITEM_ID_MAP.put(10020, new ItemInfo("Ruby harvest",true));
        ITEM_ID_MAP.put(10025, new ItemInfo("Magic box",true));
        ITEM_ID_MAP.put(10029, new ItemInfo("Teasing stick",true));
        ITEM_ID_MAP.put(10031, new ItemInfo("Rabbit snare",true));
        ITEM_ID_MAP.put(10033, new ItemInfo("Chinchompa",true));
        ITEM_ID_MAP.put(10034, new ItemInfo("Red chinchompa",true));
        ITEM_ID_MAP.put(10035, new ItemInfo("Kyatt legs",true));
        ITEM_ID_MAP.put(10037, new ItemInfo("Kyatt top",true));
        ITEM_ID_MAP.put(10039, new ItemInfo("Kyatt hat",true));
        ITEM_ID_MAP.put(10041, new ItemInfo("Larupia legs",true));
        ITEM_ID_MAP.put(10043, new ItemInfo("Larupia top",true));
        ITEM_ID_MAP.put(10045, new ItemInfo("Larupia hat",true));
        ITEM_ID_MAP.put(10047, new ItemInfo("Graahk legs",true));
        ITEM_ID_MAP.put(10049, new ItemInfo("Graahk top",true));
        ITEM_ID_MAP.put(10051, new ItemInfo("Graahk headdress",true));
        ITEM_ID_MAP.put(10053, new ItemInfo("Wood camo top",true));
        ITEM_ID_MAP.put(10055, new ItemInfo("Wood camo legs",true));
        ITEM_ID_MAP.put(10057, new ItemInfo("Jungle camo top",true));
        ITEM_ID_MAP.put(10059, new ItemInfo("Jungle camo legs",true));
        ITEM_ID_MAP.put(10061, new ItemInfo("Desert camo top",true));
        ITEM_ID_MAP.put(10063, new ItemInfo("Desert camo legs",true));
        ITEM_ID_MAP.put(10065, new ItemInfo("Polar camo top",true));
        ITEM_ID_MAP.put(10067, new ItemInfo("Polar camo legs",true));
        ITEM_ID_MAP.put(10069, new ItemInfo("Spotted cape",true));
        ITEM_ID_MAP.put(10071, new ItemInfo("Spottier cape",true));
        ITEM_ID_MAP.put(10075, new ItemInfo("Gloves of silence",true));
        ITEM_ID_MAP.put(10077, new ItemInfo("Spiky vambraces",true));
        ITEM_ID_MAP.put(10079, new ItemInfo("Green spiky vambs",true));
        ITEM_ID_MAP.put(10081, new ItemInfo("Blue spiky vambs",true));
        ITEM_ID_MAP.put(10083, new ItemInfo("Red spiky vambs",true));
        ITEM_ID_MAP.put(10085, new ItemInfo("Black spiky vambs",true));
        ITEM_ID_MAP.put(10087, new ItemInfo("Stripy feather",true));
        ITEM_ID_MAP.put(10088, new ItemInfo("Red feather",true));
        ITEM_ID_MAP.put(10089, new ItemInfo("Blue feather",true));
        ITEM_ID_MAP.put(10090, new ItemInfo("Yellow feather",true));
        ITEM_ID_MAP.put(10091, new ItemInfo("Orange feather",true));
        ITEM_ID_MAP.put(10093, new ItemInfo("Tatty larupia fur",true));
        ITEM_ID_MAP.put(10095, new ItemInfo("Larupia fur",true));
        ITEM_ID_MAP.put(10097, new ItemInfo("Tatty graahk fur",true));
        ITEM_ID_MAP.put(10099, new ItemInfo("Graahk fur",true));
        ITEM_ID_MAP.put(10101, new ItemInfo("Tatty kyatt fur",true));
        ITEM_ID_MAP.put(10103, new ItemInfo("Kyatt fur",true));
        ITEM_ID_MAP.put(10105, new ItemInfo("Kebbit spike",true));
        ITEM_ID_MAP.put(10107, new ItemInfo("Long kebbit spike",true));
        ITEM_ID_MAP.put(10109, new ItemInfo("Kebbit teeth",true));
        ITEM_ID_MAP.put(10111, new ItemInfo("Kebbit teeth dust",true));
        ITEM_ID_MAP.put(10113, new ItemInfo("Kebbit claws",true));
        ITEM_ID_MAP.put(10115, new ItemInfo("Dark kebbit fur",true));
        ITEM_ID_MAP.put(10117, new ItemInfo("Polar kebbit fur",true));
        ITEM_ID_MAP.put(10119, new ItemInfo("Feldip weasel fur",true));
        ITEM_ID_MAP.put(10121, new ItemInfo("Common kebbit fur",true));
        ITEM_ID_MAP.put(10123, new ItemInfo("Desert devil fur",true));
        ITEM_ID_MAP.put(10125, new ItemInfo("Spotted kebbit fur",true));
        ITEM_ID_MAP.put(10127, new ItemInfo("Dashing kebbit fur",true));
        ITEM_ID_MAP.put(10129, new ItemInfo("Barb-tail harpoon",true));
        ITEM_ID_MAP.put(10132, new ItemInfo("Strung rabbit foot",true));
        ITEM_ID_MAP.put(10134, new ItemInfo("Rabbit foot",true));
        ITEM_ID_MAP.put(10136, new ItemInfo("Rainbow fish",true));
        ITEM_ID_MAP.put(10138, new ItemInfo("Raw rainbow fish",true));
        ITEM_ID_MAP.put(10142, new ItemInfo("Guam tar",true));
        ITEM_ID_MAP.put(10143, new ItemInfo("Marrentill tar",true));
        ITEM_ID_MAP.put(10144, new ItemInfo("Tarromin tar",true));
        ITEM_ID_MAP.put(10145, new ItemInfo("Harralander tar",true));
        ITEM_ID_MAP.put(10146, new ItemInfo("Orange salamander",true));
        ITEM_ID_MAP.put(10147, new ItemInfo("Red salamander",true));
        ITEM_ID_MAP.put(10148, new ItemInfo("Black salamander",true));
        ITEM_ID_MAP.put(10149, new ItemInfo("Swamp lizard",true));
        ITEM_ID_MAP.put(10150, new ItemInfo("Noose wand",true));
        ITEM_ID_MAP.put(10156, new ItemInfo("Hunters' crossbow",true));
        ITEM_ID_MAP.put(10158, new ItemInfo("Kebbit bolts",true));
        ITEM_ID_MAP.put(10159, new ItemInfo("Long kebbit bolts",true));
        ITEM_ID_MAP.put(10280, new ItemInfo("Willow comp bow",false));
        ITEM_ID_MAP.put(10282, new ItemInfo("Yew comp bow",true));
        ITEM_ID_MAP.put(10284, new ItemInfo("Magic comp bow",true));
        ITEM_ID_MAP.put(10286, new ItemInfo("Rune helm (h1)",false));
        ITEM_ID_MAP.put(10288, new ItemInfo("Rune helm (h2)",false));
        ITEM_ID_MAP.put(10290, new ItemInfo("Rune helm (h3)",false));
        ITEM_ID_MAP.put(10292, new ItemInfo("Rune helm (h4)",false));
        ITEM_ID_MAP.put(10294, new ItemInfo("Rune helm (h5)",false));
        ITEM_ID_MAP.put(10296, new ItemInfo("Adamant helm (h1)",false));
        ITEM_ID_MAP.put(10298, new ItemInfo("Adamant helm (h2)",false));
        ITEM_ID_MAP.put(10300, new ItemInfo("Adamant helm (h3)",false));
        ITEM_ID_MAP.put(10302, new ItemInfo("Adamant helm (h4)",false));
        ITEM_ID_MAP.put(10304, new ItemInfo("Adamant helm (h5)",false));
        ITEM_ID_MAP.put(10306, new ItemInfo("Black helm (h1)",false));
        ITEM_ID_MAP.put(10308, new ItemInfo("Black helm (h2)",false));
        ITEM_ID_MAP.put(10310, new ItemInfo("Black helm (h3)",false));
        ITEM_ID_MAP.put(10312, new ItemInfo("Black helm (h4)",false));
        ITEM_ID_MAP.put(10314, new ItemInfo("Black helm (h5)",false));
        ITEM_ID_MAP.put(10316, new ItemInfo("Bob's red shirt",true));
        ITEM_ID_MAP.put(10318, new ItemInfo("Bob's blue shirt",true));
        ITEM_ID_MAP.put(10320, new ItemInfo("Bob's green shirt",true));
        ITEM_ID_MAP.put(10322, new ItemInfo("Bob's black shirt",true));
        ITEM_ID_MAP.put(10324, new ItemInfo("Bob's purple shirt",true));
        ITEM_ID_MAP.put(10326, new ItemInfo("Purple firelighter",true));
        ITEM_ID_MAP.put(10327, new ItemInfo("White firelighter",true));
        ITEM_ID_MAP.put(10330, new ItemInfo("3rd age range top",true));
        ITEM_ID_MAP.put(10332, new ItemInfo("3rd age range legs",true));
        ITEM_ID_MAP.put(10334, new ItemInfo("3rd age range coif",true));
        ITEM_ID_MAP.put(10336, new ItemInfo("3rd age vambraces",true));
        ITEM_ID_MAP.put(10338, new ItemInfo("3rd age robe top",true));
        ITEM_ID_MAP.put(10340, new ItemInfo("3rd age robe",true));
        ITEM_ID_MAP.put(10342, new ItemInfo("3rd age mage hat",true));
        ITEM_ID_MAP.put(10344, new ItemInfo("3rd age amulet",true));
        ITEM_ID_MAP.put(10346, new ItemInfo("3rd age platelegs",true));
        ITEM_ID_MAP.put(10348, new ItemInfo("3rd age platebody",true));
        ITEM_ID_MAP.put(10350, new ItemInfo("3rd age full helmet",true));
        ITEM_ID_MAP.put(10352, new ItemInfo("3rd age kiteshield",true));
        ITEM_ID_MAP.put(10354, new ItemInfo("Amulet of glory (t4)",true));
        ITEM_ID_MAP.put(10362, new ItemInfo("Amulet of glory (t)",true));
        ITEM_ID_MAP.put(10364, new ItemInfo("Strength amulet (t)",false));
        ITEM_ID_MAP.put(10366, new ItemInfo("Amulet of magic (t)",false));
        ITEM_ID_MAP.put(10368, new ItemInfo("Zamorak bracers",true));
        ITEM_ID_MAP.put(10370, new ItemInfo("Zamorak d'hide",true));
        ITEM_ID_MAP.put(10372, new ItemInfo("Zamorak chaps",true));
        ITEM_ID_MAP.put(10374, new ItemInfo("Zamorak coif",true));
        ITEM_ID_MAP.put(10376, new ItemInfo("Guthix bracers",true));
        ITEM_ID_MAP.put(10378, new ItemInfo("Guthix dragonhide",true));
        ITEM_ID_MAP.put(10380, new ItemInfo("Guthix chaps",true));
        ITEM_ID_MAP.put(10382, new ItemInfo("Guthix coif",true));
        ITEM_ID_MAP.put(10384, new ItemInfo("Saradomin bracers",true));
        ITEM_ID_MAP.put(10386, new ItemInfo("Saradomin d'hide",true));
        ITEM_ID_MAP.put(10388, new ItemInfo("Saradomin chaps",true));
        ITEM_ID_MAP.put(10390, new ItemInfo("Saradomin coif",true));
        ITEM_ID_MAP.put(10392, new ItemInfo("A powdered wig",true));
        ITEM_ID_MAP.put(10394, new ItemInfo("Flared trousers",true));
        ITEM_ID_MAP.put(10396, new ItemInfo("Pantaloons",true));
        ITEM_ID_MAP.put(10398, new ItemInfo("Sleeping cap",true));
        ITEM_ID_MAP.put(10400, new ItemInfo("Black elegant shirt",true));
        ITEM_ID_MAP.put(10402, new ItemInfo("Black elegant legs",true));
        ITEM_ID_MAP.put(10404, new ItemInfo("Red elegant shirt",true));
        ITEM_ID_MAP.put(10406, new ItemInfo("Red elegant legs",true));
        ITEM_ID_MAP.put(10408, new ItemInfo("Blue elegant shirt",true));
        ITEM_ID_MAP.put(10410, new ItemInfo("Blue elegant legs",true));
        ITEM_ID_MAP.put(10412, new ItemInfo("Green elegant shirt",true));
        ITEM_ID_MAP.put(10414, new ItemInfo("Green elegant legs",true));
        ITEM_ID_MAP.put(10416, new ItemInfo("Purple elegant shirt",true));
        ITEM_ID_MAP.put(10418, new ItemInfo("Purple elegant legs",true));
        ITEM_ID_MAP.put(10420, new ItemInfo("White elegant blouse",true));
        ITEM_ID_MAP.put(10422, new ItemInfo("White elegant skirt",true));
        ITEM_ID_MAP.put(10424, new ItemInfo("Red elegant blouse",true));
        ITEM_ID_MAP.put(10426, new ItemInfo("Red elegant skirt",true));
        ITEM_ID_MAP.put(10428, new ItemInfo("Blue elegant blouse",true));
        ITEM_ID_MAP.put(10430, new ItemInfo("Blue elegant skirt",true));
        ITEM_ID_MAP.put(10432, new ItemInfo("Green elegant blouse",true));
        ITEM_ID_MAP.put(10434, new ItemInfo("Green elegant skirt",true));
        ITEM_ID_MAP.put(10436, new ItemInfo("Purple elegant blouse",true));
        ITEM_ID_MAP.put(10438, new ItemInfo("Purple elegant skirt",true));
        ITEM_ID_MAP.put(10440, new ItemInfo("Saradomin crozier",true));
        ITEM_ID_MAP.put(10442, new ItemInfo("Guthix crozier",true));
        ITEM_ID_MAP.put(10444, new ItemInfo("Zamorak crozier",true));
        ITEM_ID_MAP.put(10446, new ItemInfo("Saradomin cloak",true));
        ITEM_ID_MAP.put(10448, new ItemInfo("Guthix cloak",true));
        ITEM_ID_MAP.put(10450, new ItemInfo("Zamorak cloak",true));
        ITEM_ID_MAP.put(10452, new ItemInfo("Saradomin mitre",true));
        ITEM_ID_MAP.put(10454, new ItemInfo("Guthix mitre",true));
        ITEM_ID_MAP.put(10456, new ItemInfo("Zamorak mitre",true));
        ITEM_ID_MAP.put(10458, new ItemInfo("Saradomin robe top",true));
        ITEM_ID_MAP.put(10460, new ItemInfo("Zamorak robe top",true));
        ITEM_ID_MAP.put(10462, new ItemInfo("Guthix robe top",true));
        ITEM_ID_MAP.put(10464, new ItemInfo("Saradomin robe legs",true));
        ITEM_ID_MAP.put(10466, new ItemInfo("Guthix robe legs",true));
        ITEM_ID_MAP.put(10468, new ItemInfo("Zamorak robe legs",true));
        ITEM_ID_MAP.put(10470, new ItemInfo("Saradomin stole",true));
        ITEM_ID_MAP.put(10472, new ItemInfo("Guthix stole",true));
        ITEM_ID_MAP.put(10474, new ItemInfo("Zamorak stole",true));
        ITEM_ID_MAP.put(10476, new ItemInfo("Purple sweets",true));
        ITEM_ID_MAP.put(10496, new ItemInfo("Polished buttons",true));
        ITEM_ID_MAP.put(10564, new ItemInfo("Granite body",true));
        ITEM_ID_MAP.put(10589, new ItemInfo("Granite helm",true));
        ITEM_ID_MAP.put(10808, new ItemInfo("Arctic pyre logs",true));
        ITEM_ID_MAP.put(10810, new ItemInfo("Arctic pine logs",true));
        ITEM_ID_MAP.put(10812, new ItemInfo("Split log",true));
        ITEM_ID_MAP.put(10814, new ItemInfo("Hair",true));
        ITEM_ID_MAP.put(10816, new ItemInfo("Raw yak meat",true));
        ITEM_ID_MAP.put(10818, new ItemInfo("Yak-hide",true));
        ITEM_ID_MAP.put(10820, new ItemInfo("Cured yak-hide",true));
        ITEM_ID_MAP.put(10822, new ItemInfo("Yak-hide armour",true));
        ITEM_ID_MAP.put(10824, new ItemInfo("Yak-hide armour",true));
        ITEM_ID_MAP.put(10826, new ItemInfo("Fremennik shield",true));
        ITEM_ID_MAP.put(10828, new ItemInfo("Helm of neitiznot",true));
        ITEM_ID_MAP.put(10891, new ItemInfo("Wooden cat",true));
        ITEM_ID_MAP.put(10925, new ItemInfo("Sanfew serum(4)",true));
        ITEM_ID_MAP.put(10927, new ItemInfo("Sanfew serum(3)",true));
        ITEM_ID_MAP.put(10929, new ItemInfo("Sanfew serum(2)",true));
        ITEM_ID_MAP.put(10931, new ItemInfo("Sanfew serum(1)",true));
        ITEM_ID_MAP.put(10937, new ItemInfo("Nail beast nails",true));
        ITEM_ID_MAP.put(10952, new ItemInfo("Slayer bell",true));
        ITEM_ID_MAP.put(10954, new ItemInfo("Frog-leather body",true));
        ITEM_ID_MAP.put(10956, new ItemInfo("Frog-leather chaps",true));
        ITEM_ID_MAP.put(10958, new ItemInfo("Frog-leather boots",true));
        ITEM_ID_MAP.put(10973, new ItemInfo("Light orb",true));
        ITEM_ID_MAP.put(10978, new ItemInfo("Swamp weed",true));
        ITEM_ID_MAP.put(10981, new ItemInfo("Cave goblin wire",true));
        ITEM_ID_MAP.put(10999, new ItemInfo("Goblin book",true));
        ITEM_ID_MAP.put(11037, new ItemInfo("Brine sabre",true));
        ITEM_ID_MAP.put(11061, new ItemInfo("Ancient mace",true));
        ITEM_ID_MAP.put(11065, new ItemInfo("Bracelet mould",true));
        ITEM_ID_MAP.put(11069, new ItemInfo("Gold bracelet",true));
        ITEM_ID_MAP.put(11072, new ItemInfo("Sapphire bracelet",true));
        ITEM_ID_MAP.put(11074, new ItemInfo("Bracelet of clay",true));
        ITEM_ID_MAP.put(11076, new ItemInfo("Emerald bracelet",true));
        ITEM_ID_MAP.put(11079, new ItemInfo("Castle wars bracelet(3)",true));
        ITEM_ID_MAP.put(11085, new ItemInfo("Ruby bracelet",true));
        ITEM_ID_MAP.put(11088, new ItemInfo("Inoculation bracelet",true));
        ITEM_ID_MAP.put(11090, new ItemInfo("Phoenix necklace",true));
        ITEM_ID_MAP.put(11092, new ItemInfo("Diamond bracelet",true));
        ITEM_ID_MAP.put(11095, new ItemInfo("Abyssal bracelet(5)",true));
        ITEM_ID_MAP.put(11105, new ItemInfo("Skills necklace(4)",true));
        ITEM_ID_MAP.put(11113, new ItemInfo("Skills necklace",true));
        ITEM_ID_MAP.put(11115, new ItemInfo("Dragonstone bracelet",true));
        ITEM_ID_MAP.put(11118, new ItemInfo("Combat bracelet(4)",true));
        ITEM_ID_MAP.put(11126, new ItemInfo("Combat bracelet",true));
        ITEM_ID_MAP.put(11128, new ItemInfo("Berserker necklace",true));
        ITEM_ID_MAP.put(11130, new ItemInfo("Onyx bracelet",true));
        ITEM_ID_MAP.put(11133, new ItemInfo("Regen bracelet",true));
        ITEM_ID_MAP.put(11200, new ItemInfo("Dwarven helmet",true));
        ITEM_ID_MAP.put(11205, new ItemInfo("Shrunk ogleroot",true));
        ITEM_ID_MAP.put(11212, new ItemInfo("Dragon arrow",true));
        ITEM_ID_MAP.put(11227, new ItemInfo("Dragon arrow(p)",true));
        ITEM_ID_MAP.put(11228, new ItemInfo("Dragon arrow(p+)",true));
        ITEM_ID_MAP.put(11229, new ItemInfo("Dragon arrow(p++)",true));
        ITEM_ID_MAP.put(11230, new ItemInfo("Dragon dart",true));
        ITEM_ID_MAP.put(11231, new ItemInfo("Dragon dart(p)",true));
        ITEM_ID_MAP.put(11232, new ItemInfo("Dragon dart tip",true));
        ITEM_ID_MAP.put(11233, new ItemInfo("Dragon dart(p+)",true));
        ITEM_ID_MAP.put(11234, new ItemInfo("Dragon dart(p++)",true));
        ITEM_ID_MAP.put(11235, new ItemInfo("Dark bow",true));
        ITEM_ID_MAP.put(11237, new ItemInfo("Dragon arrowtips",true));
        ITEM_ID_MAP.put(11238, new ItemInfo("Baby impling jar",true));
        ITEM_ID_MAP.put(11240, new ItemInfo("Young impling jar",true));
        ITEM_ID_MAP.put(11242, new ItemInfo("Gourmet impling jar",true));
        ITEM_ID_MAP.put(11244, new ItemInfo("Earth impling jar",true));
        ITEM_ID_MAP.put(11246, new ItemInfo("Essence impling jar",true));
        ITEM_ID_MAP.put(11248, new ItemInfo("Eclectic impling jar",true));
        ITEM_ID_MAP.put(11250, new ItemInfo("Nature impling jar",true));
        ITEM_ID_MAP.put(11252, new ItemInfo("Magpie impling jar",true));
        ITEM_ID_MAP.put(11254, new ItemInfo("Ninja impling jar",true));
        ITEM_ID_MAP.put(11256, new ItemInfo("Dragon impling jar",true));
        ITEM_ID_MAP.put(11260, new ItemInfo("Impling jar",true));
        ITEM_ID_MAP.put(11280, new ItemInfo("Cavalier mask",true));
        ITEM_ID_MAP.put(11284, new ItemInfo("Dragonfire shield",true));
        ITEM_ID_MAP.put(11286, new ItemInfo("Draconic visage",true));
        ITEM_ID_MAP.put(11324, new ItemInfo("Roe",true));
        ITEM_ID_MAP.put(11326, new ItemInfo("Caviar",true));
        ITEM_ID_MAP.put(11328, new ItemInfo("Leaping trout",true));
        ITEM_ID_MAP.put(11330, new ItemInfo("Leaping salmon",true));
        ITEM_ID_MAP.put(11332, new ItemInfo("Leaping sturgeon",true));
        ITEM_ID_MAP.put(11334, new ItemInfo("Fish offcuts",true));
        ITEM_ID_MAP.put(11335, new ItemInfo("Dragon full helm",true));
        ITEM_ID_MAP.put(11367, new ItemInfo("Bronze hasta",true));
        ITEM_ID_MAP.put(11369, new ItemInfo("Iron hasta",true));
        ITEM_ID_MAP.put(11371, new ItemInfo("Steel hasta",true));
        ITEM_ID_MAP.put(11373, new ItemInfo("Mithril hasta",true));
        ITEM_ID_MAP.put(11375, new ItemInfo("Adamant hasta",true));
        ITEM_ID_MAP.put(11377, new ItemInfo("Rune hasta",true));
        ITEM_ID_MAP.put(11379, new ItemInfo("Bronze hasta(p)",true));
        ITEM_ID_MAP.put(11382, new ItemInfo("Bronze hasta(p+)",true));
        ITEM_ID_MAP.put(11384, new ItemInfo("Bronze hasta(p++)",true));
        ITEM_ID_MAP.put(11386, new ItemInfo("Iron hasta(p)",true));
        ITEM_ID_MAP.put(11389, new ItemInfo("Iron hasta(p+)",true));
        ITEM_ID_MAP.put(11391, new ItemInfo("Iron hasta(p++)",true));
        ITEM_ID_MAP.put(11393, new ItemInfo("Steel hasta(p)",true));
        ITEM_ID_MAP.put(11396, new ItemInfo("Steel hasta(p+)",true));
        ITEM_ID_MAP.put(11398, new ItemInfo("Steel hasta(p++)",true));
        ITEM_ID_MAP.put(11400, new ItemInfo("Mithril hasta(p)",true));
        ITEM_ID_MAP.put(11403, new ItemInfo("Mithril hasta(p+)",true));
        ITEM_ID_MAP.put(11405, new ItemInfo("Mithril hasta(p++)",true));
        ITEM_ID_MAP.put(11407, new ItemInfo("Adamant hasta(p)",true));
        ITEM_ID_MAP.put(11410, new ItemInfo("Adamant hasta(p+)",true));
        ITEM_ID_MAP.put(11412, new ItemInfo("Adamant hasta(p++)",true));
        ITEM_ID_MAP.put(11414, new ItemInfo("Rune hasta(p)",true));
        ITEM_ID_MAP.put(11417, new ItemInfo("Rune hasta(p+)",true));
        ITEM_ID_MAP.put(11419, new ItemInfo("Rune hasta(p++)",true));
        ITEM_ID_MAP.put(11429, new ItemInfo("Attack mix(2)",true));
        ITEM_ID_MAP.put(11431, new ItemInfo("Attack mix(1)",true));
        ITEM_ID_MAP.put(11433, new ItemInfo("Antipoison mix(2)",true));
        ITEM_ID_MAP.put(11435, new ItemInfo("Antipoison mix(1)",true));
        ITEM_ID_MAP.put(11437, new ItemInfo("Relicym's mix(2)",true));
        ITEM_ID_MAP.put(11439, new ItemInfo("Relicym's mix(1)",true));
        ITEM_ID_MAP.put(11441, new ItemInfo("Strength mix(1)",true));
        ITEM_ID_MAP.put(11443, new ItemInfo("Strength mix(2)",true));
        ITEM_ID_MAP.put(11445, new ItemInfo("Combat mix(2)",true));
        ITEM_ID_MAP.put(11447, new ItemInfo("Combat mix(1)",true));
        ITEM_ID_MAP.put(11449, new ItemInfo("Restore mix(2)",true));
        ITEM_ID_MAP.put(11451, new ItemInfo("Restore mix(1)",true));
        ITEM_ID_MAP.put(11453, new ItemInfo("Energy mix(2)",true));
        ITEM_ID_MAP.put(11455, new ItemInfo("Energy mix(1)",true));
        ITEM_ID_MAP.put(11457, new ItemInfo("Defence mix(2)",true));
        ITEM_ID_MAP.put(11459, new ItemInfo("Defence mix(1)",true));
        ITEM_ID_MAP.put(11461, new ItemInfo("Agility mix(2)",true));
        ITEM_ID_MAP.put(11463, new ItemInfo("Agility mix(1)",true));
        ITEM_ID_MAP.put(11465, new ItemInfo("Prayer mix(2)",true));
        ITEM_ID_MAP.put(11467, new ItemInfo("Prayer mix(1)",true));
        ITEM_ID_MAP.put(11469, new ItemInfo("Superattack mix(2)",true));
        ITEM_ID_MAP.put(11471, new ItemInfo("Superattack mix(1)",true));
        ITEM_ID_MAP.put(11473, new ItemInfo("Anti-poison supermix(2)",true));
        ITEM_ID_MAP.put(11475, new ItemInfo("Anti-poison supermix(1)",true));
        ITEM_ID_MAP.put(11477, new ItemInfo("Fishing mix(2)",true));
        ITEM_ID_MAP.put(11479, new ItemInfo("Fishing mix(1)",true));
        ITEM_ID_MAP.put(11481, new ItemInfo("Super energy mix(2)",true));
        ITEM_ID_MAP.put(11483, new ItemInfo("Super energy mix(1)",true));
        ITEM_ID_MAP.put(11485, new ItemInfo("Super str. mix(2)",true));
        ITEM_ID_MAP.put(11487, new ItemInfo("Super str. mix(1)",true));
        ITEM_ID_MAP.put(11489, new ItemInfo("Magic essence mix(2)",true));
        ITEM_ID_MAP.put(11491, new ItemInfo("Magic essence mix(1)",true));
        ITEM_ID_MAP.put(11493, new ItemInfo("Super restore mix(2)",true));
        ITEM_ID_MAP.put(11495, new ItemInfo("Super restore mix(1)",true));
        ITEM_ID_MAP.put(11497, new ItemInfo("Super def. mix(2)",true));
        ITEM_ID_MAP.put(11499, new ItemInfo("Super def. mix(1)",true));
        ITEM_ID_MAP.put(11501, new ItemInfo("Antidote+ mix(2)",true));
        ITEM_ID_MAP.put(11503, new ItemInfo("Antidote+ mix(1)",true));
        ITEM_ID_MAP.put(11505, new ItemInfo("Antifire mix(2)",true));
        ITEM_ID_MAP.put(11507, new ItemInfo("Antifire mix(1)",true));
        ITEM_ID_MAP.put(11509, new ItemInfo("Ranging mix(2)",true));
        ITEM_ID_MAP.put(11511, new ItemInfo("Ranging mix(1)",true));
        ITEM_ID_MAP.put(11513, new ItemInfo("Magic mix(2)",true));
        ITEM_ID_MAP.put(11515, new ItemInfo("Magic mix(1)",true));
        ITEM_ID_MAP.put(11517, new ItemInfo("Hunting mix(2)",true));
        ITEM_ID_MAP.put(11519, new ItemInfo("Hunting mix(1)",true));
        ITEM_ID_MAP.put(11521, new ItemInfo("Zamorak mix(2)",true));
        ITEM_ID_MAP.put(11523, new ItemInfo("Zamorak mix(1)",true));
        ITEM_ID_MAP.put(11785, new ItemInfo("Armadyl crossbow",true));
        ITEM_ID_MAP.put(11787, new ItemInfo("Steam battlestaff",true));
        ITEM_ID_MAP.put(11789, new ItemInfo("Mystic steam staff",true));
        ITEM_ID_MAP.put(11791, new ItemInfo("Staff of the dead",true));
        ITEM_ID_MAP.put(11798, new ItemInfo("Godsword blade",true));
        ITEM_ID_MAP.put(11802, new ItemInfo("Armadyl godsword",true));
        ITEM_ID_MAP.put(11804, new ItemInfo("Bandos godsword",true));
        ITEM_ID_MAP.put(11806, new ItemInfo("Saradomin godsword",true));
        ITEM_ID_MAP.put(11808, new ItemInfo("Zamorak godsword",true));
        ITEM_ID_MAP.put(11810, new ItemInfo("Armadyl hilt",true));
        ITEM_ID_MAP.put(11812, new ItemInfo("Bandos hilt",true));
        ITEM_ID_MAP.put(11814, new ItemInfo("Saradomin hilt",true));
        ITEM_ID_MAP.put(11816, new ItemInfo("Zamorak hilt",true));
        ITEM_ID_MAP.put(11818, new ItemInfo("Godsword shard 1",true));
        ITEM_ID_MAP.put(11820, new ItemInfo("Godsword shard 2",true));
        ITEM_ID_MAP.put(11822, new ItemInfo("Godsword shard 3",true));
        ITEM_ID_MAP.put(11824, new ItemInfo("Zamorakian spear",true));
        ITEM_ID_MAP.put(11826, new ItemInfo("Armadyl helmet",true));
        ITEM_ID_MAP.put(11828, new ItemInfo("Armadyl chestplate",true));
        ITEM_ID_MAP.put(11830, new ItemInfo("Armadyl chainskirt",true));
        ITEM_ID_MAP.put(11832, new ItemInfo("Bandos chestplate",true));
        ITEM_ID_MAP.put(11834, new ItemInfo("Bandos tassets",true));
        ITEM_ID_MAP.put(11836, new ItemInfo("Bandos boots",true));
        ITEM_ID_MAP.put(11838, new ItemInfo("Saradomin sword",true));
        ITEM_ID_MAP.put(11840, new ItemInfo("Dragon boots",true));
        ITEM_ID_MAP.put(11874, new ItemInfo("Broad arrowheads",true));
        ITEM_ID_MAP.put(11875, new ItemInfo("Broad bolts",true));
        ITEM_ID_MAP.put(11876, new ItemInfo("Unfinished broad bolts",true));
        ITEM_ID_MAP.put(11889, new ItemInfo("Zamorakian hasta",true));
        ITEM_ID_MAP.put(11902, new ItemInfo("Leaf-bladed sword",true));
        ITEM_ID_MAP.put(11905, new ItemInfo("Trident of the seas (full)",true));
        ITEM_ID_MAP.put(11908, new ItemInfo("Uncharged trident",true));
        ITEM_ID_MAP.put(11920, new ItemInfo("Dragon pickaxe",true));
        ITEM_ID_MAP.put(11924, new ItemInfo("Malediction ward",true));
        ITEM_ID_MAP.put(11926, new ItemInfo("Odium ward",true));
        ITEM_ID_MAP.put(11928, new ItemInfo("Odium shard 1",true));
        ITEM_ID_MAP.put(11929, new ItemInfo("Odium shard 2",true));
        ITEM_ID_MAP.put(11930, new ItemInfo("Odium shard 3",true));
        ITEM_ID_MAP.put(11931, new ItemInfo("Malediction shard 1",true));
        ITEM_ID_MAP.put(11932, new ItemInfo("Malediction shard 2",true));
        ITEM_ID_MAP.put(11933, new ItemInfo("Malediction shard 3",true));
        ITEM_ID_MAP.put(11934, new ItemInfo("Raw dark crab",true));
        ITEM_ID_MAP.put(11936, new ItemInfo("Dark crab",true));
        ITEM_ID_MAP.put(11940, new ItemInfo("Dark fishing bait",true));
        ITEM_ID_MAP.put(11943, new ItemInfo("Lava dragon bones",true));
        ITEM_ID_MAP.put(11951, new ItemInfo("Extended antifire (4)",true));
        ITEM_ID_MAP.put(11953, new ItemInfo("Extended antifire (3)",true));
        ITEM_ID_MAP.put(11955, new ItemInfo("Extended antifire (2)",true));
        ITEM_ID_MAP.put(11957, new ItemInfo("Extended antifire (1)",true));
        ITEM_ID_MAP.put(11959, new ItemInfo("Black chinchompa",true));
        ITEM_ID_MAP.put(11960, new ItemInfo("Extended antifire mix(2)",true));
        ITEM_ID_MAP.put(11962, new ItemInfo("Extended antifire mix(1)",true));
        ITEM_ID_MAP.put(11964, new ItemInfo("Amulet of glory (t6)",true));
        ITEM_ID_MAP.put(11968, new ItemInfo("Skills necklace(6)",true));
        ITEM_ID_MAP.put(11972, new ItemInfo("Combat bracelet(6)",true));
        ITEM_ID_MAP.put(11978, new ItemInfo("Amulet of glory(6)",true));
        ITEM_ID_MAP.put(11980, new ItemInfo("Ring of wealth (5)",true));
        ITEM_ID_MAP.put(11990, new ItemInfo("Fedora",true));
        ITEM_ID_MAP.put(11992, new ItemInfo("Lava scale",true));
        ITEM_ID_MAP.put(11994, new ItemInfo("Lava scale shard",true));
        ITEM_ID_MAP.put(11998, new ItemInfo("Smoke battlestaff",true));
        ITEM_ID_MAP.put(12000, new ItemInfo("Mystic smoke staff",true));
        ITEM_ID_MAP.put(12002, new ItemInfo("Occult necklace",true));
        ITEM_ID_MAP.put(12004, new ItemInfo("Kraken tentacle",true));
        ITEM_ID_MAP.put(12007, new ItemInfo("Jar of dirt",true));
        ITEM_ID_MAP.put(12193, new ItemInfo("Ancient robe top",true));
        ITEM_ID_MAP.put(12195, new ItemInfo("Ancient robe legs",true));
        ITEM_ID_MAP.put(12197, new ItemInfo("Ancient cloak",true));
        ITEM_ID_MAP.put(12199, new ItemInfo("Ancient crozier",true));
        ITEM_ID_MAP.put(12201, new ItemInfo("Ancient stole",true));
        ITEM_ID_MAP.put(12203, new ItemInfo("Ancient mitre",true));
        ITEM_ID_MAP.put(12205, new ItemInfo("Bronze platebody (g)",false));
        ITEM_ID_MAP.put(12207, new ItemInfo("Bronze platelegs (g)",false));
        ITEM_ID_MAP.put(12209, new ItemInfo("Bronze plateskirt (g)",false));
        ITEM_ID_MAP.put(12211, new ItemInfo("Bronze full helm (g)",false));
        ITEM_ID_MAP.put(12213, new ItemInfo("Bronze kiteshield (g)",false));
        ITEM_ID_MAP.put(12215, new ItemInfo("Bronze platebody (t)",false));
        ITEM_ID_MAP.put(12217, new ItemInfo("Bronze platelegs (t)",false));
        ITEM_ID_MAP.put(12219, new ItemInfo("Bronze plateskirt (t)",false));
        ITEM_ID_MAP.put(12221, new ItemInfo("Bronze full helm (t)",false));
        ITEM_ID_MAP.put(12223, new ItemInfo("Bronze kiteshield (t)",false));
        ITEM_ID_MAP.put(12225, new ItemInfo("Iron platebody (t)",false));
        ITEM_ID_MAP.put(12227, new ItemInfo("Iron platelegs (t)",false));
        ITEM_ID_MAP.put(12229, new ItemInfo("Iron plateskirt (t)",false));
        ITEM_ID_MAP.put(12231, new ItemInfo("Iron full helm (t)",false));
        ITEM_ID_MAP.put(12233, new ItemInfo("Iron kiteshield (t)",false));
        ITEM_ID_MAP.put(12235, new ItemInfo("Iron platebody (g)",false));
        ITEM_ID_MAP.put(12237, new ItemInfo("Iron platelegs (g)",false));
        ITEM_ID_MAP.put(12239, new ItemInfo("Iron plateskirt (g)",false));
        ITEM_ID_MAP.put(12241, new ItemInfo("Iron full helm (g)",false));
        ITEM_ID_MAP.put(12243, new ItemInfo("Iron kiteshield (g)",false));
        ITEM_ID_MAP.put(12245, new ItemInfo("Beanie",true));
        ITEM_ID_MAP.put(12247, new ItemInfo("Red beret",true));
        ITEM_ID_MAP.put(12249, new ItemInfo("Imp mask",true));
        ITEM_ID_MAP.put(12251, new ItemInfo("Goblin mask",true));
        ITEM_ID_MAP.put(12253, new ItemInfo("Armadyl robe top",true));
        ITEM_ID_MAP.put(12255, new ItemInfo("Armadyl robe legs",true));
        ITEM_ID_MAP.put(12257, new ItemInfo("Armadyl stole",true));
        ITEM_ID_MAP.put(12259, new ItemInfo("Armadyl mitre",true));
        ITEM_ID_MAP.put(12261, new ItemInfo("Armadyl cloak",true));
        ITEM_ID_MAP.put(12263, new ItemInfo("Armadyl crozier",true));
        ITEM_ID_MAP.put(12265, new ItemInfo("Bandos robe top",true));
        ITEM_ID_MAP.put(12267, new ItemInfo("Bandos robe legs",true));
        ITEM_ID_MAP.put(12269, new ItemInfo("Bandos stole",true));
        ITEM_ID_MAP.put(12271, new ItemInfo("Bandos mitre",true));
        ITEM_ID_MAP.put(12273, new ItemInfo("Bandos cloak",true));
        ITEM_ID_MAP.put(12275, new ItemInfo("Bandos crozier",true));
        ITEM_ID_MAP.put(12277, new ItemInfo("Mithril platebody (g)",false));
        ITEM_ID_MAP.put(12279, new ItemInfo("Mithril platelegs (g)",false));
        ITEM_ID_MAP.put(12281, new ItemInfo("Mithril kiteshield (g)",false));
        ITEM_ID_MAP.put(12283, new ItemInfo("Mithril full helm (g)",false));
        ITEM_ID_MAP.put(12285, new ItemInfo("Mithril plateskirt (g)",false));
        ITEM_ID_MAP.put(12287, new ItemInfo("Mithril platebody (t)",false));
        ITEM_ID_MAP.put(12289, new ItemInfo("Mithril platelegs (t)",false));
        ITEM_ID_MAP.put(12291, new ItemInfo("Mithril kiteshield (t)",false));
        ITEM_ID_MAP.put(12293, new ItemInfo("Mithril full helm (t)",false));
        ITEM_ID_MAP.put(12295, new ItemInfo("Mithril plateskirt (t)",false));
        ITEM_ID_MAP.put(12297, new ItemInfo("Black pickaxe",false));
        ITEM_ID_MAP.put(12299, new ItemInfo("White headband",true));
        ITEM_ID_MAP.put(12301, new ItemInfo("Blue headband",true));
        ITEM_ID_MAP.put(12303, new ItemInfo("Gold headband",true));
        ITEM_ID_MAP.put(12305, new ItemInfo("Pink headband",true));
        ITEM_ID_MAP.put(12307, new ItemInfo("Green headband",true));
        ITEM_ID_MAP.put(12309, new ItemInfo("Pink boater",true));
        ITEM_ID_MAP.put(12311, new ItemInfo("Purple boater",true));
        ITEM_ID_MAP.put(12313, new ItemInfo("White boater",true));
        ITEM_ID_MAP.put(12315, new ItemInfo("Pink elegant shirt",true));
        ITEM_ID_MAP.put(12317, new ItemInfo("Pink elegant legs",true));
        ITEM_ID_MAP.put(12319, new ItemInfo("Crier hat",true));
        ITEM_ID_MAP.put(12321, new ItemInfo("White cavalier",true));
        ITEM_ID_MAP.put(12323, new ItemInfo("Red cavalier",true));
        ITEM_ID_MAP.put(12325, new ItemInfo("Navy cavalier",true));
        ITEM_ID_MAP.put(12327, new ItemInfo("Red d'hide body (g)",true));
        ITEM_ID_MAP.put(12329, new ItemInfo("Red d'hide chaps (g)",true));
        ITEM_ID_MAP.put(12331, new ItemInfo("Red d'hide body (t)",true));
        ITEM_ID_MAP.put(12333, new ItemInfo("Red d'hide chaps (t)",true));
        ITEM_ID_MAP.put(12335, new ItemInfo("Briefcase",true));
        ITEM_ID_MAP.put(12337, new ItemInfo("Sagacious spectacles",true));
        ITEM_ID_MAP.put(12339, new ItemInfo("Pink elegant blouse",true));
        ITEM_ID_MAP.put(12341, new ItemInfo("Pink elegant skirt",true));
        ITEM_ID_MAP.put(12343, new ItemInfo("Gold elegant blouse",true));
        ITEM_ID_MAP.put(12345, new ItemInfo("Gold elegant skirt",true));
        ITEM_ID_MAP.put(12347, new ItemInfo("Gold elegant shirt",true));
        ITEM_ID_MAP.put(12349, new ItemInfo("Gold elegant legs",true));
        ITEM_ID_MAP.put(12351, new ItemInfo("Musketeer hat",true));
        ITEM_ID_MAP.put(12353, new ItemInfo("Monocle",true));
        ITEM_ID_MAP.put(12355, new ItemInfo("Big pirate hat",true));
        ITEM_ID_MAP.put(12357, new ItemInfo("Katana",true));
        ITEM_ID_MAP.put(12359, new ItemInfo("Leprechaun hat",true));
        ITEM_ID_MAP.put(12361, new ItemInfo("Cat mask",true));
        ITEM_ID_MAP.put(12363, new ItemInfo("Bronze dragon mask",true));
        ITEM_ID_MAP.put(12365, new ItemInfo("Iron dragon mask",true));
        ITEM_ID_MAP.put(12367, new ItemInfo("Steel dragon mask",true));
        ITEM_ID_MAP.put(12369, new ItemInfo("Mithril dragon mask",true));
        ITEM_ID_MAP.put(12371, new ItemInfo("Lava dragon mask",true));
        ITEM_ID_MAP.put(12373, new ItemInfo("Dragon cane",true));
        ITEM_ID_MAP.put(12375, new ItemInfo("Black cane",true));
        ITEM_ID_MAP.put(12377, new ItemInfo("Adamant cane",true));
        ITEM_ID_MAP.put(12379, new ItemInfo("Rune cane",true));
        ITEM_ID_MAP.put(12381, new ItemInfo("Black d'hide body (g)",true));
        ITEM_ID_MAP.put(12383, new ItemInfo("Black d'hide chaps (g)",true));
        ITEM_ID_MAP.put(12385, new ItemInfo("Black d'hide body (t)",true));
        ITEM_ID_MAP.put(12387, new ItemInfo("Black d'hide chaps (t)",true));
        ITEM_ID_MAP.put(12389, new ItemInfo("Gilded scimitar",false));
        ITEM_ID_MAP.put(12391, new ItemInfo("Gilded boots",true));
        ITEM_ID_MAP.put(12393, new ItemInfo("Royal gown top",true));
        ITEM_ID_MAP.put(12395, new ItemInfo("Royal gown bottom",true));
        ITEM_ID_MAP.put(12397, new ItemInfo("Royal crown",true));
        ITEM_ID_MAP.put(12399, new ItemInfo("Partyhat & specs",true));
        ITEM_ID_MAP.put(12402, new ItemInfo("Nardah teleport",true));
        ITEM_ID_MAP.put(12403, new ItemInfo("Digsite teleport",true));
        ITEM_ID_MAP.put(12404, new ItemInfo("Feldip hills teleport",true));
        ITEM_ID_MAP.put(12405, new ItemInfo("Lunar isle teleport",true));
        ITEM_ID_MAP.put(12406, new ItemInfo("Mort'ton teleport",true));
        ITEM_ID_MAP.put(12407, new ItemInfo("Pest control teleport",true));
        ITEM_ID_MAP.put(12408, new ItemInfo("Piscatoris teleport",true));
        ITEM_ID_MAP.put(12409, new ItemInfo("Tai bwo wannai teleport",true));
        ITEM_ID_MAP.put(12410, new ItemInfo("Elf camp teleport",true));
        ITEM_ID_MAP.put(12411, new ItemInfo("Mos le'harmless teleport",true));
        ITEM_ID_MAP.put(12412, new ItemInfo("Pirate hat & patch",true));
        ITEM_ID_MAP.put(12422, new ItemInfo("3rd age wand",true));
        ITEM_ID_MAP.put(12424, new ItemInfo("3rd age bow",true));
        ITEM_ID_MAP.put(12426, new ItemInfo("3rd age longsword",true));
        ITEM_ID_MAP.put(12428, new ItemInfo("Penguin mask",true));
        ITEM_ID_MAP.put(12430, new ItemInfo("Afro",true));
        ITEM_ID_MAP.put(12432, new ItemInfo("Top hat",true));
        ITEM_ID_MAP.put(12434, new ItemInfo("Top hat & monocle",true));
        ITEM_ID_MAP.put(12437, new ItemInfo("3rd age cloak",true));
        ITEM_ID_MAP.put(12439, new ItemInfo("Royal sceptre",true));
        ITEM_ID_MAP.put(12441, new ItemInfo("Musketeer tabard",true));
        ITEM_ID_MAP.put(12443, new ItemInfo("Musketeer pants",true));
        ITEM_ID_MAP.put(12445, new ItemInfo("Black skirt (g)",false));
        ITEM_ID_MAP.put(12447, new ItemInfo("Black skirt (t)",false));
        ITEM_ID_MAP.put(12449, new ItemInfo("Black wizard robe (g)",false));
        ITEM_ID_MAP.put(12451, new ItemInfo("Black wizard robe (t)",false));
        ITEM_ID_MAP.put(12453, new ItemInfo("Black wizard hat (g)",false));
        ITEM_ID_MAP.put(12455, new ItemInfo("Black wizard hat (t)",false));
        ITEM_ID_MAP.put(12460, new ItemInfo("Ancient platebody",false));
        ITEM_ID_MAP.put(12462, new ItemInfo("Ancient platelegs",false));
        ITEM_ID_MAP.put(12464, new ItemInfo("Ancient plateskirt",false));
        ITEM_ID_MAP.put(12466, new ItemInfo("Ancient full helm",false));
        ITEM_ID_MAP.put(12468, new ItemInfo("Ancient kiteshield",false));
        ITEM_ID_MAP.put(12470, new ItemInfo("Armadyl platebody",false));
        ITEM_ID_MAP.put(12472, new ItemInfo("Armadyl platelegs",false));
        ITEM_ID_MAP.put(12474, new ItemInfo("Armadyl plateskirt",false));
        ITEM_ID_MAP.put(12476, new ItemInfo("Armadyl full helm",false));
        ITEM_ID_MAP.put(12478, new ItemInfo("Armadyl kiteshield",false));
        ITEM_ID_MAP.put(12480, new ItemInfo("Bandos platebody",false));
        ITEM_ID_MAP.put(12482, new ItemInfo("Bandos platelegs",false));
        ITEM_ID_MAP.put(12484, new ItemInfo("Bandos plateskirt",false));
        ITEM_ID_MAP.put(12486, new ItemInfo("Bandos full helm",false));
        ITEM_ID_MAP.put(12488, new ItemInfo("Bandos kiteshield",false));
        ITEM_ID_MAP.put(12490, new ItemInfo("Ancient bracers",true));
        ITEM_ID_MAP.put(12492, new ItemInfo("Ancient d'hide",true));
        ITEM_ID_MAP.put(12494, new ItemInfo("Ancient chaps",true));
        ITEM_ID_MAP.put(12496, new ItemInfo("Ancient coif",true));
        ITEM_ID_MAP.put(12498, new ItemInfo("Bandos bracers",true));
        ITEM_ID_MAP.put(12500, new ItemInfo("Bandos d'hide",true));
        ITEM_ID_MAP.put(12502, new ItemInfo("Bandos chaps",true));
        ITEM_ID_MAP.put(12504, new ItemInfo("Bandos coif",true));
        ITEM_ID_MAP.put(12506, new ItemInfo("Armadyl bracers",true));
        ITEM_ID_MAP.put(12508, new ItemInfo("Armadyl d'hide",true));
        ITEM_ID_MAP.put(12510, new ItemInfo("Armadyl chaps",true));
        ITEM_ID_MAP.put(12512, new ItemInfo("Armadyl coif",true));
        ITEM_ID_MAP.put(12514, new ItemInfo("Explorer backpack",true));
        ITEM_ID_MAP.put(12516, new ItemInfo("Pith helmet",true));
        ITEM_ID_MAP.put(12518, new ItemInfo("Green dragon mask",true));
        ITEM_ID_MAP.put(12520, new ItemInfo("Blue dragon mask",true));
        ITEM_ID_MAP.put(12522, new ItemInfo("Red dragon mask",true));
        ITEM_ID_MAP.put(12524, new ItemInfo("Black dragon mask",true));
        ITEM_ID_MAP.put(12526, new ItemInfo("Fury ornament kit",true));
        ITEM_ID_MAP.put(12528, new ItemInfo("Dark infinity colour kit",true));
        ITEM_ID_MAP.put(12530, new ItemInfo("Light infinity colour kit",true));
        ITEM_ID_MAP.put(12532, new ItemInfo("Dragon sq shield ornament kit",true));
        ITEM_ID_MAP.put(12534, new ItemInfo("Dragon chainbody ornament kit",true));
        ITEM_ID_MAP.put(12536, new ItemInfo("Dragon plate/skirt ornament kit",true));
        ITEM_ID_MAP.put(12538, new ItemInfo("Dragon full helm ornament kit",true));
        ITEM_ID_MAP.put(12540, new ItemInfo("Deerstalker",true));
        ITEM_ID_MAP.put(12596, new ItemInfo("Rangers' tunic",true));
        ITEM_ID_MAP.put(12598, new ItemInfo("Holy sandals",true));
        ITEM_ID_MAP.put(12601, new ItemInfo("Ring of the gods",true));
        ITEM_ID_MAP.put(12603, new ItemInfo("Tyrannical ring",true));
        ITEM_ID_MAP.put(12605, new ItemInfo("Treasonous ring",true));
        ITEM_ID_MAP.put(12613, new ItemInfo("Bandos page 1",true));
        ITEM_ID_MAP.put(12614, new ItemInfo("Bandos page 2",true));
        ITEM_ID_MAP.put(12615, new ItemInfo("Bandos page 3",true));
        ITEM_ID_MAP.put(12616, new ItemInfo("Bandos page 4",true));
        ITEM_ID_MAP.put(12617, new ItemInfo("Armadyl page 1",true));
        ITEM_ID_MAP.put(12618, new ItemInfo("Armadyl page 2",true));
        ITEM_ID_MAP.put(12619, new ItemInfo("Armadyl page 3",true));
        ITEM_ID_MAP.put(12620, new ItemInfo("Armadyl page 4",true));
        ITEM_ID_MAP.put(12621, new ItemInfo("Ancient page 1",true));
        ITEM_ID_MAP.put(12622, new ItemInfo("Ancient page 2",true));
        ITEM_ID_MAP.put(12623, new ItemInfo("Ancient page 3",true));
        ITEM_ID_MAP.put(12624, new ItemInfo("Ancient page 4",true));
        ITEM_ID_MAP.put(12625, new ItemInfo("Stamina potion(4)",true));
        ITEM_ID_MAP.put(12627, new ItemInfo("Stamina potion(3)",true));
        ITEM_ID_MAP.put(12629, new ItemInfo("Stamina potion(2)",true));
        ITEM_ID_MAP.put(12631, new ItemInfo("Stamina potion(1)",true));
        ITEM_ID_MAP.put(12633, new ItemInfo("Stamina mix(2)",true));
        ITEM_ID_MAP.put(12635, new ItemInfo("Stamina mix(1)",true));
        ITEM_ID_MAP.put(12640, new ItemInfo("Amylase crystal",true));
        ITEM_ID_MAP.put(12642, new ItemInfo("Lumberyard teleport",true));
        ITEM_ID_MAP.put(12695, new ItemInfo("Super combat potion(4)",true));
        ITEM_ID_MAP.put(12697, new ItemInfo("Super combat potion(3)",true));
        ITEM_ID_MAP.put(12699, new ItemInfo("Super combat potion(2)",true));
        ITEM_ID_MAP.put(12701, new ItemInfo("Super combat potion(1)",true));
        ITEM_ID_MAP.put(12757, new ItemInfo("Blue dark bow paint",true));
        ITEM_ID_MAP.put(12759, new ItemInfo("Green dark bow paint",true));
        ITEM_ID_MAP.put(12761, new ItemInfo("Yellow dark bow paint",true));
        ITEM_ID_MAP.put(12763, new ItemInfo("White dark bow paint",true));
        ITEM_ID_MAP.put(12769, new ItemInfo("Frozen whip mix",true));
        ITEM_ID_MAP.put(12771, new ItemInfo("Volcanic whip mix",true));
        ITEM_ID_MAP.put(12775, new ItemInfo("Annakarl teleport",true));
        ITEM_ID_MAP.put(12776, new ItemInfo("Carrallangar teleport",true));
        ITEM_ID_MAP.put(12777, new ItemInfo("Dareeyak teleport",true));
        ITEM_ID_MAP.put(12778, new ItemInfo("Ghorrock teleport",true));
        ITEM_ID_MAP.put(12779, new ItemInfo("Kharyrll teleport",true));
        ITEM_ID_MAP.put(12780, new ItemInfo("Lassar teleport",true));
        ITEM_ID_MAP.put(12781, new ItemInfo("Paddewwa teleport",true));
        ITEM_ID_MAP.put(12782, new ItemInfo("Senntisten teleport",true));
        ITEM_ID_MAP.put(12783, new ItemInfo("Ring of wealth scroll",true));
        ITEM_ID_MAP.put(12786, new ItemInfo("Magic shortbow scroll",true));
        ITEM_ID_MAP.put(12789, new ItemInfo("Clue box",true));
        ITEM_ID_MAP.put(12798, new ItemInfo("Steam staff upgrade kit",true));
        ITEM_ID_MAP.put(12800, new ItemInfo("Dragon pickaxe upgrade kit",true));
        ITEM_ID_MAP.put(12802, new ItemInfo("Ward upgrade kit",true));
        ITEM_ID_MAP.put(12804, new ItemInfo("Saradomin's tear",true));
        ITEM_ID_MAP.put(12817, new ItemInfo("Elysian spirit shield",true));
        ITEM_ID_MAP.put(12819, new ItemInfo("Elysian sigil",true));
        ITEM_ID_MAP.put(12821, new ItemInfo("Spectral spirit shield",true));
        ITEM_ID_MAP.put(12823, new ItemInfo("Spectral sigil",true));
        ITEM_ID_MAP.put(12825, new ItemInfo("Arcane spirit shield",true));
        ITEM_ID_MAP.put(12827, new ItemInfo("Arcane sigil",true));
        ITEM_ID_MAP.put(12829, new ItemInfo("Spirit shield",true));
        ITEM_ID_MAP.put(12831, new ItemInfo("Blessed spirit shield",true));
        ITEM_ID_MAP.put(12833, new ItemInfo("Holy elixir",true));
        ITEM_ID_MAP.put(12846, new ItemInfo("Bounty teleport scroll",true));
        ITEM_ID_MAP.put(12849, new ItemInfo("Granite clamp",true));
        ITEM_ID_MAP.put(12851, new ItemInfo("Amulet of the damned (full)",true));
        ITEM_ID_MAP.put(12863, new ItemInfo("Dwarf cannon set",true));
        ITEM_ID_MAP.put(12865, new ItemInfo("Green dragonhide set",false));
        ITEM_ID_MAP.put(12867, new ItemInfo("Blue dragonhide set",true));
        ITEM_ID_MAP.put(12869, new ItemInfo("Red dragonhide set",true));
        ITEM_ID_MAP.put(12871, new ItemInfo("Black dragonhide set",true));
        ITEM_ID_MAP.put(12873, new ItemInfo("Guthan's armour set",true));
        ITEM_ID_MAP.put(12875, new ItemInfo("Verac's armour set",true));
        ITEM_ID_MAP.put(12877, new ItemInfo("Dharok's armour set",true));
        ITEM_ID_MAP.put(12879, new ItemInfo("Torag's armour set",true));
        ITEM_ID_MAP.put(12881, new ItemInfo("Ahrim's armour set",true));
        ITEM_ID_MAP.put(12883, new ItemInfo("Karil's armour set",true));
        ITEM_ID_MAP.put(12885, new ItemInfo("Jar of sand",true));
        ITEM_ID_MAP.put(12900, new ItemInfo("Uncharged toxic trident",true));
        ITEM_ID_MAP.put(12902, new ItemInfo("Toxic staff (uncharged)",true));
        ITEM_ID_MAP.put(12905, new ItemInfo("Anti-venom(4)",true));
        ITEM_ID_MAP.put(12907, new ItemInfo("Anti-venom(3)",true));
        ITEM_ID_MAP.put(12909, new ItemInfo("Anti-venom(2)",true));
        ITEM_ID_MAP.put(12911, new ItemInfo("Anti-venom(1)",true));
        ITEM_ID_MAP.put(12913, new ItemInfo("Anti-venom+(4)",true));
        ITEM_ID_MAP.put(12915, new ItemInfo("Anti-venom+(3)",true));
        ITEM_ID_MAP.put(12917, new ItemInfo("Anti-venom+(2)",true));
        ITEM_ID_MAP.put(12919, new ItemInfo("Anti-venom+(1)",true));
        ITEM_ID_MAP.put(12922, new ItemInfo("Tanzanite fang",true));
        ITEM_ID_MAP.put(12924, new ItemInfo("Toxic blowpipe (empty)",true));
        ITEM_ID_MAP.put(12927, new ItemInfo("Serpentine visage",true));
        ITEM_ID_MAP.put(12929, new ItemInfo("Serpentine helm (uncharged)",true));
        ITEM_ID_MAP.put(12932, new ItemInfo("Magic fang",true));
        ITEM_ID_MAP.put(12934, new ItemInfo("Zulrah's scales",true));
        ITEM_ID_MAP.put(12936, new ItemInfo("Jar of swamp",true));
        ITEM_ID_MAP.put(12938, new ItemInfo("Zul-andra teleport",true));
        ITEM_ID_MAP.put(12960, new ItemInfo("Bronze set (lg)",false));
        ITEM_ID_MAP.put(12962, new ItemInfo("Bronze set (sk)",false));
        ITEM_ID_MAP.put(12964, new ItemInfo("Bronze trimmed set (lg)",false));
        ITEM_ID_MAP.put(12966, new ItemInfo("Bronze trimmed set (sk)",false));
        ITEM_ID_MAP.put(12968, new ItemInfo("Bronze gold-trimmed set (lg)",false));
        ITEM_ID_MAP.put(12970, new ItemInfo("Bronze gold-trimmed set (sk)",false));
        ITEM_ID_MAP.put(12972, new ItemInfo("Iron set (lg)",false));
        ITEM_ID_MAP.put(12974, new ItemInfo("Iron set (sk)",false));
        ITEM_ID_MAP.put(12976, new ItemInfo("Iron trimmed set (lg)",false));
        ITEM_ID_MAP.put(12978, new ItemInfo("Iron trimmed set (sk)",false));
        ITEM_ID_MAP.put(12980, new ItemInfo("Iron gold-trimmed set (lg)",false));
        ITEM_ID_MAP.put(12982, new ItemInfo("Iron gold-trimmed set (sk)",false));
        ITEM_ID_MAP.put(12984, new ItemInfo("Steel set (lg)",false));
        ITEM_ID_MAP.put(12986, new ItemInfo("Steel set (sk)",false));
        ITEM_ID_MAP.put(12988, new ItemInfo("Black set (lg)",false));
        ITEM_ID_MAP.put(12990, new ItemInfo("Black set (sk)",false));
        ITEM_ID_MAP.put(12992, new ItemInfo("Black trimmed set (lg)",false));
        ITEM_ID_MAP.put(12994, new ItemInfo("Black trimmed set (sk)",false));
        ITEM_ID_MAP.put(12996, new ItemInfo("Black gold-trimmed set (lg)",false));
        ITEM_ID_MAP.put(12998, new ItemInfo("Black gold-trimmed set (sk)",false));
        ITEM_ID_MAP.put(13000, new ItemInfo("Mithril set (lg)",false));
        ITEM_ID_MAP.put(13002, new ItemInfo("Mithril set (sk)",false));
        ITEM_ID_MAP.put(13004, new ItemInfo("Mithril trimmed set (lg)",false));
        ITEM_ID_MAP.put(13006, new ItemInfo("Mithril trimmed set (sk)",false));
        ITEM_ID_MAP.put(13008, new ItemInfo("Mithril gold-trimmed set (lg)",false));
        ITEM_ID_MAP.put(13010, new ItemInfo("Mithril gold-trimmed set (sk)",false));
        ITEM_ID_MAP.put(13012, new ItemInfo("Adamant set (lg)",false));
        ITEM_ID_MAP.put(13014, new ItemInfo("Adamant set (sk)",false));
        ITEM_ID_MAP.put(13016, new ItemInfo("Adamant trimmed set (lg)",false));
        ITEM_ID_MAP.put(13018, new ItemInfo("Adamant trimmed set (sk)",false));
        ITEM_ID_MAP.put(13020, new ItemInfo("Adamant gold-trimmed set (lg)",false));
        ITEM_ID_MAP.put(13022, new ItemInfo("Adamant gold-trimmed set (sk)",false));
        ITEM_ID_MAP.put(13024, new ItemInfo("Rune armour set (lg)",false));
        ITEM_ID_MAP.put(13026, new ItemInfo("Rune armour set (sk)",false));
        ITEM_ID_MAP.put(13028, new ItemInfo("Rune trimmed set (lg)",false));
        ITEM_ID_MAP.put(13030, new ItemInfo("Rune trimmed set (sk)",false));
        ITEM_ID_MAP.put(13032, new ItemInfo("Rune gold-trimmed set (lg)",false));
        ITEM_ID_MAP.put(13034, new ItemInfo("Rune gold-trimmed set (sk)",false));
        ITEM_ID_MAP.put(13036, new ItemInfo("Gilded armour set (lg)",false));
        ITEM_ID_MAP.put(13038, new ItemInfo("Gilded armour set (sk)",false));
        ITEM_ID_MAP.put(13040, new ItemInfo("Saradomin armour set (lg)",false));
        ITEM_ID_MAP.put(13042, new ItemInfo("Saradomin armour set (sk)",false));
        ITEM_ID_MAP.put(13044, new ItemInfo("Zamorak armour set (lg)",false));
        ITEM_ID_MAP.put(13046, new ItemInfo("Zamorak armour set (sk)",false));
        ITEM_ID_MAP.put(13048, new ItemInfo("Guthix armour set (lg)",false));
        ITEM_ID_MAP.put(13050, new ItemInfo("Guthix armour set (sk)",false));
        ITEM_ID_MAP.put(13052, new ItemInfo("Armadyl rune armour set (lg)",false));
        ITEM_ID_MAP.put(13054, new ItemInfo("Armadyl rune armour set (sk)",false));
        ITEM_ID_MAP.put(13056, new ItemInfo("Bandos rune armour set (lg)",false));
        ITEM_ID_MAP.put(13058, new ItemInfo("Bandos rune armour set (sk)",false));
        ITEM_ID_MAP.put(13060, new ItemInfo("Ancient rune armour set (lg)",false));
        ITEM_ID_MAP.put(13062, new ItemInfo("Ancient rune armour set (sk)",false));
        ITEM_ID_MAP.put(13064, new ItemInfo("Combat potion set",true));
        ITEM_ID_MAP.put(13066, new ItemInfo("Super potion set",true));
        ITEM_ID_MAP.put(13149, new ItemInfo("Holy book page set",true));
        ITEM_ID_MAP.put(13151, new ItemInfo("Unholy book page set",true));
        ITEM_ID_MAP.put(13153, new ItemInfo("Book of balance page set",true));
        ITEM_ID_MAP.put(13155, new ItemInfo("Book of war page set",true));
        ITEM_ID_MAP.put(13157, new ItemInfo("Book of law page set",true));
        ITEM_ID_MAP.put(13159, new ItemInfo("Book of darkness page set",true));
        ITEM_ID_MAP.put(13161, new ItemInfo("Zamorak dragonhide set",true));
        ITEM_ID_MAP.put(13163, new ItemInfo("Saradomin dragonhide set",true));
        ITEM_ID_MAP.put(13165, new ItemInfo("Guthix dragonhide set",true));
        ITEM_ID_MAP.put(13167, new ItemInfo("Bandos dragonhide set",true));
        ITEM_ID_MAP.put(13169, new ItemInfo("Armadyl dragonhide set",true));
        ITEM_ID_MAP.put(13171, new ItemInfo("Ancient dragonhide set",true));
        ITEM_ID_MAP.put(13173, new ItemInfo("Partyhat set",false));
        ITEM_ID_MAP.put(13175, new ItemInfo("Halloween mask set",false));
        ITEM_ID_MAP.put(13190, new ItemInfo("Old school bond",false));
        ITEM_ID_MAP.put(13227, new ItemInfo("Eternal crystal",true));
        ITEM_ID_MAP.put(13229, new ItemInfo("Pegasian crystal",true));
        ITEM_ID_MAP.put(13231, new ItemInfo("Primordial crystal",true));
        ITEM_ID_MAP.put(13233, new ItemInfo("Smouldering stone",true));
        ITEM_ID_MAP.put(13235, new ItemInfo("Eternal boots",true));
        ITEM_ID_MAP.put(13237, new ItemInfo("Pegasian boots",true));
        ITEM_ID_MAP.put(13239, new ItemInfo("Primordial boots",true));
        ITEM_ID_MAP.put(13245, new ItemInfo("Jar of souls",true));
        ITEM_ID_MAP.put(13256, new ItemInfo("Saradomin's light",true));
        ITEM_ID_MAP.put(13263, new ItemInfo("Abyssal bludgeon",true));
        ITEM_ID_MAP.put(13265, new ItemInfo("Abyssal dagger",true));
        ITEM_ID_MAP.put(13267, new ItemInfo("Abyssal dagger (p)",true));
        ITEM_ID_MAP.put(13269, new ItemInfo("Abyssal dagger (p+)",true));
        ITEM_ID_MAP.put(13271, new ItemInfo("Abyssal dagger (p++)",true));
        ITEM_ID_MAP.put(13277, new ItemInfo("Jar of miasma",true));
        ITEM_ID_MAP.put(13383, new ItemInfo("Xerician fabric",true));
        ITEM_ID_MAP.put(13385, new ItemInfo("Xerician hat",true));
        ITEM_ID_MAP.put(13387, new ItemInfo("Xerician top",true));
        ITEM_ID_MAP.put(13389, new ItemInfo("Xerician robe",true));
        ITEM_ID_MAP.put(13391, new ItemInfo("Lizardman fang",true));
        ITEM_ID_MAP.put(13421, new ItemInfo("Saltpetre",true));
        ITEM_ID_MAP.put(13431, new ItemInfo("Sandworms",true));
        ITEM_ID_MAP.put(13439, new ItemInfo("Raw anglerfish",true));
        ITEM_ID_MAP.put(13441, new ItemInfo("Anglerfish",true));
        ITEM_ID_MAP.put(13448, new ItemInfo("Ensouled goblin head",true));
        ITEM_ID_MAP.put(13451, new ItemInfo("Ensouled monkey head",true));
        ITEM_ID_MAP.put(13454, new ItemInfo("Ensouled imp head",true));
        ITEM_ID_MAP.put(13457, new ItemInfo("Ensouled minotaur head",true));
        ITEM_ID_MAP.put(13460, new ItemInfo("Ensouled scorpion head",true));
        ITEM_ID_MAP.put(13463, new ItemInfo("Ensouled bear head",true));
        ITEM_ID_MAP.put(13466, new ItemInfo("Ensouled unicorn head",true));
        ITEM_ID_MAP.put(13469, new ItemInfo("Ensouled dog head",true));
        ITEM_ID_MAP.put(13472, new ItemInfo("Ensouled chaos druid head",true));
        ITEM_ID_MAP.put(13475, new ItemInfo("Ensouled giant head",true));
        ITEM_ID_MAP.put(13478, new ItemInfo("Ensouled ogre head",true));
        ITEM_ID_MAP.put(13481, new ItemInfo("Ensouled elf head",true));
        ITEM_ID_MAP.put(13484, new ItemInfo("Ensouled troll head",true));
        ITEM_ID_MAP.put(13487, new ItemInfo("Ensouled horror head",true));
        ITEM_ID_MAP.put(13490, new ItemInfo("Ensouled kalphite head",true));
        ITEM_ID_MAP.put(13493, new ItemInfo("Ensouled dagannoth head",true));
        ITEM_ID_MAP.put(13496, new ItemInfo("Ensouled bloodveld head",true));
        ITEM_ID_MAP.put(13499, new ItemInfo("Ensouled tzhaar head",true));
        ITEM_ID_MAP.put(13502, new ItemInfo("Ensouled demon head",true));
        ITEM_ID_MAP.put(13505, new ItemInfo("Ensouled aviansie head",true));
        ITEM_ID_MAP.put(13508, new ItemInfo("Ensouled abyssal head",true));
        ITEM_ID_MAP.put(13511, new ItemInfo("Ensouled dragon head",true));
        ITEM_ID_MAP.put(13573, new ItemInfo("Dynamite",true));
        ITEM_ID_MAP.put(13576, new ItemInfo("Dragon warhammer",true));
        ITEM_ID_MAP.put(13657, new ItemInfo("Grape seed",true));
        ITEM_ID_MAP.put(19478, new ItemInfo("Light ballista",true));
        ITEM_ID_MAP.put(19481, new ItemInfo("Heavy ballista",true));
        ITEM_ID_MAP.put(19484, new ItemInfo("Dragon javelin",true));
        ITEM_ID_MAP.put(19486, new ItemInfo("Dragon javelin(p)",true));
        ITEM_ID_MAP.put(19488, new ItemInfo("Dragon javelin(p+)",true));
        ITEM_ID_MAP.put(19490, new ItemInfo("Dragon javelin(p++)",true));
        ITEM_ID_MAP.put(19493, new ItemInfo("Zenyte",true));
        ITEM_ID_MAP.put(19496, new ItemInfo("Uncut zenyte",true));
        ITEM_ID_MAP.put(19501, new ItemInfo("Zenyte amulet (u)",true));
        ITEM_ID_MAP.put(19529, new ItemInfo("Zenyte shard",true));
        ITEM_ID_MAP.put(19532, new ItemInfo("Zenyte bracelet",true));
        ITEM_ID_MAP.put(19535, new ItemInfo("Zenyte necklace",true));
        ITEM_ID_MAP.put(19538, new ItemInfo("Zenyte ring",true));
        ITEM_ID_MAP.put(19541, new ItemInfo("Zenyte amulet",true));
        ITEM_ID_MAP.put(19544, new ItemInfo("Tormented bracelet",true));
        ITEM_ID_MAP.put(19547, new ItemInfo("Necklace of anguish",true));
        ITEM_ID_MAP.put(19550, new ItemInfo("Ring of suffering",true));
        ITEM_ID_MAP.put(19553, new ItemInfo("Amulet of torture",true));
        ITEM_ID_MAP.put(19570, new ItemInfo("Bronze javelin heads",true));
        ITEM_ID_MAP.put(19572, new ItemInfo("Iron javelin heads",true));
        ITEM_ID_MAP.put(19574, new ItemInfo("Steel javelin heads",true));
        ITEM_ID_MAP.put(19576, new ItemInfo("Mithril javelin heads",true));
        ITEM_ID_MAP.put(19578, new ItemInfo("Adamant javelin heads",true));
        ITEM_ID_MAP.put(19580, new ItemInfo("Rune javelin heads",true));
        ITEM_ID_MAP.put(19582, new ItemInfo("Dragon javelin heads",true));
        ITEM_ID_MAP.put(19584, new ItemInfo("Javelin shaft",true));
        ITEM_ID_MAP.put(19586, new ItemInfo("Light frame",true));
        ITEM_ID_MAP.put(19589, new ItemInfo("Heavy frame",true));
        ITEM_ID_MAP.put(19592, new ItemInfo("Ballista limbs",true));
        ITEM_ID_MAP.put(19595, new ItemInfo("Incomplete light ballista",true));
        ITEM_ID_MAP.put(19598, new ItemInfo("Incomplete heavy ballista",true));
        ITEM_ID_MAP.put(19601, new ItemInfo("Ballista spring",true));
        ITEM_ID_MAP.put(19604, new ItemInfo("Unstrung light ballista",true));
        ITEM_ID_MAP.put(19607, new ItemInfo("Unstrung heavy ballista",true));
        ITEM_ID_MAP.put(19610, new ItemInfo("Monkey tail",true));
        ITEM_ID_MAP.put(19613, new ItemInfo("Lumbridge graveyard teleport",true));
        ITEM_ID_MAP.put(19615, new ItemInfo("Draynor manor teleport",true));
        ITEM_ID_MAP.put(19617, new ItemInfo("Mind altar teleport",true));
        ITEM_ID_MAP.put(19619, new ItemInfo("Salve graveyard teleport",true));
        ITEM_ID_MAP.put(19621, new ItemInfo("Fenkenstrain's castle teleport",true));
        ITEM_ID_MAP.put(19623, new ItemInfo("West ardougne teleport",true));
        ITEM_ID_MAP.put(19625, new ItemInfo("Harmony island teleport",true));
        ITEM_ID_MAP.put(19627, new ItemInfo("Cemetery teleport",true));
        ITEM_ID_MAP.put(19629, new ItemInfo("Barrows teleport",true));
        ITEM_ID_MAP.put(19631, new ItemInfo("Ape atoll teleport",true));
        ITEM_ID_MAP.put(19653, new ItemInfo("Golovanova fruit top",true));
        ITEM_ID_MAP.put(19656, new ItemInfo("Uncooked botanical pie",true));
        ITEM_ID_MAP.put(19662, new ItemInfo("Botanical pie",true));
        ITEM_ID_MAP.put(19665, new ItemInfo("Damaged monkey tail",true));
        ITEM_ID_MAP.put(19669, new ItemInfo("Redwood logs",true));
        ITEM_ID_MAP.put(19672, new ItemInfo("Redwood pyre logs",true));
        ITEM_ID_MAP.put(19701, new ItemInfo("Jar of darkness",true));
    }

    private static class ItemInfo {

        private String itemName;
        private boolean members;

        public ItemInfo(String itemName, boolean members) {
            this.itemName = itemName;
            this.members = members;
        }

        public String getItemName() {
            return itemName;
        }

        public boolean isMembers() {
            return members;
        }
    }

}
